{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":240},"end":{"line":11,"column":31,"index":271}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native-web/dist/exports/NativeEventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"xz5jlo6T6HDQTGZtt+KjhBgRCYs="}},{"name":"./LogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":324},"end":{"line":14,"column":51,"index":375}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"./LogContext","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":421},"end":{"line":16,"column":42,"index":463}}],"key":"kGImKxkw63YPqgqpZNc3AmpR2Dw="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":464},"end":{"line":17,"column":56,"index":520}}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA="}},{"name":"../modules/NativeLogBox","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0,"index":619},"end":{"line":19,"column":51,"index":670}}],"key":"NTvdbGUmIHULO0RkMjL+tUhSQXY="}},{"name":"../modules/parseErrorStack","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":671},"end":{"line":20,"column":57,"index":728}}],"key":"SH6uLr2ZPj4VAiGhupQ1HY3anDk="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"o13xJBIQrtUiTCNVAdR54EGZcWw="}},{"name":"../modules/ExceptionsManager","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":85,"column":28,"index":2233},"end":{"line":85,"column":67,"index":2272}}],"key":"QTNFgvUCEDySwBvIlFx8vxVZSCc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use client';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.reportUnexpectedLogBoxError = reportUnexpectedLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _NativeEventEmitter = _interopRequireDefault(require(_dependencyMap[2], \"react-native-web/dist/exports/NativeEventEmitter\"));\n  var _LogBoxLog = require(_dependencyMap[3], \"./LogBoxLog\");\n  var _LogContext = require(_dependencyMap[4], \"./LogContext\");\n  var _parseLogBoxLog = require(_dependencyMap[5], \"./parseLogBoxLog\");\n  var _NativeLogBox = _interopRequireDefault(require(_dependencyMap[6], \"../modules/NativeLogBox\"));\n  var _parseErrorStack = _interopRequireDefault(require(_dependencyMap[7], \"../modules/parseErrorStack\"));\n  var _jsxDevRuntime = require(_dependencyMap[8], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\Users\\\\Saidi\\\\OneDrive\\\\Documents\\\\Semeter4\\\\Pemerograman_Web\\\\Microservice\\\\mobile\\\\node_modules\\\\@expo\\\\metro-runtime\\\\src\\\\error-overlay\\\\Data\\\\LogBoxData.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  const observers = new Set();\n  const ignorePatterns = new Set();\n  let logs = new Set();\n  let updateTimeout = null;\n  let _isDisabled = false;\n  let _selectedIndex = -1;\n  const LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    const ExceptionsManager = require(_dependencyMap[9], \"../modules/ExceptionsManager\").default;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error);\n  }\n  function reportUnexpectedLogBoxError(error, componentStack) {\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    return reportLogBoxError(error, componentStack);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (const pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function setImmediateShim(callback) {\n    if (!global.setImmediate) {\n      return setTimeout(callback, 0);\n    }\n    return global.setImmediate(callback);\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediateShim(() => {\n        updateTimeout = null;\n        const nextState = getNextState();\n        observers.forEach(({\n          observer\n        }) => observer(nextState));\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    const lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      const OPTIMISTIC_WAIT_TIME = 1000;\n      let addPendingLog = () => {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        addPendingLog = null;\n      };\n      const optimisticTimeout = setTimeout(() => {\n        if (addPendingLog) {\n          addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n\n      // TODO: HANDLE THIS\n      newLog.symbolicate('component');\n      newLog.symbolicate('stack', status => {\n        if (addPendingLog && status !== 'PENDING') {\n          addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    const errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        const stack = (0, _parseErrorStack.default)(errorForStackTrace?.stack);\n        appendNewLog(new _LogBoxLog.LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportUnexpectedLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        appendNewLog(new _LogBoxLog.LogBoxLog((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportUnexpectedLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(type, log) {\n    log.symbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(type, log) {\n    log.retrySymbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(type, log) {\n    log.symbolicate(type);\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    const oldIndex = _selectedIndex;\n    let newIndex = proposedNewIndex;\n    const logArray = Array.from(logs);\n    let index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(() => {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    const newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    const newLogs = Array.from(logs).filter(log => log.level !== 'error' && log.level !== 'fatal');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    const existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(pattern => {\n      if (pattern instanceof RegExp) {\n        for (const existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(log => !isMessageIgnored(log.message.content)));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    const subscription = {\n      observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  const emitter = new _NativeEventEmitter.default({\n    addListener() {},\n    removeListeners() {}\n  });\n  function withSubscription(WrappedComponent) {\n    class LogBoxStateSubscription extends React.Component {\n      static getDerivedStateFromError() {\n        return {\n          hasError: true\n        };\n      }\n      constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'development') {\n          emitter.addListener('devLoadingView:hide', () => {\n            if (this.state.hasError) {\n              this.retry();\n            }\n          });\n        }\n      }\n      componentDidCatch(err, errorInfo) {\n        /* $FlowFixMe[class-object-subtyping] added when improving typing for\n         * this parameters */\n        reportLogBoxError(err, errorInfo.componentStack);\n      }\n      state = {\n        logs: new Set(),\n        isDisabled: false,\n        hasError: false,\n        selectedLogIndex: -1\n      };\n      retry = () => {\n        return new Promise(resolve => {\n          this.setState({\n            hasError: false\n          }, () => {\n            resolve();\n          });\n        });\n      };\n      render() {\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_LogContext.LogContext.Provider, {\n          value: {\n            selectedLogIndex: this.state.selectedLogIndex,\n            isDisabled: this.state.isDisabled,\n            logs: Array.from(this.state.logs)\n          },\n          children: [this.state.hasError ? null : this.props.children, /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(WrappedComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }, this);\n      }\n      componentDidMount() {\n        this._subscription = observe(data => {\n          // Ignore the initial empty log\n          if (data.selectedLogIndex === -1) return;\n          React.startTransition(() => {\n            this.setState(data);\n          });\n        });\n      }\n      componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.unsubscribe();\n        }\n      }\n      _handleDismiss = () => {\n        // Here we handle the cases when the log is dismissed and it\n        // was either the last log, or when the current index\n        // is now outside the bounds of the log array.\n        const {\n          selectedLogIndex,\n          logs: stateLogs\n        } = this.state;\n        const logsArray = Array.from(stateLogs);\n        if (selectedLogIndex != null) {\n          if (logsArray.length - 1 <= 0) {\n            setSelectedLog(-1);\n          } else if (selectedLogIndex >= logsArray.length - 1) {\n            setSelectedLog(selectedLogIndex - 1);\n          }\n          dismiss(logsArray[selectedLogIndex]);\n        }\n      };\n      _handleMinimize = () => {\n        setSelectedLog(-1);\n      };\n      _handleSetSelectedLog = index => {\n        setSelectedLog(index);\n      };\n    }\n\n    // @ts-expect-error\n    return LogBoxStateSubscription;\n  }\n});","lineCount":404,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[10,2,9,0],[10,14,9,12],[12,2,9,13],[12,6,9,13,"_interopRequireDefault"],[12,28,9,13],[12,31,9,13,"require"],[12,38,9,13],[12,39,9,13,"_dependencyMap"],[12,53,9,13],[13,2,9,13,"Object"],[13,8,9,13],[13,9,9,13,"defineProperty"],[13,23,9,13],[13,24,9,13,"exports"],[13,31,9,13],[14,4,9,13,"value"],[14,9,9,13],[15,2,9,13],[16,2,9,13,"exports"],[16,9,9,13],[16,10,9,13,"addException"],[16,22,9,13],[16,25,9,13,"addException"],[16,37,9,13],[17,2,9,13,"exports"],[17,9,9,13],[17,10,9,13,"addIgnorePatterns"],[17,27,9,13],[17,30,9,13,"addIgnorePatterns"],[17,47,9,13],[18,2,9,13,"exports"],[18,9,9,13],[18,10,9,13,"addLog"],[18,16,9,13],[18,19,9,13,"addLog"],[18,25,9,13],[19,2,9,13,"exports"],[19,9,9,13],[19,10,9,13,"clear"],[19,15,9,13],[19,18,9,13,"clear"],[19,23,9,13],[20,2,9,13,"exports"],[20,9,9,13],[20,10,9,13,"clearErrors"],[20,21,9,13],[20,24,9,13,"clearErrors"],[20,35,9,13],[21,2,9,13,"exports"],[21,9,9,13],[21,10,9,13,"clearWarnings"],[21,23,9,13],[21,26,9,13,"clearWarnings"],[21,39,9,13],[22,2,9,13,"exports"],[22,9,9,13],[22,10,9,13,"dismiss"],[22,17,9,13],[22,20,9,13,"dismiss"],[22,27,9,13],[23,2,9,13,"exports"],[23,9,9,13],[23,10,9,13,"getIgnorePatterns"],[23,27,9,13],[23,30,9,13,"getIgnorePatterns"],[23,47,9,13],[24,2,9,13,"exports"],[24,9,9,13],[24,10,9,13,"isDisabled"],[24,20,9,13],[24,23,9,13,"isDisabled"],[24,33,9,13],[25,2,9,13,"exports"],[25,9,9,13],[25,10,9,13,"isLogBoxErrorMessage"],[25,30,9,13],[25,33,9,13,"isLogBoxErrorMessage"],[25,53,9,13],[26,2,9,13,"exports"],[26,9,9,13],[26,10,9,13,"isMessageIgnored"],[26,26,9,13],[26,29,9,13,"isMessageIgnored"],[26,45,9,13],[27,2,9,13,"exports"],[27,9,9,13],[27,10,9,13,"observe"],[27,17,9,13],[27,20,9,13,"observe"],[27,27,9,13],[28,2,9,13,"exports"],[28,9,9,13],[28,10,9,13,"reportLogBoxError"],[28,27,9,13],[28,30,9,13,"reportLogBoxError"],[28,47,9,13],[29,2,9,13,"exports"],[29,9,9,13],[29,10,9,13,"reportUnexpectedLogBoxError"],[29,37,9,13],[29,40,9,13,"reportUnexpectedLogBoxError"],[29,67,9,13],[30,2,9,13,"exports"],[30,9,9,13],[30,10,9,13,"retrySymbolicateLogNow"],[30,32,9,13],[30,35,9,13,"retrySymbolicateLogNow"],[30,57,9,13],[31,2,9,13,"exports"],[31,9,9,13],[31,10,9,13,"setDisabled"],[31,21,9,13],[31,24,9,13,"setDisabled"],[31,35,9,13],[32,2,9,13,"exports"],[32,9,9,13],[32,10,9,13,"setSelectedLog"],[32,24,9,13],[32,27,9,13,"setSelectedLog"],[32,41,9,13],[33,2,9,13,"exports"],[33,9,9,13],[33,10,9,13,"symbolicateLogLazy"],[33,28,9,13],[33,31,9,13,"symbolicateLogLazy"],[33,49,9,13],[34,2,9,13,"exports"],[34,9,9,13],[34,10,9,13,"symbolicateLogNow"],[34,27,9,13],[34,30,9,13,"symbolicateLogNow"],[34,47,9,13],[35,2,9,13,"exports"],[35,9,9,13],[35,10,9,13,"withSubscription"],[35,26,9,13],[35,29,9,13,"withSubscription"],[35,45,9,13],[36,2,11,0],[36,6,11,0,"React"],[36,11,11,0],[36,14,11,0,"_interopRequireWildcard"],[36,37,11,0],[36,38,11,0,"require"],[36,45,11,0],[36,46,11,0,"_dependencyMap"],[36,60,11,0],[37,2,11,31],[37,6,11,31,"_NativeEventEmitter"],[37,25,11,31],[37,28,11,31,"_interopRequireDefault"],[37,50,11,31],[37,51,11,31,"require"],[37,58,11,31],[37,59,11,31,"_dependencyMap"],[37,73,11,31],[38,2,14,0],[38,6,14,0,"_LogBoxLog"],[38,16,14,0],[38,19,14,0,"require"],[38,26,14,0],[38,27,14,0,"_dependencyMap"],[38,41,14,0],[39,2,16,0],[39,6,16,0,"_LogContext"],[39,17,16,0],[39,20,16,0,"require"],[39,27,16,0],[39,28,16,0,"_dependencyMap"],[39,42,16,0],[40,2,17,0],[40,6,17,0,"_parseLogBoxLog"],[40,21,17,0],[40,24,17,0,"require"],[40,31,17,0],[40,32,17,0,"_dependencyMap"],[40,46,17,0],[41,2,19,0],[41,6,19,0,"_NativeLogBox"],[41,19,19,0],[41,22,19,0,"_interopRequireDefault"],[41,44,19,0],[41,45,19,0,"require"],[41,52,19,0],[41,53,19,0,"_dependencyMap"],[41,67,19,0],[42,2,20,0],[42,6,20,0,"_parseErrorStack"],[42,22,20,0],[42,25,20,0,"_interopRequireDefault"],[42,47,20,0],[42,48,20,0,"require"],[42,55,20,0],[42,56,20,0,"_dependencyMap"],[42,70,20,0],[43,2,20,57],[43,6,20,57,"_jsxDevRuntime"],[43,20,20,57],[43,23,20,57,"require"],[43,30,20,57],[43,31,20,57,"_dependencyMap"],[43,45,20,57],[44,2,20,57],[44,6,20,57,"_jsxFileName"],[44,18,20,57],[45,2,20,57],[45,11,20,57,"_getRequireWildcardCache"],[45,36,20,57,"e"],[45,37,20,57],[45,66,20,57,"WeakMap"],[45,73,20,57],[45,92,20,57,"r"],[45,93,20,57],[45,100,20,57,"WeakMap"],[45,107,20,57],[45,111,20,57,"t"],[45,112,20,57],[45,119,20,57,"WeakMap"],[45,126,20,57],[45,138,20,57,"_getRequireWildcardCache"],[45,162,20,57],[45,174,20,57,"_getRequireWildcardCache"],[45,175,20,57,"e"],[45,176,20,57],[45,187,20,57,"e"],[45,188,20,57],[45,191,20,57,"t"],[45,192,20,57],[45,195,20,57,"r"],[45,196,20,57],[45,201,20,57,"e"],[45,202,20,57],[46,2,20,57],[46,11,20,57,"_interopRequireWildcard"],[46,35,20,57,"e"],[46,36,20,57],[46,38,20,57,"r"],[46,39,20,57],[46,48,20,57,"r"],[46,49,20,57],[46,53,20,57,"e"],[46,54,20,57],[46,58,20,57,"e"],[46,59,20,57],[46,60,20,57,"__esModule"],[46,70,20,57],[46,79,20,57,"e"],[46,80,20,57],[46,95,20,57,"e"],[46,96,20,57],[46,119,20,57,"e"],[46,120,20,57],[46,145,20,57,"e"],[46,146,20,57],[46,157,20,57,"default"],[46,164,20,57],[46,166,20,57,"e"],[46,167,20,57],[46,175,20,57,"t"],[46,176,20,57],[46,179,20,57,"_getRequireWildcardCache"],[46,203,20,57],[46,204,20,57,"r"],[46,205,20,57],[46,212,20,57,"t"],[46,213,20,57],[46,217,20,57,"t"],[46,218,20,57],[46,219,20,57,"has"],[46,222,20,57],[46,223,20,57,"e"],[46,224,20,57],[46,234,20,57,"t"],[46,235,20,57],[46,236,20,57,"get"],[46,239,20,57],[46,240,20,57,"e"],[46,241,20,57],[46,248,20,57,"n"],[46,249,20,57],[46,254,20,57,"__proto__"],[46,263,20,57],[46,273,20,57,"a"],[46,274,20,57],[46,277,20,57,"Object"],[46,283,20,57],[46,284,20,57,"defineProperty"],[46,298,20,57],[46,302,20,57,"Object"],[46,308,20,57],[46,309,20,57,"getOwnPropertyDescriptor"],[46,333,20,57],[46,344,20,57,"u"],[46,345,20,57],[46,349,20,57,"e"],[46,350,20,57],[46,370,20,57,"u"],[46,371,20,57],[46,378,20,57,"hasOwnProperty"],[46,392,20,57],[46,393,20,57,"call"],[46,397,20,57],[46,398,20,57,"e"],[46,399,20,57],[46,401,20,57,"u"],[46,402,20,57],[46,411,20,57,"i"],[46,412,20,57],[46,415,20,57,"a"],[46,416,20,57],[46,419,20,57,"Object"],[46,425,20,57],[46,426,20,57,"getOwnPropertyDescriptor"],[46,450,20,57],[46,451,20,57,"e"],[46,452,20,57],[46,454,20,57,"u"],[46,455,20,57],[46,465,20,57,"i"],[46,466,20,57],[46,471,20,57,"i"],[46,472,20,57],[46,473,20,57,"get"],[46,476,20,57],[46,480,20,57,"i"],[46,481,20,57],[46,482,20,57,"set"],[46,485,20,57],[46,489,20,57,"Object"],[46,495,20,57],[46,496,20,57,"defineProperty"],[46,510,20,57],[46,511,20,57,"n"],[46,512,20,57],[46,514,20,57,"u"],[46,515,20,57],[46,517,20,57,"i"],[46,518,20,57],[46,522,20,57,"n"],[46,523,20,57],[46,524,20,57,"u"],[46,525,20,57],[46,529,20,57,"e"],[46,530,20,57],[46,531,20,57,"u"],[46,532,20,57],[46,544,20,57,"n"],[46,545,20,57],[46,546,20,57,"default"],[46,553,20,57],[46,556,20,57,"e"],[46,557,20,57],[46,559,20,57,"t"],[46,560,20,57],[46,564,20,57,"t"],[46,565,20,57],[46,566,20,57,"set"],[46,569,20,57],[46,570,20,57,"e"],[46,571,20,57],[46,573,20,57,"n"],[46,574,20,57],[46,577,20,57,"n"],[46,578,20,57],[47,2,66,0],[47,8,66,6,"observers"],[47,17,66,50],[47,20,66,53],[47,24,66,57,"Set"],[47,27,66,60],[47,28,66,61],[47,29,66,62],[48,2,67,0],[48,8,67,6,"ignorePatterns"],[48,22,67,40],[48,25,67,43],[48,29,67,47,"Set"],[48,32,67,50],[48,33,67,51],[48,34,67,52],[49,2,68,0],[49,6,68,4,"logs"],[49,10,68,20],[49,13,68,23],[49,17,68,27,"Set"],[49,20,68,30],[49,21,68,31],[49,22,68,32],[50,2,69,0],[50,6,69,4,"updateTimeout"],[50,19,69,89],[50,22,69,92],[50,26,69,96],[51,2,70,0],[51,6,70,4,"_isDisabled"],[51,17,70,15],[51,20,70,18],[51,25,70,23],[52,2,71,0],[52,6,71,4,"_selectedIndex"],[52,20,71,18],[52,23,71,21],[52,24,71,22],[52,25,71,23],[53,2,73,0],[53,8,73,6,"LOGBOX_ERROR_MESSAGE"],[53,28,73,26],[53,31,74,2],[53,103,74,74],[54,2,76,0],[54,11,76,9,"getNextState"],[54,23,76,21,"getNextState"],[54,24,76,21],[54,26,76,24],[55,4,77,2],[55,11,77,9],[56,6,78,4,"logs"],[56,10,78,8],[57,6,79,4,"isDisabled"],[57,16,79,14],[57,18,79,16,"_isDisabled"],[57,29,79,27],[58,6,80,4,"selectedLogIndex"],[58,22,80,20],[58,24,80,22,"_selectedIndex"],[59,4,81,2],[59,5,81,3],[60,2,82,0],[61,2,84,7],[61,11,84,16,"reportLogBoxError"],[61,28,84,33,"reportLogBoxError"],[61,29,84,34,"error"],[61,34,84,54],[61,36,84,56,"componentStack"],[61,50,84,79],[61,52,84,87],[62,4,85,2],[62,10,85,8,"ExceptionsManager"],[62,27,85,25],[62,30,85,28,"require"],[62,37,85,35],[62,38,85,35,"_dependencyMap"],[62,52,85,35],[62,87,85,66],[62,88,85,67],[62,89,85,68,"default"],[62,96,85,75],[63,4,87,2],[63,8,87,6,"componentStack"],[63,22,87,20],[63,26,87,24],[63,30,87,28],[63,32,87,30],[64,6,88,4,"error"],[64,11,88,9],[64,12,88,10,"componentStack"],[64,26,88,24],[64,29,88,27,"componentStack"],[64,43,88,41],[65,4,89,2],[66,4,90,2,"ExceptionsManager"],[66,21,90,19],[66,22,90,20,"handleException"],[66,37,90,35],[66,38,90,36,"error"],[66,43,90,41],[66,44,90,42],[67,2,91,0],[68,2,93,7],[68,11,93,16,"reportUnexpectedLogBoxError"],[68,38,93,43,"reportUnexpectedLogBoxError"],[68,39,93,44,"error"],[68,44,93,64],[68,46,93,66,"componentStack"],[68,60,93,89],[68,62,93,97],[69,4,94,2,"error"],[69,9,94,7],[69,10,94,8,"message"],[69,17,94,15],[69,20,94,18],[69,23,94,21,"LOGBOX_ERROR_MESSAGE"],[69,43,94,41],[69,50,94,48,"error"],[69,55,94,53],[69,56,94,54,"message"],[69,63,94,61],[69,65,94,63],[70,4,95,2],[70,11,95,9,"reportLogBoxError"],[70,28,95,26],[70,29,95,27,"error"],[70,34,95,32],[70,36,95,34,"componentStack"],[70,50,95,48],[70,51,95,49],[71,2,96,0],[72,2,98,7],[72,11,98,16,"isLogBoxErrorMessage"],[72,31,98,36,"isLogBoxErrorMessage"],[72,32,98,37,"message"],[72,39,98,52],[72,41,98,63],[73,4,99,2],[73,11,99,9],[73,18,99,16,"message"],[73,25,99,23],[73,30,99,28],[73,38,99,36],[73,42,99,40,"message"],[73,49,99,47],[73,50,99,48,"includes"],[73,58,99,56],[73,59,99,57,"LOGBOX_ERROR_MESSAGE"],[73,79,99,77],[73,80,99,78],[74,2,100,0],[75,2,102,7],[75,11,102,16,"isMessageIgnored"],[75,27,102,32,"isMessageIgnored"],[75,28,102,33,"message"],[75,35,102,48],[75,37,102,59],[76,4,103,2],[76,9,103,7],[76,15,103,13,"pattern"],[76,22,103,20],[76,26,103,24,"ignorePatterns"],[76,40,103,38],[76,42,103,40],[77,6,104,4],[77,10,105,7,"pattern"],[77,17,105,14],[77,29,105,26,"RegExp"],[77,35,105,32],[77,39,105,36,"pattern"],[77,46,105,43],[77,47,105,44,"test"],[77,51,105,48],[77,52,105,49,"message"],[77,59,105,56],[77,60,105,57],[77,64,106,7],[77,71,106,14,"pattern"],[77,78,106,21],[77,83,106,26],[77,91,106,34],[77,95,106,38,"message"],[77,102,106,45],[77,103,106,46,"includes"],[77,111,106,54],[77,112,106,55,"pattern"],[77,119,106,62],[77,120,106,64],[77,122,107,6],[78,8,108,6],[78,15,108,13],[78,19,108,17],[79,6,109,4],[80,4,110,2],[81,4,111,2],[81,11,111,9],[81,16,111,14],[82,2,112,0],[83,2,114,0],[83,11,114,9,"setImmediateShim"],[83,27,114,25,"setImmediateShim"],[83,28,114,26,"callback"],[83,36,114,46],[83,38,114,48],[84,4,115,2],[84,8,115,6],[84,9,115,7,"global"],[84,15,115,13],[84,16,115,14,"setImmediate"],[84,28,115,26],[84,30,115,28],[85,6,116,4],[85,13,116,11,"setTimeout"],[85,23,116,21],[85,24,116,22,"callback"],[85,32,116,30],[85,34,116,32],[85,35,116,33],[85,36,116,34],[86,4,117,2],[87,4,118,2],[87,11,118,9,"global"],[87,17,118,15],[87,18,118,16,"setImmediate"],[87,30,118,28],[87,31,118,29,"callback"],[87,39,118,37],[87,40,118,38],[88,2,119,0],[89,2,121,0],[89,11,121,9,"handleUpdate"],[89,23,121,21,"handleUpdate"],[89,24,121,21],[89,26,121,30],[90,4,122,2],[90,8,122,6,"updateTimeout"],[90,21,122,19],[90,25,122,23],[90,29,122,27],[90,31,122,29],[91,6,123,4,"updateTimeout"],[91,19,123,17],[91,22,123,20,"setImmediateShim"],[91,38,123,36],[91,39,123,37],[91,45,123,43],[92,8,124,6,"updateTimeout"],[92,21,124,19],[92,24,124,22],[92,28,124,26],[93,8,125,6],[93,14,125,12,"nextState"],[93,23,125,21],[93,26,125,24,"getNextState"],[93,38,125,36],[93,39,125,37],[93,40,125,38],[94,8,126,6,"observers"],[94,17,126,15],[94,18,126,16,"forEach"],[94,25,126,23],[94,26,126,24],[94,27,126,25],[95,10,126,27,"observer"],[96,8,126,36],[96,9,126,37],[96,14,126,42,"observer"],[96,22,126,50],[96,23,126,51,"nextState"],[96,32,126,60],[96,33,126,61],[96,34,126,62],[97,6,127,4],[97,7,127,5],[97,8,127,6],[98,4,128,2],[99,2,129,0],[100,2,131,0],[100,11,131,9,"appendNewLog"],[100,23,131,21,"appendNewLog"],[100,24,131,22,"newLog"],[100,30,131,39],[100,32,131,47],[101,4,132,2],[102,4,133,2],[103,4,134,2],[103,8,134,6,"isMessageIgnored"],[103,24,134,22],[103,25,134,23,"newLog"],[103,31,134,29],[103,32,134,30,"message"],[103,39,134,37],[103,40,134,38,"content"],[103,47,134,45],[103,48,134,46],[103,50,134,48],[104,6,135,4],[105,4,136,2],[107,4,138,2],[108,4,139,2],[109,4,140,2],[110,4,141,2],[110,10,141,8,"lastLog"],[110,17,141,15],[110,20,141,18,"Array"],[110,25,141,23],[110,26,141,24,"from"],[110,30,141,28],[110,31,141,29,"logs"],[110,35,141,33],[110,36,141,34],[110,37,141,35,"pop"],[110,40,141,38],[110,41,141,39],[110,42,141,40],[111,4,142,2],[111,8,142,6,"lastLog"],[111,15,142,13],[111,19,142,17,"lastLog"],[111,26,142,24],[111,27,142,25,"category"],[111,35,142,33],[111,40,142,38,"newLog"],[111,46,142,44],[111,47,142,45,"category"],[111,55,142,53],[111,57,142,55],[112,6,143,4,"lastLog"],[112,13,143,11],[112,14,143,12,"incrementCount"],[112,28,143,26],[112,29,143,27],[112,30,143,28],[113,6,144,4,"handleUpdate"],[113,18,144,16],[113,19,144,17],[113,20,144,18],[114,6,145,4],[115,4,146,2],[116,4,148,2],[116,8,148,6,"newLog"],[116,14,148,12],[116,15,148,13,"level"],[116,20,148,18],[116,25,148,23],[116,32,148,30],[116,34,148,32],[117,6,149,4],[118,6,150,4],[119,6,151,4],[120,6,152,4],[120,12,152,10,"OPTIMISTIC_WAIT_TIME"],[120,32,152,30],[120,35,152,33],[120,39,152,37],[121,6,154,4],[121,10,154,8,"addPendingLog"],[121,23,154,42],[121,26,154,45,"addPendingLog"],[121,27,154,45],[121,32,154,51],[122,8,155,6,"logs"],[122,12,155,10],[122,13,155,11,"add"],[122,16,155,14],[122,17,155,15,"newLog"],[122,23,155,21],[122,24,155,22],[123,8,156,6],[123,12,156,10,"_selectedIndex"],[123,26,156,24],[123,29,156,27],[123,30,156,28],[123,32,156,30],[124,10,157,8,"setSelectedLog"],[124,24,157,22],[124,25,157,23,"logs"],[124,29,157,27],[124,30,157,28,"size"],[124,34,157,32],[124,37,157,35],[124,38,157,36],[124,39,157,37],[125,8,158,6],[125,9,158,7],[125,15,158,13],[126,10,159,8,"handleUpdate"],[126,22,159,20],[126,23,159,21],[126,24,159,22],[127,8,160,6],[128,8,161,6,"addPendingLog"],[128,21,161,19],[128,24,161,22],[128,28,161,26],[129,6,162,4],[129,7,162,5],[130,6,164,4],[130,12,164,10,"optimisticTimeout"],[130,29,164,27],[130,32,164,30,"setTimeout"],[130,42,164,40],[130,43,164,41],[130,49,164,47],[131,8,165,6],[131,12,165,10,"addPendingLog"],[131,25,165,23],[131,27,165,25],[132,10,166,8,"addPendingLog"],[132,23,166,21],[132,24,166,22],[132,25,166,23],[133,8,167,6],[134,6,168,4],[134,7,168,5],[134,9,168,7,"OPTIMISTIC_WAIT_TIME"],[134,29,168,27],[134,30,168,28],[136,6,170,4],[137,6,171,4,"newLog"],[137,12,171,10],[137,13,171,11,"symbolicate"],[137,24,171,22],[137,25,171,23],[137,36,171,34],[137,37,171,35],[138,6,173,4,"newLog"],[138,12,173,10],[138,13,173,11,"symbolicate"],[138,24,173,22],[138,25,173,23],[138,32,173,30],[138,34,173,33,"status"],[138,40,173,39],[138,44,173,44],[139,8,174,6],[139,12,174,10,"addPendingLog"],[139,25,174,23],[139,29,174,27,"status"],[139,35,174,33],[139,40,174,38],[139,49,174,47],[139,51,174,49],[140,10,175,8,"addPendingLog"],[140,23,175,21],[140,24,175,22],[140,25,175,23],[141,10,176,8,"clearTimeout"],[141,22,176,20],[141,23,176,21,"optimisticTimeout"],[141,40,176,38],[141,41,176,39],[142,8,177,6],[142,9,177,7],[142,15,177,13],[142,19,177,17,"status"],[142,25,177,23],[142,30,177,28],[142,39,177,37],[142,41,177,39],[143,10,178,8],[144,10,179,8,"handleUpdate"],[144,22,179,20],[144,23,179,21],[144,24,179,22],[145,8,180,6],[146,6,181,4],[146,7,181,5],[146,8,181,6],[147,4,182,2],[147,5,182,3],[147,11,182,9],[147,15,182,13,"newLog"],[147,21,182,19],[147,22,182,20,"level"],[147,27,182,25],[147,32,182,30],[147,40,182,38],[147,42,182,40],[148,6,183,4,"logs"],[148,10,183,8],[148,11,183,9,"add"],[148,14,183,12],[148,15,183,13,"newLog"],[148,21,183,19],[148,22,183,20],[149,6,184,4,"setSelectedLog"],[149,20,184,18],[149,21,184,19,"logs"],[149,25,184,23],[149,26,184,24,"size"],[149,30,184,28],[149,33,184,31],[149,34,184,32],[149,35,184,33],[150,4,185,2],[150,5,185,3],[150,11,185,9],[151,6,186,4,"logs"],[151,10,186,8],[151,11,186,9,"add"],[151,14,186,12],[151,15,186,13,"newLog"],[151,21,186,19],[151,22,186,20],[152,6,187,4,"handleUpdate"],[152,18,187,16],[152,19,187,17],[152,20,187,18],[153,4,188,2],[154,2,189,0],[155,2,191,7],[155,11,191,16,"addLog"],[155,17,191,22,"addLog"],[155,18,191,23,"log"],[155,21,191,35],[155,23,191,43],[156,4,192,2],[156,10,192,8,"errorForStackTrace"],[156,28,192,26],[156,31,192,29],[156,35,192,33,"Error"],[156,40,192,38],[156,41,192,39],[156,42,192,40],[158,4,194,2],[159,4,195,2],[160,4,196,2,"setImmediate"],[160,16,196,14],[160,17,196,15],[160,23,196,21],[161,6,197,4],[161,10,197,8],[162,8,198,6],[162,14,198,12,"stack"],[162,19,198,17],[162,22,198,20],[162,26,198,20,"parseErrorStack"],[162,50,198,35],[162,52,198,36,"errorForStackTrace"],[162,70,198,54],[162,72,198,56,"stack"],[162,77,198,61],[162,78,198,62],[163,8,200,6,"appendNewLog"],[163,20,200,18],[163,21,201,8],[163,25,201,12,"LogBoxLog"],[163,45,201,21],[163,46,201,22],[164,10,202,10,"level"],[164,15,202,15],[164,17,202,17,"log"],[164,20,202,20],[164,21,202,21,"level"],[164,26,202,26],[165,10,203,10,"message"],[165,17,203,17],[165,19,203,19,"log"],[165,22,203,22],[165,23,203,23,"message"],[165,30,203,30],[166,10,204,10,"isComponentError"],[166,26,204,26],[166,28,204,28],[166,33,204,33],[167,10,205,10,"stack"],[167,15,205,15],[168,10,206,10,"category"],[168,18,206,18],[168,20,206,20,"log"],[168,23,206,23],[168,24,206,24,"category"],[168,32,206,32],[169,10,207,10,"componentStack"],[169,24,207,24],[169,26,207,26,"log"],[169,29,207,29],[169,30,207,30,"componentStack"],[170,8,208,8],[170,9,208,9],[170,10,209,6],[170,11,209,7],[171,6,210,4],[171,7,210,5],[171,8,210,6],[171,15,210,13,"error"],[171,20,210,18],[171,22,210,20],[172,8,211,6,"reportUnexpectedLogBoxError"],[172,35,211,33],[172,36,211,34,"error"],[172,41,211,39],[172,42,211,40],[173,6,212,4],[174,4,213,2],[174,5,213,3],[174,6,213,4],[175,2,214,0],[176,2,216,7],[176,11,216,16,"addException"],[176,23,216,28,"addException"],[176,24,216,29,"error"],[176,29,216,57],[176,31,216,65],[177,4,217,2],[178,4,218,2],[179,4,219,2,"setImmediate"],[179,16,219,14],[179,17,219,15],[179,23,219,21],[180,6,220,4],[180,10,220,8],[181,8,221,6,"appendNewLog"],[181,20,221,18],[181,21,221,19],[181,25,221,23,"LogBoxLog"],[181,45,221,32],[181,46,221,33],[181,50,221,33,"parseLogBoxException"],[181,86,221,53],[181,88,221,54,"error"],[181,93,221,59],[181,94,221,60],[181,95,221,61],[181,96,221,62],[182,6,222,4],[182,7,222,5],[182,8,222,6],[182,15,222,13,"loggingError"],[182,27,222,25],[182,29,222,27],[183,8,223,6,"reportUnexpectedLogBoxError"],[183,35,223,33],[183,36,223,34,"loggingError"],[183,48,223,46],[183,49,223,47],[184,6,224,4],[185,4,225,2],[185,5,225,3],[185,6,225,4],[186,2,226,0],[187,2,228,7],[187,11,228,16,"symbolicateLogNow"],[187,28,228,33,"symbolicateLogNow"],[187,29,228,34,"type"],[187,33,228,49],[187,35,228,51,"log"],[187,38,228,65],[187,40,228,67],[188,4,229,2,"log"],[188,7,229,5],[188,8,229,6,"symbolicate"],[188,19,229,17],[188,20,229,18,"type"],[188,24,229,22],[188,26,229,24],[188,32,229,30],[189,6,230,4,"handleUpdate"],[189,18,230,16],[189,19,230,17],[189,20,230,18],[190,4,231,2],[190,5,231,3],[190,6,231,4],[191,2,232,0],[192,2,234,7],[192,11,234,16,"retrySymbolicateLogNow"],[192,33,234,38,"retrySymbolicateLogNow"],[192,34,234,39,"type"],[192,38,234,54],[192,40,234,56,"log"],[192,43,234,70],[192,45,234,72],[193,4,235,2,"log"],[193,7,235,5],[193,8,235,6,"retrySymbolicate"],[193,24,235,22],[193,25,235,23,"type"],[193,29,235,27],[193,31,235,29],[193,37,235,35],[194,6,236,4,"handleUpdate"],[194,18,236,16],[194,19,236,17],[194,20,236,18],[195,4,237,2],[195,5,237,3],[195,6,237,4],[196,2,238,0],[197,2,240,7],[197,11,240,16,"symbolicateLogLazy"],[197,29,240,34,"symbolicateLogLazy"],[197,30,240,35,"type"],[197,34,240,50],[197,36,240,52,"log"],[197,39,240,66],[197,41,240,68],[198,4,241,2,"log"],[198,7,241,5],[198,8,241,6,"symbolicate"],[198,19,241,17],[198,20,241,18,"type"],[198,24,241,22],[198,25,241,23],[199,2,242,0],[200,2,244,7],[200,11,244,16,"clear"],[200,16,244,21,"clear"],[200,17,244,21],[200,19,244,30],[201,4,245,2],[201,8,245,6,"logs"],[201,12,245,10],[201,13,245,11,"size"],[201,17,245,15],[201,20,245,18],[201,21,245,19],[201,23,245,21],[202,6,246,4,"logs"],[202,10,246,8],[202,13,246,11],[202,17,246,15,"Set"],[202,20,246,18],[202,21,246,19],[202,22,246,20],[203,6,247,4,"setSelectedLog"],[203,20,247,18],[203,21,247,19],[203,22,247,20],[203,23,247,21],[203,24,247,22],[204,4,248,2],[205,2,249,0],[206,2,251,7],[206,11,251,16,"setSelectedLog"],[206,25,251,30,"setSelectedLog"],[206,26,251,31,"proposedNewIndex"],[206,42,251,55],[206,44,251,63],[207,4,252,2],[207,10,252,8,"oldIndex"],[207,18,252,16],[207,21,252,19,"_selectedIndex"],[207,35,252,33],[208,4,253,2],[208,8,253,6,"newIndex"],[208,16,253,14],[208,19,253,17,"proposedNewIndex"],[208,35,253,33],[209,4,255,2],[209,10,255,8,"logArray"],[209,18,255,16],[209,21,255,19,"Array"],[209,26,255,24],[209,27,255,25,"from"],[209,31,255,29],[209,32,255,30,"logs"],[209,36,255,34],[209,37,255,35],[210,4,256,2],[210,8,256,6,"index"],[210,13,256,11],[210,16,256,14,"logArray"],[210,24,256,22],[210,25,256,23,"length"],[210,31,256,29],[210,34,256,32],[210,35,256,33],[211,4,257,2],[211,11,257,9,"index"],[211,16,257,14],[211,20,257,18],[211,21,257,19],[211,23,257,21],[212,6,258,4],[213,6,259,4],[213,10,259,8,"logArray"],[213,18,259,16],[213,19,259,17,"index"],[213,24,259,22],[213,25,259,23],[213,26,259,24,"level"],[213,31,259,29],[213,36,259,34],[213,44,259,42],[213,46,259,44],[214,8,260,6,"newIndex"],[214,16,260,14],[214,19,260,17,"index"],[214,24,260,22],[215,8,261,6],[216,6,262,4],[217,6,263,4,"index"],[217,11,263,9],[217,15,263,13],[217,16,263,14],[218,4,264,2],[219,4,265,2,"_selectedIndex"],[219,18,265,16],[219,21,265,19,"newIndex"],[219,29,265,27],[220,4,266,2,"handleUpdate"],[220,16,266,14],[220,17,266,15],[220,18,266,16],[221,4,267,2],[221,8,267,6,"NativeLogBox"],[221,29,267,18],[221,31,267,20],[222,6,268,4,"setTimeout"],[222,16,268,14],[222,17,268,15],[222,23,268,21],[223,8,269,6],[223,12,269,10,"oldIndex"],[223,20,269,18],[223,23,269,21],[223,24,269,22],[223,28,269,26,"newIndex"],[223,36,269,34],[223,40,269,38],[223,41,269,39],[223,43,269,41],[224,10,270,8,"NativeLogBox"],[224,31,270,20],[224,32,270,21,"show"],[224,36,270,25],[224,37,270,26],[224,38,270,27],[225,8,271,6],[225,9,271,7],[225,15,271,13],[225,19,271,17,"oldIndex"],[225,27,271,25],[225,31,271,29],[225,32,271,30],[225,36,271,34,"newIndex"],[225,44,271,42],[225,47,271,45],[225,48,271,46],[225,50,271,48],[226,10,272,8,"NativeLogBox"],[226,31,272,20],[226,32,272,21,"hide"],[226,36,272,25],[226,37,272,26],[226,38,272,27],[227,8,273,6],[228,6,274,4],[228,7,274,5],[228,9,274,7],[228,10,274,8],[228,11,274,9],[229,4,275,2],[230,2,276,0],[231,2,278,7],[231,11,278,16,"clearWarnings"],[231,24,278,29,"clearWarnings"],[231,25,278,29],[231,27,278,38],[232,4,279,2],[232,10,279,8,"newLogs"],[232,17,279,15],[232,20,279,18,"Array"],[232,25,279,23],[232,26,279,24,"from"],[232,30,279,28],[232,31,279,29,"logs"],[232,35,279,33],[232,36,279,34],[232,37,279,35,"filter"],[232,43,279,41],[232,44,279,43,"log"],[232,47,279,46],[232,51,279,51,"log"],[232,54,279,54],[232,55,279,55,"level"],[232,60,279,60],[232,65,279,65],[232,71,279,71],[232,72,279,72],[233,4,280,2],[233,8,280,6,"newLogs"],[233,15,280,13],[233,16,280,14,"length"],[233,22,280,20],[233,27,280,25,"logs"],[233,31,280,29],[233,32,280,30,"size"],[233,36,280,34],[233,38,280,36],[234,6,281,4,"logs"],[234,10,281,8],[234,13,281,11],[234,17,281,15,"Set"],[234,20,281,18],[234,21,281,19,"newLogs"],[234,28,281,26],[234,29,281,27],[235,6,282,4,"setSelectedLog"],[235,20,282,18],[235,21,282,19],[235,22,282,20],[235,23,282,21],[235,24,282,22],[236,6,283,4,"handleUpdate"],[236,18,283,16],[236,19,283,17],[236,20,283,18],[237,4,284,2],[238,2,285,0],[239,2,287,7],[239,11,287,16,"clearErrors"],[239,22,287,27,"clearErrors"],[239,23,287,27],[239,25,287,36],[240,4,288,2],[240,10,288,8,"newLogs"],[240,17,288,15],[240,20,288,18,"Array"],[240,25,288,23],[240,26,288,24,"from"],[240,30,288,28],[240,31,288,29,"logs"],[240,35,288,33],[240,36,288,34],[240,37,288,35,"filter"],[240,43,288,41],[240,44,288,43,"log"],[240,47,288,46],[240,51,288,51,"log"],[240,54,288,54],[240,55,288,55,"level"],[240,60,288,60],[240,65,288,65],[240,72,288,72],[240,76,288,76,"log"],[240,79,288,79],[240,80,288,80,"level"],[240,85,288,85],[240,90,288,90],[240,97,288,97],[240,98,288,98],[241,4,289,2],[241,8,289,6,"newLogs"],[241,15,289,13],[241,16,289,14,"length"],[241,22,289,20],[241,27,289,25,"logs"],[241,31,289,29],[241,32,289,30,"size"],[241,36,289,34],[241,38,289,36],[242,6,290,4,"logs"],[242,10,290,8],[242,13,290,11],[242,17,290,15,"Set"],[242,20,290,18],[242,21,290,19,"newLogs"],[242,28,290,26],[242,29,290,27],[243,6,291,4,"setSelectedLog"],[243,20,291,18],[243,21,291,19],[243,22,291,20],[243,23,291,21],[243,24,291,22],[244,4,292,2],[245,2,293,0],[246,2,295,7],[246,11,295,16,"dismiss"],[246,18,295,23,"dismiss"],[246,19,295,24,"log"],[246,22,295,38],[246,24,295,46],[247,4,296,2],[247,8,296,6,"logs"],[247,12,296,10],[247,13,296,11,"has"],[247,16,296,14],[247,17,296,15,"log"],[247,20,296,18],[247,21,296,19],[247,23,296,21],[248,6,297,4,"logs"],[248,10,297,8],[248,11,297,9,"delete"],[248,17,297,15],[248,18,297,16,"log"],[248,21,297,19],[248,22,297,20],[249,6,298,4,"handleUpdate"],[249,18,298,16],[249,19,298,17],[249,20,298,18],[250,4,299,2],[251,2,300,0],[252,2,302,7],[252,11,302,16,"getIgnorePatterns"],[252,28,302,33,"getIgnorePatterns"],[252,29,302,33],[252,31,302,53],[253,4,303,2],[253,11,303,9,"Array"],[253,16,303,14],[253,17,303,15,"from"],[253,21,303,19],[253,22,303,20,"ignorePatterns"],[253,36,303,34],[253,37,303,35],[254,2,304,0],[255,2,306,7],[255,11,306,16,"addIgnorePatterns"],[255,28,306,33,"addIgnorePatterns"],[255,29,306,34,"patterns"],[255,37,306,59],[255,39,306,67],[256,4,307,2],[256,10,307,8,"existingSize"],[256,22,307,20],[256,25,307,23,"ignorePatterns"],[256,39,307,37],[256,40,307,38,"size"],[256,44,307,42],[257,4,308,2],[258,4,309,2],[259,4,310,2,"patterns"],[259,12,310,10],[259,13,310,11,"forEach"],[259,20,310,18],[259,21,310,20,"pattern"],[259,28,310,42],[259,32,310,47],[260,6,311,4],[260,10,311,8,"pattern"],[260,17,311,15],[260,29,311,27,"RegExp"],[260,35,311,33],[260,37,311,35],[261,8,312,6],[261,13,312,11],[261,19,312,17,"existingPattern"],[261,34,312,32],[261,38,312,36,"ignorePatterns"],[261,52,312,50],[261,54,312,52],[262,10,313,8],[262,14,314,10,"existingPattern"],[262,29,314,25],[262,41,314,37,"RegExp"],[262,47,314,43],[262,51,315,10,"existingPattern"],[262,66,315,25],[262,67,315,26,"toString"],[262,75,315,34],[262,76,315,35],[262,77,315,36],[262,82,315,41,"pattern"],[262,89,315,48],[262,90,315,49,"toString"],[262,98,315,57],[262,99,315,58],[262,100,315,59],[262,102,316,10],[263,12,317,10],[264,10,318,8],[265,8,319,6],[266,8,320,6,"ignorePatterns"],[266,22,320,20],[266,23,320,21,"add"],[266,26,320,24],[266,27,320,25,"pattern"],[266,34,320,32],[266,35,320,33],[267,6,321,4],[268,6,322,4,"ignorePatterns"],[268,20,322,18],[268,21,322,19,"add"],[268,24,322,22],[268,25,322,23,"pattern"],[268,32,322,30],[268,33,322,31],[269,4,323,2],[269,5,323,3],[269,6,323,4],[270,4,324,2],[270,8,324,6,"ignorePatterns"],[270,22,324,20],[270,23,324,21,"size"],[270,27,324,25],[270,32,324,30,"existingSize"],[270,44,324,42],[270,46,324,44],[271,6,325,4],[272,4,326,2],[273,4,327,2],[274,4,328,2],[275,4,329,2],[276,4,330,2],[277,4,331,2,"logs"],[277,8,331,6],[277,11,331,9],[277,15,331,13,"Set"],[277,18,331,16],[277,19,331,17,"Array"],[277,24,331,22],[277,25,331,23,"from"],[277,29,331,27],[277,30,331,28,"logs"],[277,34,331,32],[277,35,331,33],[277,36,331,34,"filter"],[277,42,331,40],[277,43,331,42,"log"],[277,46,331,45],[277,50,331,50],[277,51,331,51,"isMessageIgnored"],[277,67,331,67],[277,68,331,68,"log"],[277,71,331,71],[277,72,331,72,"message"],[277,79,331,79],[277,80,331,80,"content"],[277,87,331,87],[277,88,331,88],[277,89,331,89],[277,90,331,90],[278,4,332,2,"handleUpdate"],[278,16,332,14],[278,17,332,15],[278,18,332,16],[279,2,333,0],[280,2,335,7],[280,11,335,16,"setDisabled"],[280,22,335,27,"setDisabled"],[280,23,335,28,"value"],[280,28,335,42],[280,30,335,50],[281,4,336,2],[281,8,336,6,"value"],[281,13,336,11],[281,18,336,16,"_isDisabled"],[281,29,336,27],[281,31,336,29],[282,6,337,4],[283,4,338,2],[284,4,339,2,"_isDisabled"],[284,15,339,13],[284,18,339,16,"value"],[284,23,339,21],[285,4,340,2,"handleUpdate"],[285,16,340,14],[285,17,340,15],[285,18,340,16],[286,2,341,0],[287,2,343,7],[287,11,343,16,"isDisabled"],[287,21,343,26,"isDisabled"],[287,22,343,26],[287,24,343,38],[288,4,344,2],[288,11,344,9,"_isDisabled"],[288,22,344,20],[289,2,345,0],[290,2,347,7],[290,11,347,16,"observe"],[290,18,347,23,"observe"],[290,19,347,24,"observer"],[290,27,347,42],[290,29,347,58],[291,4,348,2],[291,10,348,8,"subscription"],[291,22,348,20],[291,25,348,23],[292,6,348,25,"observer"],[293,4,348,34],[293,5,348,35],[294,4,349,2,"observers"],[294,13,349,11],[294,14,349,12,"add"],[294,17,349,15],[294,18,349,16,"subscription"],[294,30,349,28],[294,31,349,29],[295,4,351,2,"observer"],[295,12,351,10],[295,13,351,11,"getNextState"],[295,25,351,23],[295,26,351,24],[295,27,351,25],[295,28,351,26],[296,4,353,2],[296,11,353,9],[297,6,354,4,"unsubscribe"],[297,17,354,15,"unsubscribe"],[297,18,354,15],[297,20,354,24],[298,8,355,6,"observers"],[298,17,355,15],[298,18,355,16,"delete"],[298,24,355,22],[298,25,355,23,"subscription"],[298,37,355,35],[298,38,355,36],[299,6,356,4],[300,4,357,2],[300,5,357,3],[301,2,358,0],[302,2,360,0],[302,8,360,6,"emitter"],[302,15,360,13],[302,18,360,16],[302,22,360,20,"NativeEventEmitter"],[302,49,360,38],[302,50,360,39],[303,4,361,2,"addListener"],[303,15,361,13,"addListener"],[303,16,361,13],[303,18,361,16],[303,19,361,17],[303,20,361,18],[304,4,362,2,"removeListeners"],[304,19,362,17,"removeListeners"],[304,20,362,17],[304,22,362,20],[304,23,362,21],[305,2,363,0],[305,3,363,1],[305,4,363,2],[306,2,365,7],[306,11,365,16,"withSubscription"],[306,27,365,32,"withSubscription"],[306,28,365,33,"WrappedComponent"],[306,44,365,67],[306,46,365,94],[307,4,366,2],[307,10,366,8,"LogBoxStateSubscription"],[307,33,366,31],[307,42,366,40,"React"],[307,47,366,45],[307,48,366,46,"Component"],[307,57,366,55],[307,58,366,95],[308,6,367,4],[308,13,367,11,"getDerivedStateFromError"],[308,37,367,35,"getDerivedStateFromError"],[308,38,367,35],[308,40,367,38],[309,8,368,6],[309,15,368,13],[310,10,368,15,"hasError"],[310,18,368,23],[310,20,368,25],[311,8,368,30],[311,9,368,31],[312,6,369,4],[313,6,371,4,"constructor"],[313,17,371,15,"constructor"],[313,18,371,16,"props"],[313,23,371,21],[313,25,371,23],[314,8,372,6],[314,13,372,11],[314,14,372,12,"props"],[314,19,372,17],[314,20,372,18],[315,8,374,6],[315,12,374,10,"process"],[315,19,374,17],[315,20,374,18,"env"],[315,23,374,21],[315,24,374,22,"NODE_ENV"],[315,32,374,30],[315,37,374,35],[315,50,374,48],[315,52,374,50],[316,10,375,8,"emitter"],[316,17,375,15],[316,18,375,16,"addListener"],[316,29,375,27],[316,30,375,28],[316,51,375,49],[316,53,375,51],[316,59,375,57],[317,12,376,10],[317,16,376,14],[317,20,376,18],[317,21,376,19,"state"],[317,26,376,24],[317,27,376,25,"hasError"],[317,35,376,33],[317,37,376,35],[318,14,377,12],[318,18,377,16],[318,19,377,17,"retry"],[318,24,377,22],[318,25,377,23],[318,26,377,24],[319,12,378,10],[320,10,379,8],[320,11,379,9],[320,12,379,10],[321,8,380,6],[322,6,381,4],[323,6,383,4,"componentDidCatch"],[323,23,383,21,"componentDidCatch"],[323,24,383,22,"err"],[323,27,383,32],[323,29,383,34,"errorInfo"],[323,38,383,77],[323,40,383,79],[324,8,384,6],[325,0,385,0],[326,8,386,6,"reportLogBoxError"],[326,25,386,23],[326,26,386,24,"err"],[326,29,386,27],[326,31,386,29,"errorInfo"],[326,40,386,38],[326,41,386,39,"componentStack"],[326,55,386,53],[326,56,386,54],[327,6,387,4],[328,6,391,4,"state"],[328,11,391,9],[328,14,391,12],[329,8,392,6,"logs"],[329,12,392,10],[329,14,392,12],[329,18,392,16,"Set"],[329,21,392,19],[329,22,392,31],[329,23,392,32],[330,8,393,6,"isDisabled"],[330,18,393,16],[330,20,393,18],[330,25,393,23],[331,8,394,6,"hasError"],[331,16,394,14],[331,18,394,16],[331,23,394,21],[332,8,395,6,"selectedLogIndex"],[332,24,395,22],[332,26,395,24],[332,27,395,25],[333,6,396,4],[333,7,396,5],[334,6,398,4,"retry"],[334,11,398,9],[334,14,398,12,"retry"],[334,15,398,12],[334,20,398,18],[335,8,399,6],[335,15,399,13],[335,19,399,17,"Promise"],[335,26,399,24],[335,27,399,32,"resolve"],[335,34,399,39],[335,38,399,44],[336,10,400,8],[336,14,400,12],[336,15,400,13,"setState"],[336,23,400,21],[336,24,400,22],[337,12,400,24,"hasError"],[337,20,400,32],[337,22,400,34],[338,10,400,40],[338,11,400,41],[338,13,400,43],[338,19,400,49],[339,12,401,10,"resolve"],[339,19,401,17],[339,20,401,18],[339,21,401,19],[340,10,402,8],[340,11,402,9],[340,12,402,10],[341,8,403,6],[341,9,403,7],[341,10,403,8],[342,6,404,4],[342,7,404,5],[343,6,406,4,"render"],[343,12,406,10,"render"],[343,13,406,10],[343,15,406,13],[344,8,407,6],[344,28,408,8],[344,32,408,8,"_jsxDevRuntime"],[344,46,408,8],[344,47,408,8,"jsxDEV"],[344,53,408,8],[344,55,408,9,"_LogContext"],[344,66,408,9],[344,67,408,9,"LogContext"],[344,77,408,19],[344,78,408,20,"Provider"],[344,86,408,28],[345,10,409,10,"value"],[345,15,409,15],[345,17,409,17],[346,12,410,12,"selectedLogIndex"],[346,28,410,28],[346,30,410,30],[346,34,410,34],[346,35,410,35,"state"],[346,40,410,40],[346,41,410,41,"selectedLogIndex"],[346,57,410,57],[347,12,411,12,"isDisabled"],[347,22,411,22],[347,24,411,24],[347,28,411,28],[347,29,411,29,"state"],[347,34,411,34],[347,35,411,35,"isDisabled"],[347,45,411,45],[348,12,412,12,"logs"],[348,16,412,16],[348,18,412,18,"Array"],[348,23,412,23],[348,24,412,24,"from"],[348,28,412,28],[348,29,412,29],[348,33,412,33],[348,34,412,34,"state"],[348,39,412,39],[348,40,412,40,"logs"],[348,44,412,44],[349,10,413,10],[349,11,413,12],[350,10,413,12,"children"],[350,18,413,12],[350,21,414,11],[350,25,414,15],[350,26,414,16,"state"],[350,31,414,21],[350,32,414,22,"hasError"],[350,40,414,30],[350,43,414,33],[350,47,414,37],[350,50,414,40],[350,54,414,44],[350,55,414,45,"props"],[350,60,414,50],[350,61,414,51,"children"],[350,69,414,59],[350,84,415,10],[350,88,415,10,"_jsxDevRuntime"],[350,102,415,10],[350,103,415,10,"jsxDEV"],[350,109,415,10],[350,111,415,11,"WrappedComponent"],[350,127,415,27],[351,12,415,27,"fileName"],[351,20,415,27],[351,22,415,27,"_jsxFileName"],[351,34,415,27],[352,12,415,27,"lineNumber"],[352,22,415,27],[353,12,415,27,"columnNumber"],[353,24,415,27],[354,10,415,27],[354,17,415,29],[354,18,415,30],[355,8,415,30],[356,10,415,30,"fileName"],[356,18,415,30],[356,20,415,30,"_jsxFileName"],[356,32,415,30],[357,10,415,30,"lineNumber"],[357,20,415,30],[358,10,415,30,"columnNumber"],[358,22,415,30],[359,8,415,30],[359,15,416,29],[359,16,416,30],[360,6,418,4],[361,6,420,4,"componentDidMount"],[361,23,420,21,"componentDidMount"],[361,24,420,21],[361,26,420,30],[362,8,421,6],[362,12,421,10],[362,13,421,11,"_subscription"],[362,26,421,24],[362,29,421,27,"observe"],[362,36,421,34],[362,37,421,36,"data"],[362,41,421,40],[362,45,421,45],[363,10,422,8],[364,10,423,8],[364,14,423,12,"data"],[364,18,423,16],[364,19,423,17,"selectedLogIndex"],[364,35,423,33],[364,40,423,38],[364,41,423,39],[364,42,423,40],[364,44,423,42],[365,10,424,8,"React"],[365,15,424,13],[365,16,424,14,"startTransition"],[365,31,424,29],[365,32,424,30],[365,38,424,36],[366,12,425,10],[366,16,425,14],[366,17,425,15,"setState"],[366,25,425,23],[366,26,425,24,"data"],[366,30,425,28],[366,31,425,29],[367,10,426,8],[367,11,426,9],[367,12,426,10],[368,8,427,6],[368,9,427,7],[368,10,427,8],[369,6,428,4],[370,6,430,4,"componentWillUnmount"],[370,26,430,24,"componentWillUnmount"],[370,27,430,24],[370,29,430,33],[371,8,431,6],[371,12,431,10],[371,16,431,14],[371,17,431,15,"_subscription"],[371,30,431,28],[371,34,431,32],[371,38,431,36],[371,40,431,38],[372,10,432,8],[372,14,432,12],[372,15,432,13,"_subscription"],[372,28,432,26],[372,29,432,27,"unsubscribe"],[372,40,432,38],[372,41,432,39],[372,42,432,40],[373,8,433,6],[374,6,434,4],[375,6,436,4,"_handleDismiss"],[375,20,436,18],[375,23,436,21,"_handleDismiss"],[375,24,436,21],[375,29,436,33],[376,8,437,6],[377,8,438,6],[378,8,439,6],[379,8,440,6],[379,14,440,12],[380,10,440,14,"selectedLogIndex"],[380,26,440,30],[381,10,440,32,"logs"],[381,14,440,36],[381,16,440,38,"stateLogs"],[382,8,440,48],[382,9,440,49],[382,12,440,52],[382,16,440,56],[382,17,440,57,"state"],[382,22,440,62],[383,8,441,6],[383,14,441,12,"logsArray"],[383,23,441,21],[383,26,441,24,"Array"],[383,31,441,29],[383,32,441,30,"from"],[383,36,441,34],[383,37,441,35,"stateLogs"],[383,46,441,44],[383,47,441,45],[384,8,442,6],[384,12,442,10,"selectedLogIndex"],[384,28,442,26],[384,32,442,30],[384,36,442,34],[384,38,442,36],[385,10,443,8],[385,14,443,12,"logsArray"],[385,23,443,21],[385,24,443,22,"length"],[385,30,443,28],[385,33,443,31],[385,34,443,32],[385,38,443,36],[385,39,443,37],[385,41,443,39],[386,12,444,10,"setSelectedLog"],[386,26,444,24],[386,27,444,25],[386,28,444,26],[386,29,444,27],[386,30,444,28],[387,10,445,8],[387,11,445,9],[387,17,445,15],[387,21,445,19,"selectedLogIndex"],[387,37,445,35],[387,41,445,39,"logsArray"],[387,50,445,48],[387,51,445,49,"length"],[387,57,445,55],[387,60,445,58],[387,61,445,59],[387,63,445,61],[388,12,446,10,"setSelectedLog"],[388,26,446,24],[388,27,446,25,"selectedLogIndex"],[388,43,446,41],[388,46,446,44],[388,47,446,45],[388,48,446,46],[389,10,447,8],[390,10,449,8,"dismiss"],[390,17,449,15],[390,18,449,16,"logsArray"],[390,27,449,25],[390,28,449,26,"selectedLogIndex"],[390,44,449,42],[390,45,449,43],[390,46,449,44],[391,8,450,6],[392,6,451,4],[392,7,451,5],[393,6,453,4,"_handleMinimize"],[393,21,453,19],[393,24,453,22,"_handleMinimize"],[393,25,453,22],[393,30,453,34],[394,8,454,6,"setSelectedLog"],[394,22,454,20],[394,23,454,21],[394,24,454,22],[394,25,454,23],[394,26,454,24],[395,6,455,4],[395,7,455,5],[396,6,457,4,"_handleSetSelectedLog"],[396,27,457,25],[396,30,457,29,"index"],[396,35,457,42],[396,39,457,53],[397,8,458,6,"setSelectedLog"],[397,22,458,20],[397,23,458,21,"index"],[397,28,458,26],[397,29,458,27],[398,6,459,4],[398,7,459,5],[399,4,460,2],[401,4,462,2],[402,4,463,2],[402,11,463,9,"LogBoxStateSubscription"],[402,34,463,32],[403,2,464,0],[404,0,464,1],[404,3]],"functionMap":{"names":["<global>","getNextState","reportLogBoxError","reportUnexpectedLogBoxError","isLogBoxErrorMessage","isMessageIgnored","setImmediateShim","handleUpdate","setImmediateShim$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_1","addLog","setImmediate$argument_0","addException","symbolicateLogNow","log.symbolicate$argument_1","retrySymbolicateLogNow","log.retrySymbolicate$argument_1","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","NativeEventEmitter$argument_0.addListener","NativeEventEmitter$argument_0.removeListeners","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#constructor","emitter.addListener$argument_1","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#retry","Promise$argument_0","setState$argument_1","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","React.startTransition$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;AC2E;CDM;OEE;CFO;OGE;CHG;OIE;CJE;OKE;CLU;AME;CNK;AOE;qCCE;wBCG,qCD;KDC;CPE;AUE;6CCuB;KDQ;yCEE;KFI;gCGK;KHQ;CVQ;OcE;eCK;GDiB;CdC;OgBE;eDG;GCM;ChBC;OiBE;wBCC;GDE;CjBC;OmBE;6BCC;GDE;CnBC;OqBE;CrBE;OsBE;CtBK;OuBE;eXiB;KWM;CvBE;OwBE;0CCC,6BD;CxBM;O0BE;0CDC,uDC;C1BK;O2BE;C3BK;O4BE;C5BE;O6BE;mBCI;GDa;yCJQ,+CI;C7BE;O+BE;C/BM;OgCE;ChCE;OiCE;ICO;KDE;CjCE;EmCG,gBnC;EoCC,oBpC;OqCG;ECC;ICC;KDE;IEE;mDCI;SDI;KFE;IIE;KJI;YKW;+BCC;2CCC;SDE;ODC;KLC;IQE;KRY;ISE;mCCC;8BCG;SDE;ODC;KTC;IYE;KZI;qBaE;Kbe;sBcE;KdE;4BeE;KfE;GDC;CrCI"}},"type":"js/module"}]}