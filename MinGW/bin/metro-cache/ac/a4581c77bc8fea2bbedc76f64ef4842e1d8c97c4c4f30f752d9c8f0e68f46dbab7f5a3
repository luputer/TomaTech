{"dependencies":[{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"./NavigationContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":59,"index":106}}],"key":"2bWmw8YJlnG3wlqh6UhhvGFFAPg="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useFocusEvents = useFocusEvents;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _NavigationContext = require(_dependencyMap[1], \"./NavigationContext.js\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Hook to take care of emitting `focus` and `blur` events.\n   */\n  function useFocusEvents({\n    state,\n    emitter\n  }) {\n    const navigation = React.useContext(_NavigationContext.NavigationContext);\n    const lastFocusedKeyRef = React.useRef();\n    const currentFocusedKey = state.routes[state.index].key;\n\n    // When the parent screen changes its focus state, we also need to change child's focus\n    // Coz the child screen can't be focused if the parent screen is out of focus\n    React.useEffect(() => navigation?.addListener('focus', () => {\n      lastFocusedKeyRef.current = currentFocusedKey;\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => navigation?.addListener('blur', () => {\n      lastFocusedKeyRef.current = undefined;\n      emitter.emit({\n        type: 'blur',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => {\n      const lastFocusedKey = lastFocusedKeyRef.current;\n      lastFocusedKeyRef.current = currentFocusedKey;\n\n      // We wouldn't have `lastFocusedKey` on initial mount\n      // Fire focus event for the current route on mount if there's no parent navigator\n      if (lastFocusedKey === undefined && !navigation) {\n        emitter.emit({\n          type: 'focus',\n          target: currentFocusedKey\n        });\n      }\n\n      // We should only emit events when the focused key changed and navigator is focused\n      // When navigator is not focused, screens inside shouldn't receive focused status either\n      if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {\n        return;\n      }\n      if (lastFocusedKey === undefined) {\n        // Only fire events after initial mount\n        return;\n      }\n      emitter.emit({\n        type: 'blur',\n        target: lastFocusedKey\n      });\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }, [currentFocusedKey, emitter, navigation]);\n  }\n});","lineCount":71,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useFocusEvents"],[7,24,1,13],[7,27,1,13,"useFocusEvents"],[7,41,1,13],[8,2,3,0],[8,6,3,0,"React"],[8,11,3,0],[8,14,3,0,"_interopRequireWildcard"],[8,37,3,0],[8,38,3,0,"require"],[8,45,3,0],[8,46,3,0,"_dependencyMap"],[8,60,3,0],[9,2,4,0],[9,6,4,0,"_NavigationContext"],[9,24,4,0],[9,27,4,0,"require"],[9,34,4,0],[9,35,4,0,"_dependencyMap"],[9,49,4,0],[10,2,4,59],[10,11,4,59,"_getRequireWildcardCache"],[10,36,4,59,"e"],[10,37,4,59],[10,66,4,59,"WeakMap"],[10,73,4,59],[10,92,4,59,"r"],[10,93,4,59],[10,100,4,59,"WeakMap"],[10,107,4,59],[10,111,4,59,"t"],[10,112,4,59],[10,119,4,59,"WeakMap"],[10,126,4,59],[10,138,4,59,"_getRequireWildcardCache"],[10,162,4,59],[10,174,4,59,"_getRequireWildcardCache"],[10,175,4,59,"e"],[10,176,4,59],[10,187,4,59,"e"],[10,188,4,59],[10,191,4,59,"t"],[10,192,4,59],[10,195,4,59,"r"],[10,196,4,59],[10,201,4,59,"e"],[10,202,4,59],[11,2,4,59],[11,11,4,59,"_interopRequireWildcard"],[11,35,4,59,"e"],[11,36,4,59],[11,38,4,59,"r"],[11,39,4,59],[11,48,4,59,"r"],[11,49,4,59],[11,53,4,59,"e"],[11,54,4,59],[11,58,4,59,"e"],[11,59,4,59],[11,60,4,59,"__esModule"],[11,70,4,59],[11,79,4,59,"e"],[11,80,4,59],[11,95,4,59,"e"],[11,96,4,59],[11,119,4,59,"e"],[11,120,4,59],[11,145,4,59,"e"],[11,146,4,59],[11,157,4,59,"default"],[11,164,4,59],[11,166,4,59,"e"],[11,167,4,59],[11,175,4,59,"t"],[11,176,4,59],[11,179,4,59,"_getRequireWildcardCache"],[11,203,4,59],[11,204,4,59,"r"],[11,205,4,59],[11,212,4,59,"t"],[11,213,4,59],[11,217,4,59,"t"],[11,218,4,59],[11,219,4,59,"has"],[11,222,4,59],[11,223,4,59,"e"],[11,224,4,59],[11,234,4,59,"t"],[11,235,4,59],[11,236,4,59,"get"],[11,239,4,59],[11,240,4,59,"e"],[11,241,4,59],[11,248,4,59,"n"],[11,249,4,59],[11,254,4,59,"__proto__"],[11,263,4,59],[11,273,4,59,"a"],[11,274,4,59],[11,277,4,59,"Object"],[11,283,4,59],[11,284,4,59,"defineProperty"],[11,298,4,59],[11,302,4,59,"Object"],[11,308,4,59],[11,309,4,59,"getOwnPropertyDescriptor"],[11,333,4,59],[11,344,4,59,"u"],[11,345,4,59],[11,349,4,59,"e"],[11,350,4,59],[11,370,4,59,"u"],[11,371,4,59],[11,378,4,59,"hasOwnProperty"],[11,392,4,59],[11,393,4,59,"call"],[11,397,4,59],[11,398,4,59,"e"],[11,399,4,59],[11,401,4,59,"u"],[11,402,4,59],[11,411,4,59,"i"],[11,412,4,59],[11,415,4,59,"a"],[11,416,4,59],[11,419,4,59,"Object"],[11,425,4,59],[11,426,4,59,"getOwnPropertyDescriptor"],[11,450,4,59],[11,451,4,59,"e"],[11,452,4,59],[11,454,4,59,"u"],[11,455,4,59],[11,465,4,59,"i"],[11,466,4,59],[11,471,4,59,"i"],[11,472,4,59],[11,473,4,59,"get"],[11,476,4,59],[11,480,4,59,"i"],[11,481,4,59],[11,482,4,59,"set"],[11,485,4,59],[11,489,4,59,"Object"],[11,495,4,59],[11,496,4,59,"defineProperty"],[11,510,4,59],[11,511,4,59,"n"],[11,512,4,59],[11,514,4,59,"u"],[11,515,4,59],[11,517,4,59,"i"],[11,518,4,59],[11,522,4,59,"n"],[11,523,4,59],[11,524,4,59,"u"],[11,525,4,59],[11,529,4,59,"e"],[11,530,4,59],[11,531,4,59,"u"],[11,532,4,59],[11,544,4,59,"n"],[11,545,4,59],[11,546,4,59,"default"],[11,553,4,59],[11,556,4,59,"e"],[11,557,4,59],[11,559,4,59,"t"],[11,560,4,59],[11,564,4,59,"t"],[11,565,4,59],[11,566,4,59,"set"],[11,569,4,59],[11,570,4,59,"e"],[11,571,4,59],[11,573,4,59,"n"],[11,574,4,59],[11,577,4,59,"n"],[11,578,4,59],[12,2,5,0],[13,0,6,0],[14,0,7,0],[15,2,8,7],[15,11,8,16,"useFocusEvents"],[15,25,8,30,"useFocusEvents"],[15,26,8,31],[16,4,9,2,"state"],[16,9,9,7],[17,4,10,2,"emitter"],[18,2,11,0],[18,3,11,1],[18,5,11,3],[19,4,12,2],[19,10,12,8,"navigation"],[19,20,12,18],[19,23,12,21,"React"],[19,28,12,26],[19,29,12,27,"useContext"],[19,39,12,37],[19,40,12,38,"NavigationContext"],[19,76,12,55],[19,77,12,56],[20,4,13,2],[20,10,13,8,"lastFocusedKeyRef"],[20,27,13,25],[20,30,13,28,"React"],[20,35,13,33],[20,36,13,34,"useRef"],[20,42,13,40],[20,43,13,41],[20,44,13,42],[21,4,14,2],[21,10,14,8,"currentFocusedKey"],[21,27,14,25],[21,30,14,28,"state"],[21,35,14,33],[21,36,14,34,"routes"],[21,42,14,40],[21,43,14,41,"state"],[21,48,14,46],[21,49,14,47,"index"],[21,54,14,52],[21,55,14,53],[21,56,14,54,"key"],[21,59,14,57],[23,4,16,2],[24,4,17,2],[25,4,18,2,"React"],[25,9,18,7],[25,10,18,8,"useEffect"],[25,19,18,17],[25,20,18,18],[25,26,18,24,"navigation"],[25,36,18,34],[25,38,18,36,"addListener"],[25,49,18,47],[25,50,18,48],[25,57,18,55],[25,59,18,57],[25,65,18,63],[26,6,19,4,"lastFocusedKeyRef"],[26,23,19,21],[26,24,19,22,"current"],[26,31,19,29],[26,34,19,32,"currentFocusedKey"],[26,51,19,49],[27,6,20,4,"emitter"],[27,13,20,11],[27,14,20,12,"emit"],[27,18,20,16],[27,19,20,17],[28,8,21,6,"type"],[28,12,21,10],[28,14,21,12],[28,21,21,19],[29,8,22,6,"target"],[29,14,22,12],[29,16,22,14,"currentFocusedKey"],[30,6,23,4],[30,7,23,5],[30,8,23,6],[31,4,24,2],[31,5,24,3],[31,6,24,4],[31,8,24,6],[31,9,24,7,"currentFocusedKey"],[31,26,24,24],[31,28,24,26,"emitter"],[31,35,24,33],[31,37,24,35,"navigation"],[31,47,24,45],[31,48,24,46],[31,49,24,47],[32,4,25,2,"React"],[32,9,25,7],[32,10,25,8,"useEffect"],[32,19,25,17],[32,20,25,18],[32,26,25,24,"navigation"],[32,36,25,34],[32,38,25,36,"addListener"],[32,49,25,47],[32,50,25,48],[32,56,25,54],[32,58,25,56],[32,64,25,62],[33,6,26,4,"lastFocusedKeyRef"],[33,23,26,21],[33,24,26,22,"current"],[33,31,26,29],[33,34,26,32,"undefined"],[33,43,26,41],[34,6,27,4,"emitter"],[34,13,27,11],[34,14,27,12,"emit"],[34,18,27,16],[34,19,27,17],[35,8,28,6,"type"],[35,12,28,10],[35,14,28,12],[35,20,28,18],[36,8,29,6,"target"],[36,14,29,12],[36,16,29,14,"currentFocusedKey"],[37,6,30,4],[37,7,30,5],[37,8,30,6],[38,4,31,2],[38,5,31,3],[38,6,31,4],[38,8,31,6],[38,9,31,7,"currentFocusedKey"],[38,26,31,24],[38,28,31,26,"emitter"],[38,35,31,33],[38,37,31,35,"navigation"],[38,47,31,45],[38,48,31,46],[38,49,31,47],[39,4,32,2,"React"],[39,9,32,7],[39,10,32,8,"useEffect"],[39,19,32,17],[39,20,32,18],[39,26,32,24],[40,6,33,4],[40,12,33,10,"lastFocusedKey"],[40,26,33,24],[40,29,33,27,"lastFocusedKeyRef"],[40,46,33,44],[40,47,33,45,"current"],[40,54,33,52],[41,6,34,4,"lastFocusedKeyRef"],[41,23,34,21],[41,24,34,22,"current"],[41,31,34,29],[41,34,34,32,"currentFocusedKey"],[41,51,34,49],[43,6,36,4],[44,6,37,4],[45,6,38,4],[45,10,38,8,"lastFocusedKey"],[45,24,38,22],[45,29,38,27,"undefined"],[45,38,38,36],[45,42,38,40],[45,43,38,41,"navigation"],[45,53,38,51],[45,55,38,53],[46,8,39,6,"emitter"],[46,15,39,13],[46,16,39,14,"emit"],[46,20,39,18],[46,21,39,19],[47,10,40,8,"type"],[47,14,40,12],[47,16,40,14],[47,23,40,21],[48,10,41,8,"target"],[48,16,41,14],[48,18,41,16,"currentFocusedKey"],[49,8,42,6],[49,9,42,7],[49,10,42,8],[50,6,43,4],[52,6,45,4],[53,6,46,4],[54,6,47,4],[54,10,47,8,"lastFocusedKey"],[54,24,47,22],[54,29,47,27,"currentFocusedKey"],[54,46,47,44],[54,50,47,48],[54,52,47,50,"navigation"],[54,62,47,60],[54,65,47,63,"navigation"],[54,75,47,73],[54,76,47,74,"isFocused"],[54,85,47,83],[54,86,47,84],[54,87,47,85],[54,90,47,88],[54,94,47,92],[54,95,47,93],[54,97,47,95],[55,8,48,6],[56,6,49,4],[57,6,50,4],[57,10,50,8,"lastFocusedKey"],[57,24,50,22],[57,29,50,27,"undefined"],[57,38,50,36],[57,40,50,38],[58,8,51,6],[59,8,52,6],[60,6,53,4],[61,6,54,4,"emitter"],[61,13,54,11],[61,14,54,12,"emit"],[61,18,54,16],[61,19,54,17],[62,8,55,6,"type"],[62,12,55,10],[62,14,55,12],[62,20,55,18],[63,8,56,6,"target"],[63,14,56,12],[63,16,56,14,"lastFocusedKey"],[64,6,57,4],[64,7,57,5],[64,8,57,6],[65,6,58,4,"emitter"],[65,13,58,11],[65,14,58,12,"emit"],[65,18,58,16],[65,19,58,17],[66,8,59,6,"type"],[66,12,59,10],[66,14,59,12],[66,21,59,19],[67,8,60,6,"target"],[67,14,60,12],[67,16,60,14,"currentFocusedKey"],[68,6,61,4],[68,7,61,5],[68,8,61,6],[69,4,62,2],[69,5,62,3],[69,7,62,5],[69,8,62,6,"currentFocusedKey"],[69,25,62,23],[69,27,62,25,"emitter"],[69,34,62,32],[69,36,62,34,"navigation"],[69,46,62,44],[69,47,62,45],[69,48,62,46],[70,2,63,0],[71,0,63,1],[71,3]],"functionMap":{"names":["<global>","useFocusEvents","React.useEffect$argument_0","navigation.addListener$argument_1"],"mappings":"AAA;OCO;kBCU,uCC;GDM,CD;kBCC,sCC;GDM,CD;kBCC;GD8B;CDC"}},"type":"js/module"}]}