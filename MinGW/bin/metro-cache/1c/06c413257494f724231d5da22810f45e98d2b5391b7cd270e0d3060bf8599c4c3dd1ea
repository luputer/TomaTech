{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":321,"column":0,"index":9373}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":389},"end":{"line":11,"column":65,"index":454}}],"key":"XoxpMp0tSxL+XVSt2TU4IzZE23M="}},{"name":"pretty-format","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":455},"end":{"line":12,"column":54,"index":509}}],"key":"Lk6dnOlknI2idzN76JnVT0sQ8BY="}},{"name":"./LoadingView","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":511},"end":{"line":14,"column":40,"index":551}}],"key":"6q4qNMFSsj2L+wO00M1+XXtEciE="}},{"name":"./error-overlay/LogBox","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":552},"end":{"line":15,"column":44,"index":596}}],"key":"3q9K1Q2jvrLkXEcOHx7iUDKes9g="}},{"name":"./getDevServer","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":597},"end":{"line":16,"column":42,"index":639}}],"key":"PEcM6TbyS4rBYfu5y89u4bAVQj8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _HMRClient = _interopRequireDefault(require(_dependencyMap[1], \"metro-runtime/src/modules/HMRClient\"));\n  var _prettyFormat = _interopRequireWildcard(require(_dependencyMap[2], \"pretty-format\"));\n  var _LoadingView = _interopRequireDefault(require(_dependencyMap[3], \"./LoadingView\"));\n  var _LogBox = _interopRequireDefault(require(_dependencyMap[4], \"./error-overlay/LogBox\"));\n  var _getDevServer = _interopRequireDefault(require(_dependencyMap[5], \"./getDevServer\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * Based on this but with web support:\n   * https://github.com/facebook/react-native/blob/086714b02b0fb838dee5a66c5bcefe73b53cf3df/Libraries/Utilities/HMRClient.js\n   */\n\n  const pendingEntryPoints = [];\n\n  // @ts-expect-error: Account for multiple versions of pretty-format inside of a monorepo.\n  const prettyFormatFunc = typeof _prettyFormat.default === 'function' ? _prettyFormat.default : _prettyFormat.default.default;\n  let hmrClient = null;\n  let hmrUnavailableReason = null;\n  let currentCompileErrorMessage = null;\n  let didConnect = false;\n  const pendingLogs = [];\n  function assert(foo, msg) {\n    if (!foo) throw new Error(msg);\n  }\n\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  const HMRClient = {\n    enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      const hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        _LoadingView.default.showMessage('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          _LoadingView.default.hide();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable() {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle(requestUrl) {\n      assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level,\n          platform: 'web',\n          mode: 'BRIDGE',\n          data: data.map(item => typeof item === 'string' ? item : prettyFormatFunc(item, {\n            escapeString: true,\n            highlight: true,\n            maxDepth: 3,\n            min: true,\n            plugins: [_prettyFormat.plugins.ReactElement]\n          }))\n        }));\n      } catch {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup({\n      isEnabled\n    }) {\n      assert(!hmrClient, 'Cannot initialize hmrClient twice');\n      const serverScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n      const client = new _HMRClient.default(`${serverScheme}://${window.location.host}/hot`);\n      hmrClient = client;\n      const {\n        fullBundleUrl\n      } = (0, _getDevServer.default)();\n      pendingEntryPoints.push(\n      // HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl);\n      client.on('connection-error', e => {\n        let error = `Cannot connect to Metro.\n \n Try the following to fix the issue:\n - Ensure the Metro dev server is running and available on the same network as this device`;\n        error += `\n \n URL: ${window.location.host}\n \n Error: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', ({\n        isInitialUpdate\n      }) => {\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          _LoadingView.default.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', ({\n        isInitialUpdate\n      }) => {\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          _LogBox.default.clearAllLogs();\n        }\n      });\n      client.on('update-done', () => {\n        _LoadingView.default.hide();\n      });\n      client.on('error', data => {\n        _LoadingView.default.hide();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', closeEvent => {\n        _LoadingView.default.hide();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        const isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs();\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    assert(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      // \"Bundle Splitting – Metro disconnected\"\n      window.location.reload();\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client?.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs() {\n    try {\n      pendingLogs.forEach(([level, data]) => {\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    // TODO(EvanBacon): Error overlay for web.\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    const message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    const error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    // @ts-expect-error\n    error.preventSymbolication = true;\n    throw error;\n  }\n  var _default = exports.default = HMRClient;\n});","lineCount":261,"map":[[7,2,11,0],[7,6,11,0,"_HMRClient"],[7,16,11,0],[7,19,11,0,"_interopRequireDefault"],[7,41,11,0],[7,42,11,0,"require"],[7,49,11,0],[7,50,11,0,"_dependencyMap"],[7,64,11,0],[8,2,12,0],[8,6,12,0,"_prettyFormat"],[8,19,12,0],[8,22,12,0,"_interopRequireWildcard"],[8,45,12,0],[8,46,12,0,"require"],[8,53,12,0],[8,54,12,0,"_dependencyMap"],[8,68,12,0],[9,2,14,0],[9,6,14,0,"_LoadingView"],[9,18,14,0],[9,21,14,0,"_interopRequireDefault"],[9,43,14,0],[9,44,14,0,"require"],[9,51,14,0],[9,52,14,0,"_dependencyMap"],[9,66,14,0],[10,2,15,0],[10,6,15,0,"_LogBox"],[10,13,15,0],[10,16,15,0,"_interopRequireDefault"],[10,38,15,0],[10,39,15,0,"require"],[10,46,15,0],[10,47,15,0,"_dependencyMap"],[10,61,15,0],[11,2,16,0],[11,6,16,0,"_getDevServer"],[11,19,16,0],[11,22,16,0,"_interopRequireDefault"],[11,44,16,0],[11,45,16,0,"require"],[11,52,16,0],[11,53,16,0,"_dependencyMap"],[11,67,16,0],[12,2,16,42],[12,11,16,42,"_getRequireWildcardCache"],[12,36,16,42,"e"],[12,37,16,42],[12,66,16,42,"WeakMap"],[12,73,16,42],[12,92,16,42,"r"],[12,93,16,42],[12,100,16,42,"WeakMap"],[12,107,16,42],[12,111,16,42,"t"],[12,112,16,42],[12,119,16,42,"WeakMap"],[12,126,16,42],[12,138,16,42,"_getRequireWildcardCache"],[12,162,16,42],[12,174,16,42,"_getRequireWildcardCache"],[12,175,16,42,"e"],[12,176,16,42],[12,187,16,42,"e"],[12,188,16,42],[12,191,16,42,"t"],[12,192,16,42],[12,195,16,42,"r"],[12,196,16,42],[12,201,16,42,"e"],[12,202,16,42],[13,2,16,42],[13,11,16,42,"_interopRequireWildcard"],[13,35,16,42,"e"],[13,36,16,42],[13,38,16,42,"r"],[13,39,16,42],[13,48,16,42,"r"],[13,49,16,42],[13,53,16,42,"e"],[13,54,16,42],[13,58,16,42,"e"],[13,59,16,42],[13,60,16,42,"__esModule"],[13,70,16,42],[13,79,16,42,"e"],[13,80,16,42],[13,95,16,42,"e"],[13,96,16,42],[13,119,16,42,"e"],[13,120,16,42],[13,145,16,42,"e"],[13,146,16,42],[13,157,16,42,"default"],[13,164,16,42],[13,166,16,42,"e"],[13,167,16,42],[13,175,16,42,"t"],[13,176,16,42],[13,179,16,42,"_getRequireWildcardCache"],[13,203,16,42],[13,204,16,42,"r"],[13,205,16,42],[13,212,16,42,"t"],[13,213,16,42],[13,217,16,42,"t"],[13,218,16,42],[13,219,16,42,"has"],[13,222,16,42],[13,223,16,42,"e"],[13,224,16,42],[13,234,16,42,"t"],[13,235,16,42],[13,236,16,42,"get"],[13,239,16,42],[13,240,16,42,"e"],[13,241,16,42],[13,248,16,42,"n"],[13,249,16,42],[13,254,16,42,"__proto__"],[13,263,16,42],[13,273,16,42,"a"],[13,274,16,42],[13,277,16,42,"Object"],[13,283,16,42],[13,284,16,42,"defineProperty"],[13,298,16,42],[13,302,16,42,"Object"],[13,308,16,42],[13,309,16,42,"getOwnPropertyDescriptor"],[13,333,16,42],[13,344,16,42,"u"],[13,345,16,42],[13,349,16,42,"e"],[13,350,16,42],[13,370,16,42,"u"],[13,371,16,42],[13,378,16,42,"hasOwnProperty"],[13,392,16,42],[13,393,16,42,"call"],[13,397,16,42],[13,398,16,42,"e"],[13,399,16,42],[13,401,16,42,"u"],[13,402,16,42],[13,411,16,42,"i"],[13,412,16,42],[13,415,16,42,"a"],[13,416,16,42],[13,419,16,42,"Object"],[13,425,16,42],[13,426,16,42,"getOwnPropertyDescriptor"],[13,450,16,42],[13,451,16,42,"e"],[13,452,16,42],[13,454,16,42,"u"],[13,455,16,42],[13,465,16,42,"i"],[13,466,16,42],[13,471,16,42,"i"],[13,472,16,42],[13,473,16,42,"get"],[13,476,16,42],[13,480,16,42,"i"],[13,481,16,42],[13,482,16,42,"set"],[13,485,16,42],[13,489,16,42,"Object"],[13,495,16,42],[13,496,16,42,"defineProperty"],[13,510,16,42],[13,511,16,42,"n"],[13,512,16,42],[13,514,16,42,"u"],[13,515,16,42],[13,517,16,42,"i"],[13,518,16,42],[13,522,16,42,"n"],[13,523,16,42],[13,524,16,42,"u"],[13,525,16,42],[13,529,16,42,"e"],[13,530,16,42],[13,531,16,42,"u"],[13,532,16,42],[13,544,16,42,"n"],[13,545,16,42],[13,546,16,42,"default"],[13,553,16,42],[13,556,16,42,"e"],[13,557,16,42],[13,559,16,42,"t"],[13,560,16,42],[13,564,16,42,"t"],[13,565,16,42],[13,566,16,42,"set"],[13,569,16,42],[13,570,16,42,"e"],[13,571,16,42],[13,573,16,42,"n"],[13,574,16,42],[13,577,16,42,"n"],[13,578,16,42],[14,2,1,0],[15,0,2,0],[16,0,3,0],[17,0,4,0],[18,0,5,0],[19,0,6,0],[20,0,7,0],[21,0,8,0],[22,0,9,0],[23,0,10,0],[25,2,18,0],[25,8,18,6,"pendingEntryPoints"],[25,26,18,34],[25,29,18,37],[25,31,18,39],[27,2,20,0],[28,2,21,0],[28,8,21,6,"prettyFormatFunc"],[28,24,21,22],[28,27,21,25],[28,34,21,32,"prettyFormat"],[28,55,21,44],[28,60,21,49],[28,70,21,59],[28,73,21,62,"prettyFormat"],[28,94,21,74],[28,97,21,77,"prettyFormat"],[28,118,21,89],[28,119,21,90,"default"],[28,126,21,97],[29,2,31,0],[29,6,31,4,"hmrClient"],[29,15,31,35],[29,18,31,38],[29,22,31,42],[30,2,32,0],[30,6,32,4,"hmrUnavailableReason"],[30,26,32,39],[30,29,32,42],[30,33,32,46],[31,2,33,0],[31,6,33,4,"currentCompileErrorMessage"],[31,32,33,45],[31,35,33,48],[31,39,33,52],[32,2,34,0],[32,6,34,4,"didConnect"],[32,16,34,23],[32,19,34,26],[32,24,34,31],[33,2,35,0],[33,8,35,6,"pendingLogs"],[33,19,35,38],[33,22,35,41],[33,24,35,43],[34,2,56,0],[34,11,56,9,"assert"],[34,17,56,15,"assert"],[34,18,56,16,"foo"],[34,21,56,24],[34,23,56,26,"msg"],[34,26,56,37],[34,28,56,52],[35,4,57,2],[35,8,57,6],[35,9,57,7,"foo"],[35,12,57,10],[35,14,57,12],[35,20,57,18],[35,24,57,22,"Error"],[35,29,57,27],[35,30,57,28,"msg"],[35,33,57,31],[35,34,57,32],[36,2,58,0],[38,2,60,0],[39,0,61,0],[40,0,62,0],[41,0,63,0],[42,2,64,0],[42,8,64,6,"HMRClient"],[42,17,64,41],[42,20,64,44],[43,4,65,2,"enable"],[43,10,65,8,"enable"],[43,11,65,8],[43,13,65,11],[44,6,66,4],[44,10,66,8,"hmrUnavailableReason"],[44,30,66,28],[44,35,66,33],[44,39,66,37],[44,41,66,39],[45,8,67,6],[46,8,68,6],[47,8,69,6],[48,8,70,6],[49,8,71,6],[49,14,71,12],[49,18,71,16,"Error"],[49,23,71,21],[49,24,71,22,"hmrUnavailableReason"],[49,44,71,42],[49,45,71,43],[50,6,72,4],[51,6,74,4,"assert"],[51,12,74,10],[51,13,74,11,"hmrClient"],[51,22,74,20],[51,24,74,22],[51,69,74,67],[51,70,74,68],[53,6,76,4],[54,6,77,4],[55,6,78,4,"hmrClient"],[55,15,78,13],[55,16,78,14,"send"],[55,20,78,18],[55,21,78,19,"JSON"],[55,25,78,23],[55,26,78,24,"stringify"],[55,35,78,33],[55,36,78,34],[56,8,78,36,"type"],[56,12,78,40],[56,14,78,42],[57,6,78,55],[57,7,78,56],[57,8,78,57],[57,9,78,58],[59,6,80,4],[60,6,81,4],[61,6,82,4],[61,12,82,10,"hasUpdates"],[61,22,82,20],[61,25,82,23,"hmrClient"],[61,34,82,32],[61,35,82,34,"hasPendingUpdates"],[61,52,82,51],[61,53,82,52],[61,54,82,53],[62,6,84,4],[62,10,84,8,"hasUpdates"],[62,20,84,18],[62,22,84,20],[63,8,85,6,"LoadingView"],[63,28,85,17],[63,29,85,18,"showMessage"],[63,40,85,29],[63,41,85,30],[63,56,85,45],[63,58,85,47],[63,67,85,56],[63,68,85,57],[64,6,86,4],[65,6,87,4],[65,10,87,8],[66,8,88,6,"hmrClient"],[66,17,88,15],[66,18,88,16,"enable"],[66,24,88,22],[66,25,88,23],[66,26,88,24],[67,6,89,4],[67,7,89,5],[67,16,89,14],[68,8,90,6],[68,12,90,10,"hasUpdates"],[68,22,90,20],[68,24,90,22],[69,10,91,8,"LoadingView"],[69,30,91,19],[69,31,91,20,"hide"],[69,35,91,24],[69,36,91,25],[69,37,91,26],[70,8,92,6],[71,6,93,4],[73,6,95,4],[74,6,96,4],[75,6,97,4,"showCompileError"],[75,22,97,20],[75,23,97,21],[75,24,97,22],[76,4,98,2],[76,5,98,3],[77,4,100,2,"disable"],[77,11,100,9,"disable"],[77,12,100,9],[77,14,100,12],[78,6,101,4,"assert"],[78,12,101,10],[78,13,101,11,"hmrClient"],[78,22,101,20],[78,24,101,22],[78,69,101,67],[78,70,101,68],[79,6,102,4,"hmrClient"],[79,15,102,13],[79,16,102,14,"disable"],[79,23,102,21],[79,24,102,22],[79,25,102,23],[80,4,103,2],[80,5,103,3],[81,4,105,2,"registerBundle"],[81,18,105,16,"registerBundle"],[81,19,105,17,"requestUrl"],[81,29,105,35],[81,31,105,37],[82,6,106,4,"assert"],[82,12,106,10],[82,13,106,11,"hmrClient"],[82,22,106,20],[82,24,106,22],[82,69,106,67],[82,70,106,68],[83,6,107,4,"pendingEntryPoints"],[83,24,107,22],[83,25,107,23,"push"],[83,29,107,27],[83,30,107,28,"requestUrl"],[83,40,107,38],[83,41,107,39],[84,6,108,4,"registerBundleEntryPoints"],[84,31,108,29],[84,32,108,30,"hmrClient"],[84,41,108,39],[84,42,108,40],[85,4,109,2],[85,5,109,3],[86,4,111,2,"log"],[86,7,111,5,"log"],[86,8,111,6,"level"],[86,13,111,21],[86,15,111,23,"data"],[86,19,111,34],[86,21,111,36],[87,6,112,4],[87,10,112,8],[87,11,112,9,"hmrClient"],[87,20,112,18],[87,22,112,20],[88,8,113,6],[89,8,114,6],[90,8,115,6,"pendingLogs"],[90,19,115,17],[90,20,115,18,"push"],[90,24,115,22],[90,25,115,23],[90,26,115,24,"level"],[90,31,115,29],[90,33,115,31,"data"],[90,37,115,35],[90,38,115,36],[90,39,115,37],[91,8,116,6],[91,12,116,10,"pendingLogs"],[91,23,116,21],[91,24,116,22,"length"],[91,30,116,28],[91,33,116,31],[91,36,116,34],[91,38,116,36],[92,10,117,8,"pendingLogs"],[92,21,117,19],[92,22,117,20,"shift"],[92,27,117,25],[92,28,117,26],[92,29,117,27],[93,8,118,6],[94,8,119,6],[95,6,120,4],[96,6,121,4],[96,10,121,8],[97,8,122,6,"hmrClient"],[97,17,122,15],[97,18,122,16,"send"],[97,22,122,20],[97,23,123,8,"JSON"],[97,27,123,12],[97,28,123,13,"stringify"],[97,37,123,22],[97,38,123,23],[98,10,124,10,"type"],[98,14,124,14],[98,16,124,16],[98,21,124,21],[99,10,125,10,"level"],[99,15,125,15],[100,10,126,10,"platform"],[100,18,126,18],[100,20,126,20],[100,25,126,25],[101,10,127,10,"mode"],[101,14,127,14],[101,16,127,16],[101,24,127,24],[102,10,128,10,"data"],[102,14,128,14],[102,16,128,16,"data"],[102,20,128,20],[102,21,128,21,"map"],[102,24,128,24],[102,25,128,26,"item"],[102,29,128,30],[102,33,129,12],[102,40,129,19,"item"],[102,44,129,23],[102,49,129,28],[102,57,129,36],[102,60,130,16,"item"],[102,64,130,20],[102,67,131,16,"prettyFormatFunc"],[102,83,131,32],[102,84,131,33,"item"],[102,88,131,37],[102,90,131,39],[103,12,132,18,"escapeString"],[103,24,132,30],[103,26,132,32],[103,30,132,36],[104,12,133,18,"highlight"],[104,21,133,27],[104,23,133,29],[104,27,133,33],[105,12,134,18,"maxDepth"],[105,20,134,26],[105,22,134,28],[105,23,134,29],[106,12,135,18,"min"],[106,15,135,21],[106,17,135,23],[106,21,135,27],[107,12,136,18,"plugins"],[107,19,136,25],[107,21,136,27],[107,22,136,28,"plugins"],[107,43,136,35],[107,44,136,36,"ReactElement"],[107,56,136,48],[108,10,137,16],[108,11,137,17],[108,12,138,10],[109,8,139,8],[109,9,139,9],[109,10,140,6],[109,11,140,7],[110,6,141,4],[110,7,141,5],[110,8,141,6],[110,14,141,12],[111,8,142,6],[112,8,143,6],[113,6,143,6],[114,4,145,2],[114,5,145,3],[115,4,147,2],[116,4,148,2],[117,4,149,2,"setup"],[117,9,149,7,"setup"],[117,10,149,8],[118,6,149,10,"isEnabled"],[119,4,149,44],[119,5,149,45],[119,7,149,47],[120,6,150,4,"assert"],[120,12,150,10],[120,13,150,11],[120,14,150,12,"hmrClient"],[120,23,150,21],[120,25,150,23],[120,60,150,58],[120,61,150,59],[121,6,152,4],[121,12,152,10,"serverScheme"],[121,24,152,22],[121,27,152,25,"window"],[121,33,152,31],[121,34,152,32,"location"],[121,42,152,40],[121,43,152,41,"protocol"],[121,51,152,49],[121,56,152,54],[121,64,152,62],[121,67,152,65],[121,72,152,70],[121,75,152,73],[121,79,152,77],[122,6,153,4],[122,12,153,10,"client"],[122,18,153,16],[122,21,153,19],[122,25,153,23,"MetroHMRClient"],[122,43,153,37],[122,44,153,38],[122,47,153,41,"serverScheme"],[122,59,153,53],[122,65,153,59,"window"],[122,71,153,65],[122,72,153,66,"location"],[122,80,153,74],[122,81,153,75,"host"],[122,85,153,79],[122,91,153,85],[122,92,153,86],[123,6,154,4,"hmrClient"],[123,15,154,13],[123,18,154,16,"client"],[123,24,154,22],[124,6,156,4],[124,12,156,10],[125,8,156,12,"fullBundleUrl"],[126,6,156,26],[126,7,156,27],[126,10,156,30],[126,14,156,30,"getDevServer"],[126,35,156,42],[126,37,156,43],[126,38,156,44],[127,6,157,4,"pendingEntryPoints"],[127,24,157,22],[127,25,157,23,"push"],[127,29,157,27],[128,6,158,6],[129,6,159,6],[130,6,160,6],[131,6,161,6,"fullBundleUrl"],[131,19,162,4],[131,20,162,5],[132,6,164,4,"client"],[132,12,164,10],[132,13,164,11,"on"],[132,15,164,13],[132,16,164,14],[132,34,164,32],[132,36,164,35,"e"],[132,37,164,43],[132,41,164,48],[133,8,165,6],[133,12,165,10,"error"],[133,17,165,15],[133,20,165,18],[134,0,166,0],[135,0,167,0],[136,0,168,0],[136,91,168,91],[137,8,169,6,"error"],[137,13,169,11],[137,17,169,15],[138,0,170,0],[139,0,171,0],[139,8,171,8,"window"],[139,14,171,14],[139,15,171,15,"location"],[139,23,171,23],[139,24,171,24,"host"],[139,28,171,28],[140,0,172,0],[141,0,173,0],[141,10,173,10,"e"],[141,11,173,11],[141,12,173,12,"message"],[141,19,173,19],[141,21,173,21],[142,8,175,6,"setHMRUnavailableReason"],[142,31,175,29],[142,32,175,30,"error"],[142,37,175,35],[142,38,175,36],[143,6,176,4],[143,7,176,5],[143,8,176,6],[144,6,178,4,"client"],[144,12,178,10],[144,13,178,11,"on"],[144,15,178,13],[144,16,178,14],[144,30,178,28],[144,32,178,30],[144,33,178,31],[145,8,178,33,"isInitialUpdate"],[146,6,178,80],[146,7,178,81],[146,12,178,86],[147,8,179,6,"currentCompileErrorMessage"],[147,34,179,32],[147,37,179,35],[147,41,179,39],[148,8,180,6,"didConnect"],[148,18,180,16],[148,21,180,19],[148,25,180,23],[149,8,182,6],[149,12,182,10,"client"],[149,18,182,16],[149,19,182,17,"isEnabled"],[149,28,182,26],[149,29,182,27],[149,30,182,28],[149,34,182,32],[149,35,182,33,"isInitialUpdate"],[149,50,182,48],[149,52,182,50],[150,10,183,8,"LoadingView"],[150,30,183,19],[150,31,183,20,"showMessage"],[150,42,183,31],[150,43,183,32],[150,58,183,47],[150,60,183,49],[150,69,183,58],[150,70,183,59],[151,8,184,6],[152,6,185,4],[152,7,185,5],[152,8,185,6],[153,6,187,4,"client"],[153,12,187,10],[153,13,187,11,"on"],[153,15,187,13],[153,16,187,14],[153,24,187,22],[153,26,187,24],[153,27,187,25],[154,8,187,27,"isInitialUpdate"],[155,6,187,74],[155,7,187,75],[155,12,187,80],[156,8,188,6],[156,12,188,10,"client"],[156,18,188,16],[156,19,188,17,"isEnabled"],[156,28,188,26],[156,29,188,27],[156,30,188,28],[156,34,188,32],[156,35,188,33,"isInitialUpdate"],[156,50,188,48],[156,52,188,50],[157,10,189,8,"dismissRedbox"],[157,23,189,21],[157,24,189,22],[157,25,189,23],[158,10,190,8,"LogBox"],[158,25,190,14],[158,26,190,15,"clearAllLogs"],[158,38,190,27],[158,39,190,28],[158,40,190,29],[159,8,191,6],[160,6,192,4],[160,7,192,5],[160,8,192,6],[161,6,194,4,"client"],[161,12,194,10],[161,13,194,11,"on"],[161,15,194,13],[161,16,194,14],[161,29,194,27],[161,31,194,29],[161,37,194,35],[162,8,195,6,"LoadingView"],[162,28,195,17],[162,29,195,18,"hide"],[162,33,195,22],[162,34,195,23],[162,35,195,24],[163,6,196,4],[163,7,196,5],[163,8,196,6],[164,6,198,4,"client"],[164,12,198,10],[164,13,198,11,"on"],[164,15,198,13],[164,16,198,14],[164,23,198,21],[164,25,198,24,"data"],[164,29,198,63],[164,33,198,68],[165,8,199,6,"LoadingView"],[165,28,199,17],[165,29,199,18,"hide"],[165,33,199,22],[165,34,199,23],[165,35,199,24],[166,8,201,6],[166,12,201,10,"data"],[166,16,201,14],[166,17,201,15,"type"],[166,21,201,19],[166,26,201,24],[166,46,201,44],[166,48,201,46],[167,10,202,8,"client"],[167,16,202,14],[167,17,202,15,"close"],[167,22,202,20],[167,23,202,21],[167,24,202,22],[168,10,203,8,"setHMRUnavailableReason"],[168,33,203,31],[168,34,203,32],[168,97,203,95],[168,98,203,96],[169,8,204,6],[169,9,204,7],[169,15,204,13],[169,19,204,17,"data"],[169,23,204,21],[169,24,204,22,"type"],[169,28,204,26],[169,33,204,31],[169,56,204,54],[169,58,204,56],[170,10,205,8,"client"],[170,16,205,14],[170,17,205,15,"close"],[170,22,205,20],[170,23,205,21],[170,24,205,22],[171,10,206,8,"setHMRUnavailableReason"],[171,33,206,31],[171,34,206,32],[171,94,206,92],[171,95,206,93],[172,8,207,6],[172,9,207,7],[172,15,207,13],[173,10,208,8,"currentCompileErrorMessage"],[173,36,208,34],[173,39,208,37],[173,42,208,40,"data"],[173,46,208,44],[173,47,208,45,"type"],[173,51,208,49],[173,55,208,53,"data"],[173,59,208,57],[173,60,208,58,"message"],[173,67,208,65],[173,69,208,67],[174,10,209,8],[174,14,209,12,"client"],[174,20,209,18],[174,21,209,19,"isEnabled"],[174,30,209,28],[174,31,209,29],[174,32,209,30],[174,34,209,32],[175,12,210,10,"showCompileError"],[175,28,210,26],[175,29,210,27],[175,30,210,28],[176,10,211,8],[177,8,212,6],[178,6,213,4],[178,7,213,5],[178,8,213,6],[179,6,215,4,"client"],[179,12,215,10],[179,13,215,11,"on"],[179,15,215,13],[179,16,215,14],[179,23,215,21],[179,25,215,24,"closeEvent"],[179,35,215,68],[179,39,215,73],[180,8,216,6,"LoadingView"],[180,28,216,17],[180,29,216,18,"hide"],[180,33,216,22],[180,34,216,23],[180,35,216,24],[182,8,218,6],[183,8,219,6],[184,8,220,6],[184,14,220,12,"isNormalOrUnsetCloseReason"],[184,40,220,38],[184,43,221,8,"closeEvent"],[184,53,221,18],[184,57,221,22],[184,61,221,26],[184,65,222,8,"closeEvent"],[184,75,222,18],[184,76,222,19,"code"],[184,80,222,23],[184,85,222,28],[184,89,222,32],[184,93,223,8,"closeEvent"],[184,103,223,18],[184,104,223,19,"code"],[184,108,223,23],[184,113,223,28],[184,117,223,32],[184,121,224,8,"closeEvent"],[184,131,224,18],[184,132,224,19,"code"],[184,136,224,23],[184,140,224,27],[184,144,224,31],[185,8,226,6,"setHMRUnavailableReason"],[185,31,226,29],[185,32,227,8],[185,35,228,10,"isNormalOrUnsetCloseReason"],[185,61,228,36],[185,64,229,14],[185,90,229,40],[185,93,230,14],[185,121,230,42,"closeEvent"],[185,131,230,52],[185,132,230,53,"code"],[185,136,230,57],[185,142,230,63,"closeEvent"],[185,152,230,73],[185,153,230,74,"reason"],[185,159,230,80],[185,164,230,85],[186,0,231,0],[187,0,232,0],[188,0,233,0],[189,0,234,0],[190,0,235,0],[190,7,237,6],[190,8,237,7],[191,6,238,4],[191,7,238,5],[191,8,238,6],[192,6,240,4],[192,10,240,8,"isEnabled"],[192,19,240,17],[192,21,240,19],[193,8,241,6,"HMRClient"],[193,17,241,15],[193,18,241,16,"enable"],[193,24,241,22],[193,25,241,23],[193,26,241,24],[194,6,242,4],[194,7,242,5],[194,13,242,11],[195,8,243,6,"HMRClient"],[195,17,243,15],[195,18,243,16,"disable"],[195,25,243,23],[195,26,243,24],[195,27,243,25],[196,6,244,4],[197,6,246,4,"registerBundleEntryPoints"],[197,31,246,29],[197,32,246,30,"hmrClient"],[197,41,246,39],[197,42,246,40],[198,6,247,4,"flushEarlyLogs"],[198,20,247,18],[198,21,247,19],[198,22,247,20],[199,4,248,2],[200,2,249,0],[200,3,249,1],[201,2,251,0],[201,11,251,9,"setHMRUnavailableReason"],[201,34,251,32,"setHMRUnavailableReason"],[201,35,251,33,"reason"],[201,41,251,47],[201,43,251,49],[202,4,252,2,"assert"],[202,10,252,8],[202,11,252,9,"hmrClient"],[202,20,252,18],[202,22,252,20],[202,67,252,65],[202,68,252,66],[203,4,253,2],[203,8,253,6,"hmrUnavailableReason"],[203,28,253,26],[203,33,253,31],[203,37,253,35],[203,39,253,37],[204,6,254,4],[205,6,255,4],[206,4,256,2],[207,4,257,2,"hmrUnavailableReason"],[207,24,257,22],[207,27,257,25,"reason"],[207,33,257,31],[209,4,259,2],[210,4,260,2],[211,4,261,2],[212,4,262,2],[212,8,262,6,"hmrClient"],[212,17,262,15],[212,18,262,16,"isEnabled"],[212,27,262,25],[212,28,262,26],[212,29,262,27],[212,33,262,31,"didConnect"],[212,43,262,41],[212,45,262,43],[213,6,263,4,"console"],[213,13,263,11],[213,14,263,12,"warn"],[213,18,263,16],[213,19,263,17,"reason"],[213,25,263,23],[213,26,263,24],[214,6,264,4],[215,4,265,2],[216,2,266,0],[217,2,268,0],[217,11,268,9,"registerBundleEntryPoints"],[217,36,268,34,"registerBundleEntryPoints"],[217,37,268,35,"client"],[217,43,268,63],[217,45,268,65],[218,4,269,2],[218,8,269,6,"hmrUnavailableReason"],[218,28,269,26],[218,32,269,30],[218,36,269,34],[218,38,269,36],[219,6,270,4],[220,6,271,4,"window"],[220,12,271,10],[220,13,271,11,"location"],[220,21,271,19],[220,22,271,20,"reload"],[220,28,271,26],[220,29,271,27],[220,30,271,28],[221,6,272,4],[222,4,273,2],[223,4,275,2],[223,8,275,6,"pendingEntryPoints"],[223,26,275,24],[223,27,275,25,"length"],[223,33,275,31],[223,36,275,34],[223,37,275,35],[223,39,275,37],[224,6,276,4,"client"],[224,12,276,10],[224,14,276,12,"send"],[224,18,276,16],[224,19,277,6,"JSON"],[224,23,277,10],[224,24,277,11,"stringify"],[224,33,277,20],[224,34,277,21],[225,8,278,8,"type"],[225,12,278,12],[225,14,278,14],[225,36,278,36],[226,8,279,8,"entryPoints"],[226,19,279,19],[226,21,279,21,"pendingEntryPoints"],[227,6,280,6],[227,7,280,7],[227,8,281,4],[227,9,281,5],[228,6,282,4,"pendingEntryPoints"],[228,24,282,22],[228,25,282,23,"length"],[228,31,282,29],[228,34,282,32],[228,35,282,33],[229,4,283,2],[230,2,284,0],[231,2,286,0],[231,11,286,9,"flushEarlyLogs"],[231,25,286,23,"flushEarlyLogs"],[231,26,286,23],[231,28,286,26],[232,4,287,2],[232,8,287,6],[233,6,288,4,"pendingLogs"],[233,17,288,15],[233,18,288,16,"forEach"],[233,25,288,23],[233,26,288,24],[233,27,288,25],[233,28,288,26,"level"],[233,33,288,31],[233,35,288,33,"data"],[233,39,288,37],[233,40,288,38],[233,45,288,43],[234,8,289,6,"HMRClient"],[234,17,289,15],[234,18,289,16,"log"],[234,21,289,19],[234,22,289,20,"level"],[234,27,289,25],[234,29,289,27,"data"],[234,33,289,31],[234,34,289,32],[235,6,290,4],[235,7,290,5],[235,8,290,6],[236,4,291,2],[236,5,291,3],[236,14,291,12],[237,6,292,4,"pendingLogs"],[237,17,292,15],[237,18,292,16,"length"],[237,24,292,22],[237,27,292,25],[237,28,292,26],[238,4,293,2],[239,2,294,0],[240,2,296,0],[240,11,296,9,"dismissRedbox"],[240,24,296,22,"dismissRedbox"],[240,25,296,22],[240,27,296,25],[241,4,297,2],[242,2,297,2],[243,2,300,0],[243,11,300,9,"showCompileError"],[243,27,300,25,"showCompileError"],[243,28,300,25],[243,30,300,28],[244,4,301,2],[244,8,301,6,"currentCompileErrorMessage"],[244,34,301,32],[244,39,301,37],[244,43,301,41],[244,45,301,43],[245,6,302,4],[246,4,303,2],[248,4,305,2],[249,4,306,2],[250,4,307,2,"dismissRedbox"],[250,17,307,15],[250,18,307,16],[250,19,307,17],[251,4,309,2],[251,10,309,8,"message"],[251,17,309,15],[251,20,309,18,"currentCompileErrorMessage"],[251,46,309,44],[252,4,310,2,"currentCompileErrorMessage"],[252,30,310,28],[252,33,310,31],[252,37,310,35],[253,4,312,2],[253,10,312,8,"error"],[253,15,312,13],[253,18,312,16],[253,22,312,20,"Error"],[253,27,312,25],[253,28,312,26,"message"],[253,35,312,33],[253,36,312,34],[254,4,313,2],[255,4,314,2],[256,4,315,2],[257,4,316,2,"error"],[257,9,316,7],[257,10,316,8,"preventSymbolication"],[257,30,316,28],[257,33,316,31],[257,37,316,35],[258,4,317,2],[258,10,317,8,"error"],[258,15,317,13],[259,2,318,0],[260,2,318,1],[260,6,318,1,"_default"],[260,14,318,1],[260,17,318,1,"exports"],[260,24,318,1],[260,25,318,1,"default"],[260,32,318,1],[260,35,320,15,"HMRClient"],[260,44,320,24],[261,0,320,24],[261,3]],"functionMap":{"names":["<global>","assert","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;ACuD;CDE;EEO;GFiC;EGE;GHG;EIE;GJI;EKE;yBCiB;kBDS;GLQ;EOI;kCCe;KDY;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDe;uBCE;KDuB;GPU;ASG;CTe;AUE;CVgB;AWE;wBCE;KDE;CXI;AaE;CbE;AcE;CdkB"}},"type":"js/module"}]}