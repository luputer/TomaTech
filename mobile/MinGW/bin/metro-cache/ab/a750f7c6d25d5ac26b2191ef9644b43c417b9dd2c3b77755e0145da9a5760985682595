{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":93,"column":40,"index":3192}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@react-navigation/core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":115,"index":130}}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":131},"end":{"line":4,"column":31,"index":162}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":93,"column":40,"index":3192}}],"key":"jM/HC84YZkM9kLoiCo0Bpf0Xr+w="}},{"name":"./LinkingContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":204},"end":{"line":6,"column":53,"index":257}}],"key":"yYBHznJ84s4iaDtUztCrHxF76Do="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useLinkProps = useLinkProps;\n  var _core = require(_dependencyMap[1], \"@react-navigation/core\");\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[3], \"react-native-web/dist/exports/Platform\"));\n  var _LinkingContext = require(_dependencyMap[4], \"./LinkingContext.js\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  const getStateFromParams = params => {\n    if (params?.state) {\n      return params.state;\n    }\n    if (params?.screen) {\n      return {\n        routes: [{\n          name: params.screen,\n          params: params.params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: params.screen ? getStateFromParams(params.params) : undefined\n        }]\n      };\n    }\n    return undefined;\n  };\n\n  /**\n   * Hook to get props for an anchor tag so it can work with in page navigation.\n   *\n   * @param props.screen Name of the screen to navigate to (e.g. `'Feeds'`).\n   * @param props.params Params to pass to the screen to navigate to (e.g. `{ sort: 'hot' }`).\n   * @param props.href Optional absolute path to use for the href (e.g. `/feeds/hot`).\n   * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n   */\n  function useLinkProps({\n    screen,\n    params,\n    href,\n    action\n  }) {\n    const root = React.useContext(_core.NavigationContainerRefContext);\n    const navigation = React.useContext(_core.NavigationHelpersContext);\n    const {\n      options\n    } = React.useContext(_LinkingContext.LinkingContext);\n    const onPress = e => {\n      let shouldHandle = false;\n      if (_Platform.default.OS !== 'web' || !e) {\n        e?.preventDefault?.();\n        shouldHandle = true;\n      } else {\n        // ignore clicks with modifier keys\n        const hasModifierKey = 'metaKey' in e && e.metaKey || 'altKey' in e && e.altKey || 'ctrlKey' in e && e.ctrlKey || 'shiftKey' in e && e.shiftKey;\n\n        // only handle left clicks\n        const isLeftClick = 'button' in e ? e.button == null || e.button === 0 : true;\n\n        // let browser handle \"target=_blank\" etc.\n        const isSelfTarget = e.currentTarget && 'target' in e.currentTarget ? [undefined, null, '', 'self'].includes(e.currentTarget.target) : true;\n        if (!hasModifierKey && isLeftClick && isSelfTarget) {\n          e.preventDefault?.();\n          shouldHandle = true;\n        }\n      }\n      if (shouldHandle) {\n        if (action) {\n          if (navigation) {\n            navigation.dispatch(action);\n          } else if (root) {\n            root.dispatch(action);\n          } else {\n            throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n          }\n        } else {\n          // @ts-expect-error This is already type-checked by the prop types\n          navigation?.navigate(screen, params);\n        }\n      }\n    };\n    const getPathFromStateHelper = options?.getPathFromState ?? _core.getPathFromState;\n    return {\n      href: href ?? (_Platform.default.OS === 'web' && screen != null ? getPathFromStateHelper({\n        routes: [{\n          // @ts-expect-error this is fine ðŸ”¥\n          name: screen,\n          // @ts-expect-error this is fine ðŸ”¥\n          params: params,\n          // @ts-expect-error this is fine ðŸ”¥\n          state: getStateFromParams(params)\n        }]\n      }, options?.config) : undefined),\n      accessibilityRole: 'link',\n      onPress\n    };\n  }\n});","lineCount":101,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useLinkProps"],[8,22,1,13],[8,25,1,13,"useLinkProps"],[8,37,1,13],[9,2,3,0],[9,6,3,0,"_core"],[9,11,3,0],[9,14,3,0,"require"],[9,21,3,0],[9,22,3,0,"_dependencyMap"],[9,36,3,0],[10,2,4,0],[10,6,4,0,"React"],[10,11,4,0],[10,14,4,0,"_interopRequireWildcard"],[10,37,4,0],[10,38,4,0,"require"],[10,45,4,0],[10,46,4,0,"_dependencyMap"],[10,60,4,0],[11,2,4,31],[11,6,4,31,"_Platform"],[11,15,4,31],[11,18,4,31,"_interopRequireDefault"],[11,40,4,31],[11,41,4,31,"require"],[11,48,4,31],[11,49,4,31,"_dependencyMap"],[11,63,4,31],[12,2,6,0],[12,6,6,0,"_LinkingContext"],[12,21,6,0],[12,24,6,0,"require"],[12,31,6,0],[12,32,6,0,"_dependencyMap"],[12,46,6,0],[13,2,6,53],[13,11,6,53,"_getRequireWildcardCache"],[13,36,6,53,"e"],[13,37,6,53],[13,66,6,53,"WeakMap"],[13,73,6,53],[13,92,6,53,"r"],[13,93,6,53],[13,100,6,53,"WeakMap"],[13,107,6,53],[13,111,6,53,"t"],[13,112,6,53],[13,119,6,53,"WeakMap"],[13,126,6,53],[13,138,6,53,"_getRequireWildcardCache"],[13,162,6,53],[13,174,6,53,"_getRequireWildcardCache"],[13,175,6,53,"e"],[13,176,6,53],[13,187,6,53,"e"],[13,188,6,53],[13,191,6,53,"t"],[13,192,6,53],[13,195,6,53,"r"],[13,196,6,53],[13,201,6,53,"e"],[13,202,6,53],[14,2,6,53],[14,11,6,53,"_interopRequireWildcard"],[14,35,6,53,"e"],[14,36,6,53],[14,38,6,53,"r"],[14,39,6,53],[14,48,6,53,"r"],[14,49,6,53],[14,53,6,53,"e"],[14,54,6,53],[14,58,6,53,"e"],[14,59,6,53],[14,60,6,53,"__esModule"],[14,70,6,53],[14,79,6,53,"e"],[14,80,6,53],[14,95,6,53,"e"],[14,96,6,53],[14,119,6,53,"e"],[14,120,6,53],[14,145,6,53,"e"],[14,146,6,53],[14,157,6,53,"default"],[14,164,6,53],[14,166,6,53,"e"],[14,167,6,53],[14,175,6,53,"t"],[14,176,6,53],[14,179,6,53,"_getRequireWildcardCache"],[14,203,6,53],[14,204,6,53,"r"],[14,205,6,53],[14,212,6,53,"t"],[14,213,6,53],[14,217,6,53,"t"],[14,218,6,53],[14,219,6,53,"has"],[14,222,6,53],[14,223,6,53,"e"],[14,224,6,53],[14,234,6,53,"t"],[14,235,6,53],[14,236,6,53,"get"],[14,239,6,53],[14,240,6,53,"e"],[14,241,6,53],[14,248,6,53,"n"],[14,249,6,53],[14,254,6,53,"__proto__"],[14,263,6,53],[14,273,6,53,"a"],[14,274,6,53],[14,277,6,53,"Object"],[14,283,6,53],[14,284,6,53,"defineProperty"],[14,298,6,53],[14,302,6,53,"Object"],[14,308,6,53],[14,309,6,53,"getOwnPropertyDescriptor"],[14,333,6,53],[14,344,6,53,"u"],[14,345,6,53],[14,349,6,53,"e"],[14,350,6,53],[14,370,6,53,"u"],[14,371,6,53],[14,378,6,53,"hasOwnProperty"],[14,392,6,53],[14,393,6,53,"call"],[14,397,6,53],[14,398,6,53,"e"],[14,399,6,53],[14,401,6,53,"u"],[14,402,6,53],[14,411,6,53,"i"],[14,412,6,53],[14,415,6,53,"a"],[14,416,6,53],[14,419,6,53,"Object"],[14,425,6,53],[14,426,6,53,"getOwnPropertyDescriptor"],[14,450,6,53],[14,451,6,53,"e"],[14,452,6,53],[14,454,6,53,"u"],[14,455,6,53],[14,465,6,53,"i"],[14,466,6,53],[14,471,6,53,"i"],[14,472,6,53],[14,473,6,53,"get"],[14,476,6,53],[14,480,6,53,"i"],[14,481,6,53],[14,482,6,53,"set"],[14,485,6,53],[14,489,6,53,"Object"],[14,495,6,53],[14,496,6,53,"defineProperty"],[14,510,6,53],[14,511,6,53,"n"],[14,512,6,53],[14,514,6,53,"u"],[14,515,6,53],[14,517,6,53,"i"],[14,518,6,53],[14,522,6,53,"n"],[14,523,6,53],[14,524,6,53,"u"],[14,525,6,53],[14,529,6,53,"e"],[14,530,6,53],[14,531,6,53,"u"],[14,532,6,53],[14,544,6,53,"n"],[14,545,6,53],[14,546,6,53,"default"],[14,553,6,53],[14,556,6,53,"e"],[14,557,6,53],[14,559,6,53,"t"],[14,560,6,53],[14,564,6,53,"t"],[14,565,6,53],[14,566,6,53,"set"],[14,569,6,53],[14,570,6,53,"e"],[14,571,6,53],[14,573,6,53,"n"],[14,574,6,53],[14,577,6,53,"n"],[14,578,6,53],[15,2,7,0],[15,8,7,6,"getStateFromParams"],[15,26,7,24],[15,29,7,27,"params"],[15,35,7,33],[15,39,7,37],[16,4,8,2],[16,8,8,6,"params"],[16,14,8,12],[16,16,8,14,"state"],[16,21,8,19],[16,23,8,21],[17,6,9,4],[17,13,9,11,"params"],[17,19,9,17],[17,20,9,18,"state"],[17,25,9,23],[18,4,10,2],[19,4,11,2],[19,8,11,6,"params"],[19,14,11,12],[19,16,11,14,"screen"],[19,22,11,20],[19,24,11,22],[20,6,12,4],[20,13,12,11],[21,8,13,6,"routes"],[21,14,13,12],[21,16,13,14],[21,17,13,15],[22,10,14,8,"name"],[22,14,14,12],[22,16,14,14,"params"],[22,22,14,20],[22,23,14,21,"screen"],[22,29,14,27],[23,10,15,8,"params"],[23,16,15,14],[23,18,15,16,"params"],[23,24,15,22],[23,25,15,23,"params"],[23,31,15,29],[24,10,16,8],[25,10,17,8,"state"],[25,15,17,13],[25,17,17,15,"params"],[25,23,17,21],[25,24,17,22,"screen"],[25,30,17,28],[25,33,17,31,"getStateFromParams"],[25,51,17,49],[25,52,17,50,"params"],[25,58,17,56],[25,59,17,57,"params"],[25,65,17,63],[25,66,17,64],[25,69,17,67,"undefined"],[26,8,18,6],[26,9,18,7],[27,6,19,4],[27,7,19,5],[28,4,20,2],[29,4,21,2],[29,11,21,9,"undefined"],[29,20,21,18],[30,2,22,0],[30,3,22,1],[32,2,24,0],[33,0,25,0],[34,0,26,0],[35,0,27,0],[36,0,28,0],[37,0,29,0],[38,0,30,0],[39,0,31,0],[40,2,32,7],[40,11,32,16,"useLinkProps"],[40,23,32,28,"useLinkProps"],[40,24,32,29],[41,4,33,2,"screen"],[41,10,33,8],[42,4,34,2,"params"],[42,10,34,8],[43,4,35,2,"href"],[43,8,35,6],[44,4,36,2,"action"],[45,2,37,0],[45,3,37,1],[45,5,37,3],[46,4,38,2],[46,10,38,8,"root"],[46,14,38,12],[46,17,38,15,"React"],[46,22,38,20],[46,23,38,21,"useContext"],[46,33,38,31],[46,34,38,32,"NavigationContainerRefContext"],[46,69,38,61],[46,70,38,62],[47,4,39,2],[47,10,39,8,"navigation"],[47,20,39,18],[47,23,39,21,"React"],[47,28,39,26],[47,29,39,27,"useContext"],[47,39,39,37],[47,40,39,38,"NavigationHelpersContext"],[47,70,39,62],[47,71,39,63],[48,4,40,2],[48,10,40,8],[49,6,41,4,"options"],[50,4,42,2],[50,5,42,3],[50,8,42,6,"React"],[50,13,42,11],[50,14,42,12,"useContext"],[50,24,42,22],[50,25,42,23,"LinkingContext"],[50,55,42,37],[50,56,42,38],[51,4,43,2],[51,10,43,8,"onPress"],[51,17,43,15],[51,20,43,18,"e"],[51,21,43,19],[51,25,43,23],[52,6,44,4],[52,10,44,8,"shouldHandle"],[52,22,44,20],[52,25,44,23],[52,30,44,28],[53,6,45,4],[53,10,45,8,"Platform"],[53,27,45,16],[53,28,45,17,"OS"],[53,30,45,19],[53,35,45,24],[53,40,45,29],[53,44,45,33],[53,45,45,34,"e"],[53,46,45,35],[53,48,45,37],[54,8,46,6,"e"],[54,9,46,7],[54,11,46,9,"preventDefault"],[54,25,46,23],[54,28,46,26],[54,29,46,27],[55,8,47,6,"shouldHandle"],[55,20,47,18],[55,23,47,21],[55,27,47,25],[56,6,48,4],[56,7,48,5],[56,13,48,11],[57,8,49,6],[58,8,50,6],[58,14,50,12,"hasModifierKey"],[58,28,50,26],[58,31,50,29],[58,40,50,38],[58,44,50,42,"e"],[58,45,50,43],[58,49,50,47,"e"],[58,50,50,48],[58,51,50,49,"metaKey"],[58,58,50,56],[58,62,50,60],[58,70,50,68],[58,74,50,72,"e"],[58,75,50,73],[58,79,50,77,"e"],[58,80,50,78],[58,81,50,79,"altKey"],[58,87,50,85],[58,91,50,89],[58,100,50,98],[58,104,50,102,"e"],[58,105,50,103],[58,109,50,107,"e"],[58,110,50,108],[58,111,50,109,"ctrlKey"],[58,118,50,116],[58,122,50,120],[58,132,50,130],[58,136,50,134,"e"],[58,137,50,135],[58,141,50,139,"e"],[58,142,50,140],[58,143,50,141,"shiftKey"],[58,151,50,149],[60,8,52,6],[61,8,53,6],[61,14,53,12,"isLeftClick"],[61,25,53,23],[61,28,53,26],[61,36,53,34],[61,40,53,38,"e"],[61,41,53,39],[61,44,53,42,"e"],[61,45,53,43],[61,46,53,44,"button"],[61,52,53,50],[61,56,53,54],[61,60,53,58],[61,64,53,62,"e"],[61,65,53,63],[61,66,53,64,"button"],[61,72,53,70],[61,77,53,75],[61,78,53,76],[61,81,53,79],[61,85,53,83],[63,8,55,6],[64,8,56,6],[64,14,56,12,"isSelfTarget"],[64,26,56,24],[64,29,56,27,"e"],[64,30,56,28],[64,31,56,29,"currentTarget"],[64,44,56,42],[64,48,56,46],[64,56,56,54],[64,60,56,58,"e"],[64,61,56,59],[64,62,56,60,"currentTarget"],[64,75,56,73],[64,78,56,76],[64,79,56,77,"undefined"],[64,88,56,86],[64,90,56,88],[64,94,56,92],[64,96,56,94],[64,98,56,96],[64,100,56,98],[64,106,56,104],[64,107,56,105],[64,108,56,106,"includes"],[64,116,56,114],[64,117,56,115,"e"],[64,118,56,116],[64,119,56,117,"currentTarget"],[64,132,56,130],[64,133,56,131,"target"],[64,139,56,137],[64,140,56,138],[64,143,56,141],[64,147,56,145],[65,8,57,6],[65,12,57,10],[65,13,57,11,"hasModifierKey"],[65,27,57,25],[65,31,57,29,"isLeftClick"],[65,42,57,40],[65,46,57,44,"isSelfTarget"],[65,58,57,56],[65,60,57,58],[66,10,58,8,"e"],[66,11,58,9],[66,12,58,10,"preventDefault"],[66,26,58,24],[66,29,58,27],[66,30,58,28],[67,10,59,8,"shouldHandle"],[67,22,59,20],[67,25,59,23],[67,29,59,27],[68,8,60,6],[69,6,61,4],[70,6,62,4],[70,10,62,8,"shouldHandle"],[70,22,62,20],[70,24,62,22],[71,8,63,6],[71,12,63,10,"action"],[71,18,63,16],[71,20,63,18],[72,10,64,8],[72,14,64,12,"navigation"],[72,24,64,22],[72,26,64,24],[73,12,65,10,"navigation"],[73,22,65,20],[73,23,65,21,"dispatch"],[73,31,65,29],[73,32,65,30,"action"],[73,38,65,36],[73,39,65,37],[74,10,66,8],[74,11,66,9],[74,17,66,15],[74,21,66,19,"root"],[74,25,66,23],[74,27,66,25],[75,12,67,10,"root"],[75,16,67,14],[75,17,67,15,"dispatch"],[75,25,67,23],[75,26,67,24,"action"],[75,32,67,30],[75,33,67,31],[76,10,68,8],[76,11,68,9],[76,17,68,15],[77,12,69,10],[77,18,69,16],[77,22,69,20,"Error"],[77,27,69,25],[77,28,69,26],[77,110,69,108],[77,111,69,109],[78,10,70,8],[79,8,71,6],[79,9,71,7],[79,15,71,13],[80,10,72,8],[81,10,73,8,"navigation"],[81,20,73,18],[81,22,73,20,"navigate"],[81,30,73,28],[81,31,73,29,"screen"],[81,37,73,35],[81,39,73,37,"params"],[81,45,73,43],[81,46,73,44],[82,8,74,6],[83,6,75,4],[84,4,76,2],[84,5,76,3],[85,4,77,2],[85,10,77,8,"getPathFromStateHelper"],[85,32,77,30],[85,35,77,33,"options"],[85,42,77,40],[85,44,77,42,"getPathFromState"],[85,60,77,58],[85,64,77,62,"getPathFromState"],[85,86,77,78],[86,4,78,2],[86,11,78,9],[87,6,79,4,"href"],[87,10,79,8],[87,12,79,10,"href"],[87,16,79,14],[87,21,79,19,"Platform"],[87,38,79,27],[87,39,79,28,"OS"],[87,41,79,30],[87,46,79,35],[87,51,79,40],[87,55,79,44,"screen"],[87,61,79,50],[87,65,79,54],[87,69,79,58],[87,72,79,61,"getPathFromStateHelper"],[87,94,79,83],[87,95,79,84],[88,8,80,6,"routes"],[88,14,80,12],[88,16,80,14],[88,17,80,15],[89,10,81,8],[90,10,82,8,"name"],[90,14,82,12],[90,16,82,14,"screen"],[90,22,82,20],[91,10,83,8],[92,10,84,8,"params"],[92,16,84,14],[92,18,84,16,"params"],[92,24,84,22],[93,10,85,8],[94,10,86,8,"state"],[94,15,86,13],[94,17,86,15,"getStateFromParams"],[94,35,86,33],[94,36,86,34,"params"],[94,42,86,40],[95,8,87,6],[95,9,87,7],[96,6,88,4],[96,7,88,5],[96,9,88,7,"options"],[96,16,88,14],[96,18,88,16,"config"],[96,24,88,22],[96,25,88,23],[96,28,88,26,"undefined"],[96,37,88,35],[96,38,88,36],[97,6,89,4,"accessibilityRole"],[97,23,89,21],[97,25,89,23],[97,31,89,29],[98,6,90,4,"onPress"],[99,4,91,2],[99,5,91,3],[100,2,92,0],[101,0,92,1],[101,3]],"functionMap":{"names":["<global>","getStateFromParams","useLinkProps","onPress"],"mappings":"AAA;2BCM;CDe;OEU;kBCW;GDiC;CFgB"}},"type":"js/module"}]}