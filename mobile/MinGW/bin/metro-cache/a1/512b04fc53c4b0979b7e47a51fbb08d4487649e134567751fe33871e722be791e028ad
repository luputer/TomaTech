{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"aLLVXWB8QP15fri3afEUab9H+Os="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseRouter = void 0;\n  var _nonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  /**\n   * Base router object that can be used when writing custom routers.\n   * This provides few helper methods to handle common actions such as `RESET`.\n   */\n  var BaseRouter = exports.BaseRouter = {\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n          {\n            var index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return {\n              ...state,\n              routes: state.routes.map((r, i) => i === index ? {\n                ...r,\n                params: {\n                  ...r.params,\n                  ...action.payload.params\n                }\n              } : r)\n            };\n          }\n        case 'RESET':\n          {\n            var nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n                return null;\n              }\n              return {\n                ...nextState,\n                routes: nextState.routes.map(route => route.key ? route : {\n                  ...route,\n                  key: `${route.name}-${(0, _nonSecure.nanoid)()}`\n                })\n              };\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":61,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"BaseRouter"],[7,20,1,13],[8,2,3,0],[8,6,3,0,"_nonSecure"],[8,16,3,0],[8,19,3,0,"require"],[8,26,3,0],[8,27,3,0,"_dependencyMap"],[8,41,3,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,2,8,7],[13,6,8,13,"BaseRouter"],[13,16,8,23],[13,19,8,23,"exports"],[13,26,8,23],[13,27,8,23,"BaseRouter"],[13,37,8,23],[13,40,8,26],[14,4,9,2,"getStateForAction"],[14,21,9,19,"getStateForAction"],[14,22,9,20,"state"],[14,27,9,25],[14,29,9,27,"action"],[14,35,9,33],[14,37,9,35],[15,6,10,4],[15,14,10,12,"action"],[15,20,10,18],[15,21,10,19,"type"],[15,25,10,23],[16,8,11,6],[16,13,11,11],[16,25,11,23],[17,10,12,8],[18,12,13,10],[18,16,13,16,"index"],[18,21,13,21],[18,24,13,24,"action"],[18,30,13,30],[18,31,13,31,"source"],[18,37,13,37],[18,40,13,40,"state"],[18,45,13,45],[18,46,13,46,"routes"],[18,52,13,52],[18,53,13,53,"findIndex"],[18,62,13,62],[18,63,13,63,"r"],[18,64,13,64],[18,68,13,68,"r"],[18,69,13,69],[18,70,13,70,"key"],[18,73,13,73],[18,78,13,78,"action"],[18,84,13,84],[18,85,13,85,"source"],[18,91,13,91],[18,92,13,92],[18,95,13,95,"state"],[18,100,13,100],[18,101,13,101,"index"],[18,106,13,106],[19,12,14,10],[19,16,14,14,"index"],[19,21,14,19],[19,26,14,24],[19,27,14,25],[19,28,14,26],[19,30,14,28],[20,14,15,12],[20,21,15,19],[20,25,15,23],[21,12,16,10],[22,12,17,10],[22,19,17,17],[23,14,18,12],[23,17,18,15,"state"],[23,22,18,20],[24,14,19,12,"routes"],[24,20,19,18],[24,22,19,20,"state"],[24,27,19,25],[24,28,19,26,"routes"],[24,34,19,32],[24,35,19,33,"map"],[24,38,19,36],[24,39,19,37],[24,40,19,38,"r"],[24,41,19,39],[24,43,19,41,"i"],[24,44,19,42],[24,49,19,47,"i"],[24,50,19,48],[24,55,19,53,"index"],[24,60,19,58],[24,63,19,61],[25,16,20,14],[25,19,20,17,"r"],[25,20,20,18],[26,16,21,14,"params"],[26,22,21,20],[26,24,21,22],[27,18,22,16],[27,21,22,19,"r"],[27,22,22,20],[27,23,22,21,"params"],[27,29,22,27],[28,18,23,16],[28,21,23,19,"action"],[28,27,23,25],[28,28,23,26,"payload"],[28,35,23,33],[28,36,23,34,"params"],[29,16,24,14],[30,14,25,12],[30,15,25,13],[30,18,25,16,"r"],[30,19,25,17],[31,12,26,10],[31,13,26,11],[32,10,27,8],[33,8,28,6],[33,13,28,11],[33,20,28,18],[34,10,29,8],[35,12,30,10],[35,16,30,16,"nextState"],[35,25,30,25],[35,28,30,28,"action"],[35,34,30,34],[35,35,30,35,"payload"],[35,42,30,42],[36,12,31,10],[36,16,31,14,"nextState"],[36,25,31,23],[36,26,31,24,"routes"],[36,32,31,30],[36,33,31,31,"length"],[36,39,31,37],[36,44,31,42],[36,45,31,43],[36,49,31,47,"nextState"],[36,58,31,56],[36,59,31,57,"routes"],[36,65,31,63],[36,66,31,64,"some"],[36,70,31,68],[36,71,31,69,"route"],[36,76,31,74],[36,80,31,78],[36,81,31,79,"state"],[36,86,31,84],[36,87,31,85,"routeNames"],[36,97,31,95],[36,98,31,96,"includes"],[36,106,31,104],[36,107,31,105,"route"],[36,112,31,110],[36,113,31,111,"name"],[36,117,31,115],[36,118,31,116],[36,119,31,117],[36,121,31,119],[37,14,32,12],[37,21,32,19],[37,25,32,23],[38,12,33,10],[39,12,34,10],[39,16,34,14,"nextState"],[39,25,34,23],[39,26,34,24,"stale"],[39,31,34,29],[39,36,34,34],[39,41,34,39],[39,43,34,41],[40,14,35,12],[40,18,35,16,"state"],[40,23,35,21],[40,24,35,22,"routeNames"],[40,34,35,32],[40,35,35,33,"length"],[40,41,35,39],[40,46,35,44,"nextState"],[40,55,35,53],[40,56,35,54,"routeNames"],[40,66,35,64],[40,67,35,65,"length"],[40,73,35,71],[40,77,35,75,"nextState"],[40,86,35,84],[40,87,35,85,"routeNames"],[40,97,35,95],[40,98,35,96,"some"],[40,102,35,100],[40,103,35,101,"name"],[40,107,35,105],[40,111,35,109],[40,112,35,110,"state"],[40,117,35,115],[40,118,35,116,"routeNames"],[40,128,35,126],[40,129,35,127,"includes"],[40,137,35,135],[40,138,35,136,"name"],[40,142,35,140],[40,143,35,141],[40,144,35,142],[40,146,35,144],[41,16,36,14],[41,23,36,21],[41,27,36,25],[42,14,37,12],[43,14,38,12],[43,21,38,19],[44,16,39,14],[44,19,39,17,"nextState"],[44,28,39,26],[45,16,40,14,"routes"],[45,22,40,20],[45,24,40,22,"nextState"],[45,33,40,31],[45,34,40,32,"routes"],[45,40,40,38],[45,41,40,39,"map"],[45,44,40,42],[45,45,40,43,"route"],[45,50,40,48],[45,54,40,52,"route"],[45,59,40,57],[45,60,40,58,"key"],[45,63,40,61],[45,66,40,64,"route"],[45,71,40,69],[45,74,40,72],[46,18,41,16],[46,21,41,19,"route"],[46,26,41,24],[47,18,42,16,"key"],[47,21,42,19],[47,23,42,21],[47,26,42,24,"route"],[47,31,42,29],[47,32,42,30,"name"],[47,36,42,34],[47,40,42,38],[47,44,42,38,"nanoid"],[47,61,42,44],[47,63,42,45],[47,64,42,46],[48,16,43,14],[48,17,43,15],[49,14,44,12],[49,15,44,13],[50,12,45,10],[51,12,46,10],[51,19,46,17,"nextState"],[51,28,46,26],[52,10,47,8],[53,8,48,6],[54,10,49,8],[54,17,49,15],[54,21,49,19],[55,6,50,4],[56,4,51,2],[56,5,51,3],[57,4,52,2,"shouldActionChangeFocus"],[57,27,52,25,"shouldActionChangeFocus"],[57,28,52,26,"action"],[57,34,52,32],[57,36,52,34],[58,6,53,4],[58,13,53,11,"action"],[58,19,53,17],[58,20,53,18,"type"],[58,24,53,22],[58,29,53,27],[58,39,53,37],[58,43,53,41,"action"],[58,49,53,47],[58,50,53,48,"type"],[58,54,53,52],[58,59,53,57],[58,80,53,78],[59,4,54,2],[60,2,55,0],[60,3,55,1],[61,0,55,2],[61,3]],"functionMap":{"names":["<global>","getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","shouldActionChangeFocus"],"mappings":"AAA;ECQ;+DCI,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"}},"type":"js/module"}]}