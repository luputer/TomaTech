{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":240},"end":{"line":11,"column":31,"index":271}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":272},"end":{"line":12,"column":50,"index":322}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./LogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":324},"end":{"line":14,"column":51,"index":375}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"./LogContext","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":421},"end":{"line":16,"column":42,"index":463}}],"key":"kGImKxkw63YPqgqpZNc3AmpR2Dw="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":464},"end":{"line":17,"column":56,"index":520}}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA="}},{"name":"../modules/NativeLogBox","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0,"index":619},"end":{"line":19,"column":51,"index":670}}],"key":"NTvdbGUmIHULO0RkMjL+tUhSQXY="}},{"name":"../modules/parseErrorStack","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":671},"end":{"line":20,"column":57,"index":728}}],"key":"SH6uLr2ZPj4VAiGhupQ1HY3anDk="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"o13xJBIQrtUiTCNVAdR54EGZcWw="}},{"name":"../modules/ExceptionsManager","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":85,"column":28,"index":2233},"end":{"line":85,"column":67,"index":2272}}],"key":"QTNFgvUCEDySwBvIlFx8vxVZSCc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use client';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.reportUnexpectedLogBoxError = reportUnexpectedLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _LogBoxLog = require(_dependencyMap[8], \"./LogBoxLog\");\n  var _LogContext = require(_dependencyMap[9], \"./LogContext\");\n  var _parseLogBoxLog = require(_dependencyMap[10], \"./parseLogBoxLog\");\n  var _NativeLogBox = _interopRequireDefault(require(_dependencyMap[11], \"../modules/NativeLogBox\"));\n  var _parseErrorStack = _interopRequireDefault(require(_dependencyMap[12], \"../modules/parseErrorStack\"));\n  var _jsxDevRuntime = require(_dependencyMap[13], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\Users\\\\Saidi\\\\OneDrive\\\\Documents\\\\Semeter4\\\\Pemerograman_Web\\\\Microservice\\\\mobile\\\\node_modules\\\\@expo\\\\metro-runtime\\\\src\\\\error-overlay\\\\Data\\\\LogBoxData.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = require(_dependencyMap[14], \"../modules/ExceptionsManager\").default;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error);\n  }\n  function reportUnexpectedLogBoxError(error, componentStack) {\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    return reportLogBoxError(error, componentStack);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function setImmediateShim(callback) {\n    if (!global.setImmediate) {\n      return setTimeout(callback, 0);\n    }\n    return global.setImmediate(callback);\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediateShim(() => {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(_ref => {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var addPendingLog = () => {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(() => {\n        if (addPendingLog) {\n          addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n\n      // TODO: HANDLE THIS\n      newLog.symbolicate('component');\n      newLog.symbolicate('stack', status => {\n        if (addPendingLog && status !== 'PENDING') {\n          addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace?.stack);\n        appendNewLog(new _LogBoxLog.LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportUnexpectedLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        appendNewLog(new _LogBoxLog.LogBoxLog((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportUnexpectedLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(type, log) {\n    log.symbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(type, log) {\n    log.retrySymbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(type, log) {\n    log.symbolicate(type);\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(() => {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(log => log.level !== 'error' && log.level !== 'fatal');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(pattern => {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(log => !isMessageIgnored(log.message.content)));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  var emitter = new _reactNative.NativeEventEmitter({\n    addListener() {},\n    removeListeners() {}\n  });\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = /*#__PURE__*/function (_React$Component) {\n      function LogBoxStateSubscription(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        _this = _callSuper(this, LogBoxStateSubscription, [props]);\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        _this.retry = () => {\n          return new Promise(resolve => {\n            _this.setState({\n              hasError: false\n            }, () => {\n              resolve();\n            });\n          });\n        };\n        _this._handleDismiss = () => {\n          // Here we handle the cases when the log is dismissed and it\n          // was either the last log, or when the current index\n          // is now outside the bounds of the log array.\n          var _this$state = _this.state,\n            selectedLogIndex = _this$state.selectedLogIndex,\n            stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n        _this._handleMinimize = () => {\n          setSelectedLog(-1);\n        };\n        _this._handleSetSelectedLog = index => {\n          setSelectedLog(index);\n        };\n        if (process.env.NODE_ENV === 'development') {\n          emitter.addListener('devLoadingView:hide', () => {\n            if (_this.state.hasError) {\n              _this.retry();\n            }\n          });\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      return (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          /* $FlowFixMe[class-object-subtyping] added when improving typing for\n           * this parameters */\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_LogContext.LogContext.Provider, {\n            value: {\n              selectedLogIndex: this.state.selectedLogIndex,\n              isDisabled: this.state.isDisabled,\n              logs: Array.from(this.state.logs)\n            },\n            children: [this.state.hasError ? null : this.props.children, /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(WrappedComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 9\n          }, this);\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this._subscription = observe(data => {\n            // Ignore the initial empty log\n            if (data.selectedLogIndex === -1) return;\n            React.startTransition(() => {\n              this.setState(data);\n            });\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n    }(React.Component); // @ts-expect-error\n    return LogBoxStateSubscription;\n  }\n});","lineCount":424,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[10,2,9,0],[10,14,9,12],[12,2,9,13],[12,6,9,13,"_interopRequireDefault"],[12,28,9,13],[12,31,9,13,"require"],[12,38,9,13],[12,39,9,13,"_dependencyMap"],[12,53,9,13],[13,2,9,13,"Object"],[13,8,9,13],[13,9,9,13,"defineProperty"],[13,23,9,13],[13,24,9,13,"exports"],[13,31,9,13],[14,4,9,13,"value"],[14,9,9,13],[15,2,9,13],[16,2,9,13,"exports"],[16,9,9,13],[16,10,9,13,"addException"],[16,22,9,13],[16,25,9,13,"addException"],[16,37,9,13],[17,2,9,13,"exports"],[17,9,9,13],[17,10,9,13,"addIgnorePatterns"],[17,27,9,13],[17,30,9,13,"addIgnorePatterns"],[17,47,9,13],[18,2,9,13,"exports"],[18,9,9,13],[18,10,9,13,"addLog"],[18,16,9,13],[18,19,9,13,"addLog"],[18,25,9,13],[19,2,9,13,"exports"],[19,9,9,13],[19,10,9,13,"clear"],[19,15,9,13],[19,18,9,13,"clear"],[19,23,9,13],[20,2,9,13,"exports"],[20,9,9,13],[20,10,9,13,"clearErrors"],[20,21,9,13],[20,24,9,13,"clearErrors"],[20,35,9,13],[21,2,9,13,"exports"],[21,9,9,13],[21,10,9,13,"clearWarnings"],[21,23,9,13],[21,26,9,13,"clearWarnings"],[21,39,9,13],[22,2,9,13,"exports"],[22,9,9,13],[22,10,9,13,"dismiss"],[22,17,9,13],[22,20,9,13,"dismiss"],[22,27,9,13],[23,2,9,13,"exports"],[23,9,9,13],[23,10,9,13,"getIgnorePatterns"],[23,27,9,13],[23,30,9,13,"getIgnorePatterns"],[23,47,9,13],[24,2,9,13,"exports"],[24,9,9,13],[24,10,9,13,"isDisabled"],[24,20,9,13],[24,23,9,13,"isDisabled"],[24,33,9,13],[25,2,9,13,"exports"],[25,9,9,13],[25,10,9,13,"isLogBoxErrorMessage"],[25,30,9,13],[25,33,9,13,"isLogBoxErrorMessage"],[25,53,9,13],[26,2,9,13,"exports"],[26,9,9,13],[26,10,9,13,"isMessageIgnored"],[26,26,9,13],[26,29,9,13,"isMessageIgnored"],[26,45,9,13],[27,2,9,13,"exports"],[27,9,9,13],[27,10,9,13,"observe"],[27,17,9,13],[27,20,9,13,"observe"],[27,27,9,13],[28,2,9,13,"exports"],[28,9,9,13],[28,10,9,13,"reportLogBoxError"],[28,27,9,13],[28,30,9,13,"reportLogBoxError"],[28,47,9,13],[29,2,9,13,"exports"],[29,9,9,13],[29,10,9,13,"reportUnexpectedLogBoxError"],[29,37,9,13],[29,40,9,13,"reportUnexpectedLogBoxError"],[29,67,9,13],[30,2,9,13,"exports"],[30,9,9,13],[30,10,9,13,"retrySymbolicateLogNow"],[30,32,9,13],[30,35,9,13,"retrySymbolicateLogNow"],[30,57,9,13],[31,2,9,13,"exports"],[31,9,9,13],[31,10,9,13,"setDisabled"],[31,21,9,13],[31,24,9,13,"setDisabled"],[31,35,9,13],[32,2,9,13,"exports"],[32,9,9,13],[32,10,9,13,"setSelectedLog"],[32,24,9,13],[32,27,9,13,"setSelectedLog"],[32,41,9,13],[33,2,9,13,"exports"],[33,9,9,13],[33,10,9,13,"symbolicateLogLazy"],[33,28,9,13],[33,31,9,13,"symbolicateLogLazy"],[33,49,9,13],[34,2,9,13,"exports"],[34,9,9,13],[34,10,9,13,"symbolicateLogNow"],[34,27,9,13],[34,30,9,13,"symbolicateLogNow"],[34,47,9,13],[35,2,9,13,"exports"],[35,9,9,13],[35,10,9,13,"withSubscription"],[35,26,9,13],[35,29,9,13,"withSubscription"],[35,45,9,13],[36,2,9,13],[36,6,9,13,"_classCallCheck2"],[36,22,9,13],[36,25,9,13,"_interopRequireDefault"],[36,47,9,13],[36,48,9,13,"require"],[36,55,9,13],[36,56,9,13,"_dependencyMap"],[36,70,9,13],[37,2,9,13],[37,6,9,13,"_createClass2"],[37,19,9,13],[37,22,9,13,"_interopRequireDefault"],[37,44,9,13],[37,45,9,13,"require"],[37,52,9,13],[37,53,9,13,"_dependencyMap"],[37,67,9,13],[38,2,9,13],[38,6,9,13,"_possibleConstructorReturn2"],[38,33,9,13],[38,36,9,13,"_interopRequireDefault"],[38,58,9,13],[38,59,9,13,"require"],[38,66,9,13],[38,67,9,13,"_dependencyMap"],[38,81,9,13],[39,2,9,13],[39,6,9,13,"_getPrototypeOf2"],[39,22,9,13],[39,25,9,13,"_interopRequireDefault"],[39,47,9,13],[39,48,9,13,"require"],[39,55,9,13],[39,56,9,13,"_dependencyMap"],[39,70,9,13],[40,2,9,13],[40,6,9,13,"_inherits2"],[40,16,9,13],[40,19,9,13,"_interopRequireDefault"],[40,41,9,13],[40,42,9,13,"require"],[40,49,9,13],[40,50,9,13,"_dependencyMap"],[40,64,9,13],[41,2,11,0],[41,6,11,0,"React"],[41,11,11,0],[41,14,11,0,"_interopRequireWildcard"],[41,37,11,0],[41,38,11,0,"require"],[41,45,11,0],[41,46,11,0,"_dependencyMap"],[41,60,11,0],[42,2,12,0],[42,6,12,0,"_reactNative"],[42,18,12,0],[42,21,12,0,"require"],[42,28,12,0],[42,29,12,0,"_dependencyMap"],[42,43,12,0],[43,2,14,0],[43,6,14,0,"_LogBoxLog"],[43,16,14,0],[43,19,14,0,"require"],[43,26,14,0],[43,27,14,0,"_dependencyMap"],[43,41,14,0],[44,2,16,0],[44,6,16,0,"_LogContext"],[44,17,16,0],[44,20,16,0,"require"],[44,27,16,0],[44,28,16,0,"_dependencyMap"],[44,42,16,0],[45,2,17,0],[45,6,17,0,"_parseLogBoxLog"],[45,21,17,0],[45,24,17,0,"require"],[45,31,17,0],[45,32,17,0,"_dependencyMap"],[45,46,17,0],[46,2,19,0],[46,6,19,0,"_NativeLogBox"],[46,19,19,0],[46,22,19,0,"_interopRequireDefault"],[46,44,19,0],[46,45,19,0,"require"],[46,52,19,0],[46,53,19,0,"_dependencyMap"],[46,67,19,0],[47,2,20,0],[47,6,20,0,"_parseErrorStack"],[47,22,20,0],[47,25,20,0,"_interopRequireDefault"],[47,47,20,0],[47,48,20,0,"require"],[47,55,20,0],[47,56,20,0,"_dependencyMap"],[47,70,20,0],[48,2,20,57],[48,6,20,57,"_jsxDevRuntime"],[48,20,20,57],[48,23,20,57,"require"],[48,30,20,57],[48,31,20,57,"_dependencyMap"],[48,45,20,57],[49,2,20,57],[49,6,20,57,"_jsxFileName"],[49,18,20,57],[50,2,20,57],[50,11,20,57,"_getRequireWildcardCache"],[50,36,20,57,"e"],[50,37,20,57],[50,66,20,57,"WeakMap"],[50,73,20,57],[50,92,20,57,"r"],[50,93,20,57],[50,100,20,57,"WeakMap"],[50,107,20,57],[50,111,20,57,"t"],[50,112,20,57],[50,119,20,57,"WeakMap"],[50,126,20,57],[50,138,20,57,"_getRequireWildcardCache"],[50,162,20,57],[50,174,20,57,"_getRequireWildcardCache"],[50,175,20,57,"e"],[50,176,20,57],[50,187,20,57,"e"],[50,188,20,57],[50,191,20,57,"t"],[50,192,20,57],[50,195,20,57,"r"],[50,196,20,57],[50,201,20,57,"e"],[50,202,20,57],[51,2,20,57],[51,11,20,57,"_interopRequireWildcard"],[51,35,20,57,"e"],[51,36,20,57],[51,38,20,57,"r"],[51,39,20,57],[51,48,20,57,"r"],[51,49,20,57],[51,53,20,57,"e"],[51,54,20,57],[51,58,20,57,"e"],[51,59,20,57],[51,60,20,57,"__esModule"],[51,70,20,57],[51,79,20,57,"e"],[51,80,20,57],[51,95,20,57,"e"],[51,96,20,57],[51,119,20,57,"e"],[51,120,20,57],[51,145,20,57,"e"],[51,146,20,57],[51,157,20,57,"default"],[51,164,20,57],[51,166,20,57,"e"],[51,167,20,57],[51,175,20,57,"t"],[51,176,20,57],[51,179,20,57,"_getRequireWildcardCache"],[51,203,20,57],[51,204,20,57,"r"],[51,205,20,57],[51,212,20,57,"t"],[51,213,20,57],[51,217,20,57,"t"],[51,218,20,57],[51,219,20,57,"has"],[51,222,20,57],[51,223,20,57,"e"],[51,224,20,57],[51,234,20,57,"t"],[51,235,20,57],[51,236,20,57,"get"],[51,239,20,57],[51,240,20,57,"e"],[51,241,20,57],[51,248,20,57,"n"],[51,249,20,57],[51,254,20,57,"__proto__"],[51,263,20,57],[51,273,20,57,"a"],[51,274,20,57],[51,277,20,57,"Object"],[51,283,20,57],[51,284,20,57,"defineProperty"],[51,298,20,57],[51,302,20,57,"Object"],[51,308,20,57],[51,309,20,57,"getOwnPropertyDescriptor"],[51,333,20,57],[51,344,20,57,"u"],[51,345,20,57],[51,349,20,57,"e"],[51,350,20,57],[51,370,20,57,"u"],[51,371,20,57],[51,378,20,57,"hasOwnProperty"],[51,392,20,57],[51,393,20,57,"call"],[51,397,20,57],[51,398,20,57,"e"],[51,399,20,57],[51,401,20,57,"u"],[51,402,20,57],[51,411,20,57,"i"],[51,412,20,57],[51,415,20,57,"a"],[51,416,20,57],[51,419,20,57,"Object"],[51,425,20,57],[51,426,20,57,"getOwnPropertyDescriptor"],[51,450,20,57],[51,451,20,57,"e"],[51,452,20,57],[51,454,20,57,"u"],[51,455,20,57],[51,465,20,57,"i"],[51,466,20,57],[51,471,20,57,"i"],[51,472,20,57],[51,473,20,57,"get"],[51,476,20,57],[51,480,20,57,"i"],[51,481,20,57],[51,482,20,57,"set"],[51,485,20,57],[51,489,20,57,"Object"],[51,495,20,57],[51,496,20,57,"defineProperty"],[51,510,20,57],[51,511,20,57,"n"],[51,512,20,57],[51,514,20,57,"u"],[51,515,20,57],[51,517,20,57,"i"],[51,518,20,57],[51,522,20,57,"n"],[51,523,20,57],[51,524,20,57,"u"],[51,525,20,57],[51,529,20,57,"e"],[51,530,20,57],[51,531,20,57,"u"],[51,532,20,57],[51,544,20,57,"n"],[51,545,20,57],[51,546,20,57,"default"],[51,553,20,57],[51,556,20,57,"e"],[51,557,20,57],[51,559,20,57,"t"],[51,560,20,57],[51,564,20,57,"t"],[51,565,20,57],[51,566,20,57,"set"],[51,569,20,57],[51,570,20,57,"e"],[51,571,20,57],[51,573,20,57,"n"],[51,574,20,57],[51,577,20,57,"n"],[51,578,20,57],[52,2,20,57],[52,11,20,57,"_callSuper"],[52,22,20,57,"t"],[52,23,20,57],[52,25,20,57,"o"],[52,26,20,57],[52,28,20,57,"e"],[52,29,20,57],[52,40,20,57,"o"],[52,41,20,57],[52,48,20,57,"_getPrototypeOf2"],[52,64,20,57],[52,65,20,57,"default"],[52,72,20,57],[52,74,20,57,"o"],[52,75,20,57],[52,82,20,57,"_possibleConstructorReturn2"],[52,109,20,57],[52,110,20,57,"default"],[52,117,20,57],[52,119,20,57,"t"],[52,120,20,57],[52,122,20,57,"_isNativeReflectConstruct"],[52,147,20,57],[52,152,20,57,"Reflect"],[52,159,20,57],[52,160,20,57,"construct"],[52,169,20,57],[52,170,20,57,"o"],[52,171,20,57],[52,173,20,57,"e"],[52,174,20,57],[52,186,20,57,"_getPrototypeOf2"],[52,202,20,57],[52,203,20,57,"default"],[52,210,20,57],[52,212,20,57,"t"],[52,213,20,57],[52,215,20,57,"constructor"],[52,226,20,57],[52,230,20,57,"o"],[52,231,20,57],[52,232,20,57,"apply"],[52,237,20,57],[52,238,20,57,"t"],[52,239,20,57],[52,241,20,57,"e"],[52,242,20,57],[53,2,20,57],[53,11,20,57,"_isNativeReflectConstruct"],[53,37,20,57],[53,51,20,57,"t"],[53,52,20,57],[53,56,20,57,"Boolean"],[53,63,20,57],[53,64,20,57,"prototype"],[53,73,20,57],[53,74,20,57,"valueOf"],[53,81,20,57],[53,82,20,57,"call"],[53,86,20,57],[53,87,20,57,"Reflect"],[53,94,20,57],[53,95,20,57,"construct"],[53,104,20,57],[53,105,20,57,"Boolean"],[53,112,20,57],[53,145,20,57,"t"],[53,146,20,57],[53,159,20,57,"_isNativeReflectConstruct"],[53,184,20,57],[53,196,20,57,"_isNativeReflectConstruct"],[53,197,20,57],[53,210,20,57,"t"],[53,211,20,57],[54,2,66,0],[54,6,66,6,"observers"],[54,15,66,50],[54,18,66,53],[54,22,66,57,"Set"],[54,25,66,60],[54,26,66,61],[54,27,66,62],[55,2,67,0],[55,6,67,6,"ignorePatterns"],[55,20,67,40],[55,23,67,43],[55,27,67,47,"Set"],[55,30,67,50],[55,31,67,51],[55,32,67,52],[56,2,68,0],[56,6,68,4,"logs"],[56,10,68,20],[56,13,68,23],[56,17,68,27,"Set"],[56,20,68,30],[56,21,68,31],[56,22,68,32],[57,2,69,0],[57,6,69,4,"updateTimeout"],[57,19,69,89],[57,22,69,92],[57,26,69,96],[58,2,70,0],[58,6,70,4,"_isDisabled"],[58,17,70,15],[58,20,70,18],[58,25,70,23],[59,2,71,0],[59,6,71,4,"_selectedIndex"],[59,20,71,18],[59,23,71,21],[59,24,71,22],[59,25,71,23],[60,2,73,0],[60,6,73,6,"LOGBOX_ERROR_MESSAGE"],[60,26,73,26],[60,29,74,2],[60,101,74,74],[61,2,76,0],[61,11,76,9,"getNextState"],[61,23,76,21,"getNextState"],[61,24,76,21],[61,26,76,24],[62,4,77,2],[62,11,77,9],[63,6,78,4,"logs"],[63,10,78,8],[64,6,79,4,"isDisabled"],[64,16,79,14],[64,18,79,16,"_isDisabled"],[64,29,79,27],[65,6,80,4,"selectedLogIndex"],[65,22,80,20],[65,24,80,22,"_selectedIndex"],[66,4,81,2],[66,5,81,3],[67,2,82,0],[68,2,84,7],[68,11,84,16,"reportLogBoxError"],[68,28,84,33,"reportLogBoxError"],[68,29,84,34,"error"],[68,34,84,54],[68,36,84,56,"componentStack"],[68,50,84,79],[68,52,84,87],[69,4,85,2],[69,8,85,8,"ExceptionsManager"],[69,25,85,25],[69,28,85,28,"require"],[69,35,85,35],[69,36,85,35,"_dependencyMap"],[69,50,85,35],[69,86,85,66],[69,87,85,67],[69,88,85,68,"default"],[69,95,85,75],[70,4,87,2],[70,8,87,6,"componentStack"],[70,22,87,20],[70,26,87,24],[70,30,87,28],[70,32,87,30],[71,6,88,4,"error"],[71,11,88,9],[71,12,88,10,"componentStack"],[71,26,88,24],[71,29,88,27,"componentStack"],[71,43,88,41],[72,4,89,2],[73,4,90,2,"ExceptionsManager"],[73,21,90,19],[73,22,90,20,"handleException"],[73,37,90,35],[73,38,90,36,"error"],[73,43,90,41],[73,44,90,42],[74,2,91,0],[75,2,93,7],[75,11,93,16,"reportUnexpectedLogBoxError"],[75,38,93,43,"reportUnexpectedLogBoxError"],[75,39,93,44,"error"],[75,44,93,64],[75,46,93,66,"componentStack"],[75,60,93,89],[75,62,93,97],[76,4,94,2,"error"],[76,9,94,7],[76,10,94,8,"message"],[76,17,94,15],[76,20,94,18],[76,23,94,21,"LOGBOX_ERROR_MESSAGE"],[76,43,94,41],[76,50,94,48,"error"],[76,55,94,53],[76,56,94,54,"message"],[76,63,94,61],[76,65,94,63],[77,4,95,2],[77,11,95,9,"reportLogBoxError"],[77,28,95,26],[77,29,95,27,"error"],[77,34,95,32],[77,36,95,34,"componentStack"],[77,50,95,48],[77,51,95,49],[78,2,96,0],[79,2,98,7],[79,11,98,16,"isLogBoxErrorMessage"],[79,31,98,36,"isLogBoxErrorMessage"],[79,32,98,37,"message"],[79,39,98,52],[79,41,98,63],[80,4,99,2],[80,11,99,9],[80,18,99,16,"message"],[80,25,99,23],[80,30,99,28],[80,38,99,36],[80,42,99,40,"message"],[80,49,99,47],[80,50,99,48,"includes"],[80,58,99,56],[80,59,99,57,"LOGBOX_ERROR_MESSAGE"],[80,79,99,77],[80,80,99,78],[81,2,100,0],[82,2,102,7],[82,11,102,16,"isMessageIgnored"],[82,27,102,32,"isMessageIgnored"],[82,28,102,33,"message"],[82,35,102,48],[82,37,102,59],[83,4,103,2],[83,9,103,7],[83,13,103,13,"pattern"],[83,20,103,20],[83,24,103,24,"ignorePatterns"],[83,38,103,38],[83,40,103,40],[84,6,104,4],[84,10,105,7,"pattern"],[84,17,105,14],[84,29,105,26,"RegExp"],[84,35,105,32],[84,39,105,36,"pattern"],[84,46,105,43],[84,47,105,44,"test"],[84,51,105,48],[84,52,105,49,"message"],[84,59,105,56],[84,60,105,57],[84,64,106,7],[84,71,106,14,"pattern"],[84,78,106,21],[84,83,106,26],[84,91,106,34],[84,95,106,38,"message"],[84,102,106,45],[84,103,106,46,"includes"],[84,111,106,54],[84,112,106,55,"pattern"],[84,119,106,62],[84,120,106,64],[84,122,107,6],[85,8,108,6],[85,15,108,13],[85,19,108,17],[86,6,109,4],[87,4,110,2],[88,4,111,2],[88,11,111,9],[88,16,111,14],[89,2,112,0],[90,2,114,0],[90,11,114,9,"setImmediateShim"],[90,27,114,25,"setImmediateShim"],[90,28,114,26,"callback"],[90,36,114,46],[90,38,114,48],[91,4,115,2],[91,8,115,6],[91,9,115,7,"global"],[91,15,115,13],[91,16,115,14,"setImmediate"],[91,28,115,26],[91,30,115,28],[92,6,116,4],[92,13,116,11,"setTimeout"],[92,23,116,21],[92,24,116,22,"callback"],[92,32,116,30],[92,34,116,32],[92,35,116,33],[92,36,116,34],[93,4,117,2],[94,4,118,2],[94,11,118,9,"global"],[94,17,118,15],[94,18,118,16,"setImmediate"],[94,30,118,28],[94,31,118,29,"callback"],[94,39,118,37],[94,40,118,38],[95,2,119,0],[96,2,121,0],[96,11,121,9,"handleUpdate"],[96,23,121,21,"handleUpdate"],[96,24,121,21],[96,26,121,30],[97,4,122,2],[97,8,122,6,"updateTimeout"],[97,21,122,19],[97,25,122,23],[97,29,122,27],[97,31,122,29],[98,6,123,4,"updateTimeout"],[98,19,123,17],[98,22,123,20,"setImmediateShim"],[98,38,123,36],[98,39,123,37],[98,45,123,43],[99,8,124,6,"updateTimeout"],[99,21,124,19],[99,24,124,22],[99,28,124,26],[100,8,125,6],[100,12,125,12,"nextState"],[100,21,125,21],[100,24,125,24,"getNextState"],[100,36,125,36],[100,37,125,37],[100,38,125,38],[101,8,126,6,"observers"],[101,17,126,15],[101,18,126,16,"forEach"],[101,25,126,23],[101,26,126,24,"_ref"],[101,30,126,24],[102,10,126,24],[102,14,126,27,"observer"],[102,22,126,35],[102,25,126,35,"_ref"],[102,29,126,35],[102,30,126,27,"observer"],[102,38,126,35],[103,10,126,35],[103,17,126,42,"observer"],[103,25,126,50],[103,26,126,51,"nextState"],[103,35,126,60],[103,36,126,61],[104,8,126,61],[104,10,126,62],[105,6,127,4],[105,7,127,5],[105,8,127,6],[106,4,128,2],[107,2,129,0],[108,2,131,0],[108,11,131,9,"appendNewLog"],[108,23,131,21,"appendNewLog"],[108,24,131,22,"newLog"],[108,30,131,39],[108,32,131,47],[109,4,132,2],[110,4,133,2],[111,4,134,2],[111,8,134,6,"isMessageIgnored"],[111,24,134,22],[111,25,134,23,"newLog"],[111,31,134,29],[111,32,134,30,"message"],[111,39,134,37],[111,40,134,38,"content"],[111,47,134,45],[111,48,134,46],[111,50,134,48],[112,6,135,4],[113,4,136,2],[115,4,138,2],[116,4,139,2],[117,4,140,2],[118,4,141,2],[118,8,141,8,"lastLog"],[118,15,141,15],[118,18,141,18,"Array"],[118,23,141,23],[118,24,141,24,"from"],[118,28,141,28],[118,29,141,29,"logs"],[118,33,141,33],[118,34,141,34],[118,35,141,35,"pop"],[118,38,141,38],[118,39,141,39],[118,40,141,40],[119,4,142,2],[119,8,142,6,"lastLog"],[119,15,142,13],[119,19,142,17,"lastLog"],[119,26,142,24],[119,27,142,25,"category"],[119,35,142,33],[119,40,142,38,"newLog"],[119,46,142,44],[119,47,142,45,"category"],[119,55,142,53],[119,57,142,55],[120,6,143,4,"lastLog"],[120,13,143,11],[120,14,143,12,"incrementCount"],[120,28,143,26],[120,29,143,27],[120,30,143,28],[121,6,144,4,"handleUpdate"],[121,18,144,16],[121,19,144,17],[121,20,144,18],[122,6,145,4],[123,4,146,2],[124,4,148,2],[124,8,148,6,"newLog"],[124,14,148,12],[124,15,148,13,"level"],[124,20,148,18],[124,25,148,23],[124,32,148,30],[124,34,148,32],[125,6,149,4],[126,6,150,4],[127,6,151,4],[128,6,152,4],[128,10,152,10,"OPTIMISTIC_WAIT_TIME"],[128,30,152,30],[128,33,152,33],[128,37,152,37],[129,6,154,4],[129,10,154,8,"addPendingLog"],[129,23,154,42],[129,26,154,45,"addPendingLog"],[129,27,154,45],[129,32,154,51],[130,8,155,6,"logs"],[130,12,155,10],[130,13,155,11,"add"],[130,16,155,14],[130,17,155,15,"newLog"],[130,23,155,21],[130,24,155,22],[131,8,156,6],[131,12,156,10,"_selectedIndex"],[131,26,156,24],[131,29,156,27],[131,30,156,28],[131,32,156,30],[132,10,157,8,"setSelectedLog"],[132,24,157,22],[132,25,157,23,"logs"],[132,29,157,27],[132,30,157,28,"size"],[132,34,157,32],[132,37,157,35],[132,38,157,36],[132,39,157,37],[133,8,158,6],[133,9,158,7],[133,15,158,13],[134,10,159,8,"handleUpdate"],[134,22,159,20],[134,23,159,21],[134,24,159,22],[135,8,160,6],[136,8,161,6,"addPendingLog"],[136,21,161,19],[136,24,161,22],[136,28,161,26],[137,6,162,4],[137,7,162,5],[138,6,164,4],[138,10,164,10,"optimisticTimeout"],[138,27,164,27],[138,30,164,30,"setTimeout"],[138,40,164,40],[138,41,164,41],[138,47,164,47],[139,8,165,6],[139,12,165,10,"addPendingLog"],[139,25,165,23],[139,27,165,25],[140,10,166,8,"addPendingLog"],[140,23,166,21],[140,24,166,22],[140,25,166,23],[141,8,167,6],[142,6,168,4],[142,7,168,5],[142,9,168,7,"OPTIMISTIC_WAIT_TIME"],[142,29,168,27],[142,30,168,28],[144,6,170,4],[145,6,171,4,"newLog"],[145,12,171,10],[145,13,171,11,"symbolicate"],[145,24,171,22],[145,25,171,23],[145,36,171,34],[145,37,171,35],[146,6,173,4,"newLog"],[146,12,173,10],[146,13,173,11,"symbolicate"],[146,24,173,22],[146,25,173,23],[146,32,173,30],[146,34,173,33,"status"],[146,40,173,39],[146,44,173,44],[147,8,174,6],[147,12,174,10,"addPendingLog"],[147,25,174,23],[147,29,174,27,"status"],[147,35,174,33],[147,40,174,38],[147,49,174,47],[147,51,174,49],[148,10,175,8,"addPendingLog"],[148,23,175,21],[148,24,175,22],[148,25,175,23],[149,10,176,8,"clearTimeout"],[149,22,176,20],[149,23,176,21,"optimisticTimeout"],[149,40,176,38],[149,41,176,39],[150,8,177,6],[150,9,177,7],[150,15,177,13],[150,19,177,17,"status"],[150,25,177,23],[150,30,177,28],[150,39,177,37],[150,41,177,39],[151,10,178,8],[152,10,179,8,"handleUpdate"],[152,22,179,20],[152,23,179,21],[152,24,179,22],[153,8,180,6],[154,6,181,4],[154,7,181,5],[154,8,181,6],[155,4,182,2],[155,5,182,3],[155,11,182,9],[155,15,182,13,"newLog"],[155,21,182,19],[155,22,182,20,"level"],[155,27,182,25],[155,32,182,30],[155,40,182,38],[155,42,182,40],[156,6,183,4,"logs"],[156,10,183,8],[156,11,183,9,"add"],[156,14,183,12],[156,15,183,13,"newLog"],[156,21,183,19],[156,22,183,20],[157,6,184,4,"setSelectedLog"],[157,20,184,18],[157,21,184,19,"logs"],[157,25,184,23],[157,26,184,24,"size"],[157,30,184,28],[157,33,184,31],[157,34,184,32],[157,35,184,33],[158,4,185,2],[158,5,185,3],[158,11,185,9],[159,6,186,4,"logs"],[159,10,186,8],[159,11,186,9,"add"],[159,14,186,12],[159,15,186,13,"newLog"],[159,21,186,19],[159,22,186,20],[160,6,187,4,"handleUpdate"],[160,18,187,16],[160,19,187,17],[160,20,187,18],[161,4,188,2],[162,2,189,0],[163,2,191,7],[163,11,191,16,"addLog"],[163,17,191,22,"addLog"],[163,18,191,23,"log"],[163,21,191,35],[163,23,191,43],[164,4,192,2],[164,8,192,8,"errorForStackTrace"],[164,26,192,26],[164,29,192,29],[164,33,192,33,"Error"],[164,38,192,38],[164,39,192,39],[164,40,192,40],[166,4,194,2],[167,4,195,2],[168,4,196,2,"setImmediate"],[168,16,196,14],[168,17,196,15],[168,23,196,21],[169,6,197,4],[169,10,197,8],[170,8,198,6],[170,12,198,12,"stack"],[170,17,198,17],[170,20,198,20],[170,24,198,20,"parseErrorStack"],[170,48,198,35],[170,50,198,36,"errorForStackTrace"],[170,68,198,54],[170,70,198,56,"stack"],[170,75,198,61],[170,76,198,62],[171,8,200,6,"appendNewLog"],[171,20,200,18],[171,21,201,8],[171,25,201,12,"LogBoxLog"],[171,45,201,21],[171,46,201,22],[172,10,202,10,"level"],[172,15,202,15],[172,17,202,17,"log"],[172,20,202,20],[172,21,202,21,"level"],[172,26,202,26],[173,10,203,10,"message"],[173,17,203,17],[173,19,203,19,"log"],[173,22,203,22],[173,23,203,23,"message"],[173,30,203,30],[174,10,204,10,"isComponentError"],[174,26,204,26],[174,28,204,28],[174,33,204,33],[175,10,205,10,"stack"],[175,15,205,15],[176,10,206,10,"category"],[176,18,206,18],[176,20,206,20,"log"],[176,23,206,23],[176,24,206,24,"category"],[176,32,206,32],[177,10,207,10,"componentStack"],[177,24,207,24],[177,26,207,26,"log"],[177,29,207,29],[177,30,207,30,"componentStack"],[178,8,208,8],[178,9,208,9],[178,10,209,6],[178,11,209,7],[179,6,210,4],[179,7,210,5],[179,8,210,6],[179,15,210,13,"error"],[179,20,210,18],[179,22,210,20],[180,8,211,6,"reportUnexpectedLogBoxError"],[180,35,211,33],[180,36,211,34,"error"],[180,41,211,39],[180,42,211,40],[181,6,212,4],[182,4,213,2],[182,5,213,3],[182,6,213,4],[183,2,214,0],[184,2,216,7],[184,11,216,16,"addException"],[184,23,216,28,"addException"],[184,24,216,29,"error"],[184,29,216,57],[184,31,216,65],[185,4,217,2],[186,4,218,2],[187,4,219,2,"setImmediate"],[187,16,219,14],[187,17,219,15],[187,23,219,21],[188,6,220,4],[188,10,220,8],[189,8,221,6,"appendNewLog"],[189,20,221,18],[189,21,221,19],[189,25,221,23,"LogBoxLog"],[189,45,221,32],[189,46,221,33],[189,50,221,33,"parseLogBoxException"],[189,86,221,53],[189,88,221,54,"error"],[189,93,221,59],[189,94,221,60],[189,95,221,61],[189,96,221,62],[190,6,222,4],[190,7,222,5],[190,8,222,6],[190,15,222,13,"loggingError"],[190,27,222,25],[190,29,222,27],[191,8,223,6,"reportUnexpectedLogBoxError"],[191,35,223,33],[191,36,223,34,"loggingError"],[191,48,223,46],[191,49,223,47],[192,6,224,4],[193,4,225,2],[193,5,225,3],[193,6,225,4],[194,2,226,0],[195,2,228,7],[195,11,228,16,"symbolicateLogNow"],[195,28,228,33,"symbolicateLogNow"],[195,29,228,34,"type"],[195,33,228,49],[195,35,228,51,"log"],[195,38,228,65],[195,40,228,67],[196,4,229,2,"log"],[196,7,229,5],[196,8,229,6,"symbolicate"],[196,19,229,17],[196,20,229,18,"type"],[196,24,229,22],[196,26,229,24],[196,32,229,30],[197,6,230,4,"handleUpdate"],[197,18,230,16],[197,19,230,17],[197,20,230,18],[198,4,231,2],[198,5,231,3],[198,6,231,4],[199,2,232,0],[200,2,234,7],[200,11,234,16,"retrySymbolicateLogNow"],[200,33,234,38,"retrySymbolicateLogNow"],[200,34,234,39,"type"],[200,38,234,54],[200,40,234,56,"log"],[200,43,234,70],[200,45,234,72],[201,4,235,2,"log"],[201,7,235,5],[201,8,235,6,"retrySymbolicate"],[201,24,235,22],[201,25,235,23,"type"],[201,29,235,27],[201,31,235,29],[201,37,235,35],[202,6,236,4,"handleUpdate"],[202,18,236,16],[202,19,236,17],[202,20,236,18],[203,4,237,2],[203,5,237,3],[203,6,237,4],[204,2,238,0],[205,2,240,7],[205,11,240,16,"symbolicateLogLazy"],[205,29,240,34,"symbolicateLogLazy"],[205,30,240,35,"type"],[205,34,240,50],[205,36,240,52,"log"],[205,39,240,66],[205,41,240,68],[206,4,241,2,"log"],[206,7,241,5],[206,8,241,6,"symbolicate"],[206,19,241,17],[206,20,241,18,"type"],[206,24,241,22],[206,25,241,23],[207,2,242,0],[208,2,244,7],[208,11,244,16,"clear"],[208,16,244,21,"clear"],[208,17,244,21],[208,19,244,30],[209,4,245,2],[209,8,245,6,"logs"],[209,12,245,10],[209,13,245,11,"size"],[209,17,245,15],[209,20,245,18],[209,21,245,19],[209,23,245,21],[210,6,246,4,"logs"],[210,10,246,8],[210,13,246,11],[210,17,246,15,"Set"],[210,20,246,18],[210,21,246,19],[210,22,246,20],[211,6,247,4,"setSelectedLog"],[211,20,247,18],[211,21,247,19],[211,22,247,20],[211,23,247,21],[211,24,247,22],[212,4,248,2],[213,2,249,0],[214,2,251,7],[214,11,251,16,"setSelectedLog"],[214,25,251,30,"setSelectedLog"],[214,26,251,31,"proposedNewIndex"],[214,42,251,55],[214,44,251,63],[215,4,252,2],[215,8,252,8,"oldIndex"],[215,16,252,16],[215,19,252,19,"_selectedIndex"],[215,33,252,33],[216,4,253,2],[216,8,253,6,"newIndex"],[216,16,253,14],[216,19,253,17,"proposedNewIndex"],[216,35,253,33],[217,4,255,2],[217,8,255,8,"logArray"],[217,16,255,16],[217,19,255,19,"Array"],[217,24,255,24],[217,25,255,25,"from"],[217,29,255,29],[217,30,255,30,"logs"],[217,34,255,34],[217,35,255,35],[218,4,256,2],[218,8,256,6,"index"],[218,13,256,11],[218,16,256,14,"logArray"],[218,24,256,22],[218,25,256,23,"length"],[218,31,256,29],[218,34,256,32],[218,35,256,33],[219,4,257,2],[219,11,257,9,"index"],[219,16,257,14],[219,20,257,18],[219,21,257,19],[219,23,257,21],[220,6,258,4],[221,6,259,4],[221,10,259,8,"logArray"],[221,18,259,16],[221,19,259,17,"index"],[221,24,259,22],[221,25,259,23],[221,26,259,24,"level"],[221,31,259,29],[221,36,259,34],[221,44,259,42],[221,46,259,44],[222,8,260,6,"newIndex"],[222,16,260,14],[222,19,260,17,"index"],[222,24,260,22],[223,8,261,6],[224,6,262,4],[225,6,263,4,"index"],[225,11,263,9],[225,15,263,13],[225,16,263,14],[226,4,264,2],[227,4,265,2,"_selectedIndex"],[227,18,265,16],[227,21,265,19,"newIndex"],[227,29,265,27],[228,4,266,2,"handleUpdate"],[228,16,266,14],[228,17,266,15],[228,18,266,16],[229,4,267,2],[229,8,267,6,"NativeLogBox"],[229,29,267,18],[229,31,267,20],[230,6,268,4,"setTimeout"],[230,16,268,14],[230,17,268,15],[230,23,268,21],[231,8,269,6],[231,12,269,10,"oldIndex"],[231,20,269,18],[231,23,269,21],[231,24,269,22],[231,28,269,26,"newIndex"],[231,36,269,34],[231,40,269,38],[231,41,269,39],[231,43,269,41],[232,10,270,8,"NativeLogBox"],[232,31,270,20],[232,32,270,21,"show"],[232,36,270,25],[232,37,270,26],[232,38,270,27],[233,8,271,6],[233,9,271,7],[233,15,271,13],[233,19,271,17,"oldIndex"],[233,27,271,25],[233,31,271,29],[233,32,271,30],[233,36,271,34,"newIndex"],[233,44,271,42],[233,47,271,45],[233,48,271,46],[233,50,271,48],[234,10,272,8,"NativeLogBox"],[234,31,272,20],[234,32,272,21,"hide"],[234,36,272,25],[234,37,272,26],[234,38,272,27],[235,8,273,6],[236,6,274,4],[236,7,274,5],[236,9,274,7],[236,10,274,8],[236,11,274,9],[237,4,275,2],[238,2,276,0],[239,2,278,7],[239,11,278,16,"clearWarnings"],[239,24,278,29,"clearWarnings"],[239,25,278,29],[239,27,278,38],[240,4,279,2],[240,8,279,8,"newLogs"],[240,15,279,15],[240,18,279,18,"Array"],[240,23,279,23],[240,24,279,24,"from"],[240,28,279,28],[240,29,279,29,"logs"],[240,33,279,33],[240,34,279,34],[240,35,279,35,"filter"],[240,41,279,41],[240,42,279,43,"log"],[240,45,279,46],[240,49,279,51,"log"],[240,52,279,54],[240,53,279,55,"level"],[240,58,279,60],[240,63,279,65],[240,69,279,71],[240,70,279,72],[241,4,280,2],[241,8,280,6,"newLogs"],[241,15,280,13],[241,16,280,14,"length"],[241,22,280,20],[241,27,280,25,"logs"],[241,31,280,29],[241,32,280,30,"size"],[241,36,280,34],[241,38,280,36],[242,6,281,4,"logs"],[242,10,281,8],[242,13,281,11],[242,17,281,15,"Set"],[242,20,281,18],[242,21,281,19,"newLogs"],[242,28,281,26],[242,29,281,27],[243,6,282,4,"setSelectedLog"],[243,20,282,18],[243,21,282,19],[243,22,282,20],[243,23,282,21],[243,24,282,22],[244,6,283,4,"handleUpdate"],[244,18,283,16],[244,19,283,17],[244,20,283,18],[245,4,284,2],[246,2,285,0],[247,2,287,7],[247,11,287,16,"clearErrors"],[247,22,287,27,"clearErrors"],[247,23,287,27],[247,25,287,36],[248,4,288,2],[248,8,288,8,"newLogs"],[248,15,288,15],[248,18,288,18,"Array"],[248,23,288,23],[248,24,288,24,"from"],[248,28,288,28],[248,29,288,29,"logs"],[248,33,288,33],[248,34,288,34],[248,35,288,35,"filter"],[248,41,288,41],[248,42,288,43,"log"],[248,45,288,46],[248,49,288,51,"log"],[248,52,288,54],[248,53,288,55,"level"],[248,58,288,60],[248,63,288,65],[248,70,288,72],[248,74,288,76,"log"],[248,77,288,79],[248,78,288,80,"level"],[248,83,288,85],[248,88,288,90],[248,95,288,97],[248,96,288,98],[249,4,289,2],[249,8,289,6,"newLogs"],[249,15,289,13],[249,16,289,14,"length"],[249,22,289,20],[249,27,289,25,"logs"],[249,31,289,29],[249,32,289,30,"size"],[249,36,289,34],[249,38,289,36],[250,6,290,4,"logs"],[250,10,290,8],[250,13,290,11],[250,17,290,15,"Set"],[250,20,290,18],[250,21,290,19,"newLogs"],[250,28,290,26],[250,29,290,27],[251,6,291,4,"setSelectedLog"],[251,20,291,18],[251,21,291,19],[251,22,291,20],[251,23,291,21],[251,24,291,22],[252,4,292,2],[253,2,293,0],[254,2,295,7],[254,11,295,16,"dismiss"],[254,18,295,23,"dismiss"],[254,19,295,24,"log"],[254,22,295,38],[254,24,295,46],[255,4,296,2],[255,8,296,6,"logs"],[255,12,296,10],[255,13,296,11,"has"],[255,16,296,14],[255,17,296,15,"log"],[255,20,296,18],[255,21,296,19],[255,23,296,21],[256,6,297,4,"logs"],[256,10,297,8],[256,11,297,9,"delete"],[256,17,297,15],[256,18,297,16,"log"],[256,21,297,19],[256,22,297,20],[257,6,298,4,"handleUpdate"],[257,18,298,16],[257,19,298,17],[257,20,298,18],[258,4,299,2],[259,2,300,0],[260,2,302,7],[260,11,302,16,"getIgnorePatterns"],[260,28,302,33,"getIgnorePatterns"],[260,29,302,33],[260,31,302,53],[261,4,303,2],[261,11,303,9,"Array"],[261,16,303,14],[261,17,303,15,"from"],[261,21,303,19],[261,22,303,20,"ignorePatterns"],[261,36,303,34],[261,37,303,35],[262,2,304,0],[263,2,306,7],[263,11,306,16,"addIgnorePatterns"],[263,28,306,33,"addIgnorePatterns"],[263,29,306,34,"patterns"],[263,37,306,59],[263,39,306,67],[264,4,307,2],[264,8,307,8,"existingSize"],[264,20,307,20],[264,23,307,23,"ignorePatterns"],[264,37,307,37],[264,38,307,38,"size"],[264,42,307,42],[265,4,308,2],[266,4,309,2],[267,4,310,2,"patterns"],[267,12,310,10],[267,13,310,11,"forEach"],[267,20,310,18],[267,21,310,20,"pattern"],[267,28,310,42],[267,32,310,47],[268,6,311,4],[268,10,311,8,"pattern"],[268,17,311,15],[268,29,311,27,"RegExp"],[268,35,311,33],[268,37,311,35],[269,8,312,6],[269,13,312,11],[269,17,312,17,"existingPattern"],[269,32,312,32],[269,36,312,36,"ignorePatterns"],[269,50,312,50],[269,52,312,52],[270,10,313,8],[270,14,314,10,"existingPattern"],[270,29,314,25],[270,41,314,37,"RegExp"],[270,47,314,43],[270,51,315,10,"existingPattern"],[270,66,315,25],[270,67,315,26,"toString"],[270,75,315,34],[270,76,315,35],[270,77,315,36],[270,82,315,41,"pattern"],[270,89,315,48],[270,90,315,49,"toString"],[270,98,315,57],[270,99,315,58],[270,100,315,59],[270,102,316,10],[271,12,317,10],[272,10,318,8],[273,8,319,6],[274,8,320,6,"ignorePatterns"],[274,22,320,20],[274,23,320,21,"add"],[274,26,320,24],[274,27,320,25,"pattern"],[274,34,320,32],[274,35,320,33],[275,6,321,4],[276,6,322,4,"ignorePatterns"],[276,20,322,18],[276,21,322,19,"add"],[276,24,322,22],[276,25,322,23,"pattern"],[276,32,322,30],[276,33,322,31],[277,4,323,2],[277,5,323,3],[277,6,323,4],[278,4,324,2],[278,8,324,6,"ignorePatterns"],[278,22,324,20],[278,23,324,21,"size"],[278,27,324,25],[278,32,324,30,"existingSize"],[278,44,324,42],[278,46,324,44],[279,6,325,4],[280,4,326,2],[281,4,327,2],[282,4,328,2],[283,4,329,2],[284,4,330,2],[285,4,331,2,"logs"],[285,8,331,6],[285,11,331,9],[285,15,331,13,"Set"],[285,18,331,16],[285,19,331,17,"Array"],[285,24,331,22],[285,25,331,23,"from"],[285,29,331,27],[285,30,331,28,"logs"],[285,34,331,32],[285,35,331,33],[285,36,331,34,"filter"],[285,42,331,40],[285,43,331,42,"log"],[285,46,331,45],[285,50,331,50],[285,51,331,51,"isMessageIgnored"],[285,67,331,67],[285,68,331,68,"log"],[285,71,331,71],[285,72,331,72,"message"],[285,79,331,79],[285,80,331,80,"content"],[285,87,331,87],[285,88,331,88],[285,89,331,89],[285,90,331,90],[286,4,332,2,"handleUpdate"],[286,16,332,14],[286,17,332,15],[286,18,332,16],[287,2,333,0],[288,2,335,7],[288,11,335,16,"setDisabled"],[288,22,335,27,"setDisabled"],[288,23,335,28,"value"],[288,28,335,42],[288,30,335,50],[289,4,336,2],[289,8,336,6,"value"],[289,13,336,11],[289,18,336,16,"_isDisabled"],[289,29,336,27],[289,31,336,29],[290,6,337,4],[291,4,338,2],[292,4,339,2,"_isDisabled"],[292,15,339,13],[292,18,339,16,"value"],[292,23,339,21],[293,4,340,2,"handleUpdate"],[293,16,340,14],[293,17,340,15],[293,18,340,16],[294,2,341,0],[295,2,343,7],[295,11,343,16,"isDisabled"],[295,21,343,26,"isDisabled"],[295,22,343,26],[295,24,343,38],[296,4,344,2],[296,11,344,9,"_isDisabled"],[296,22,344,20],[297,2,345,0],[298,2,347,7],[298,11,347,16,"observe"],[298,18,347,23,"observe"],[298,19,347,24,"observer"],[298,27,347,42],[298,29,347,58],[299,4,348,2],[299,8,348,8,"subscription"],[299,20,348,20],[299,23,348,23],[300,6,348,25,"observer"],[301,4,348,34],[301,5,348,35],[302,4,349,2,"observers"],[302,13,349,11],[302,14,349,12,"add"],[302,17,349,15],[302,18,349,16,"subscription"],[302,30,349,28],[302,31,349,29],[303,4,351,2,"observer"],[303,12,351,10],[303,13,351,11,"getNextState"],[303,25,351,23],[303,26,351,24],[303,27,351,25],[303,28,351,26],[304,4,353,2],[304,11,353,9],[305,6,354,4,"unsubscribe"],[305,17,354,15,"unsubscribe"],[305,18,354,15],[305,20,354,24],[306,8,355,6,"observers"],[306,17,355,15],[306,18,355,16,"delete"],[306,24,355,22],[306,25,355,23,"subscription"],[306,37,355,35],[306,38,355,36],[307,6,356,4],[308,4,357,2],[308,5,357,3],[309,2,358,0],[310,2,360,0],[310,6,360,6,"emitter"],[310,13,360,13],[310,16,360,16],[310,20,360,20,"NativeEventEmitter"],[310,51,360,38],[310,52,360,39],[311,4,361,2,"addListener"],[311,15,361,13,"addListener"],[311,16,361,13],[311,18,361,16],[311,19,361,17],[311,20,361,18],[312,4,362,2,"removeListeners"],[312,19,362,17,"removeListeners"],[312,20,362,17],[312,22,362,20],[312,23,362,21],[313,2,363,0],[313,3,363,1],[313,4,363,2],[314,2,365,7],[314,11,365,16,"withSubscription"],[314,27,365,32,"withSubscription"],[314,28,365,33,"WrappedComponent"],[314,44,365,67],[314,46,365,94],[315,4,365,94],[315,8,366,8,"LogBoxStateSubscription"],[315,31,366,31],[315,57,366,31,"_React$Component"],[315,73,366,31],[316,6,371,4],[316,15,371,4,"LogBoxStateSubscription"],[316,39,371,16,"props"],[316,44,371,21],[316,46,371,23],[317,8,371,23],[317,12,371,23,"_this"],[317,17,371,23],[318,8,371,23],[318,12,371,23,"_classCallCheck2"],[318,28,371,23],[318,29,371,23,"default"],[318,36,371,23],[318,44,371,23,"LogBoxStateSubscription"],[318,67,371,23],[319,8,372,6,"_this"],[319,13,372,6],[319,16,372,6,"_callSuper"],[319,26,372,6],[319,33,372,6,"LogBoxStateSubscription"],[319,56,372,6],[319,59,372,12,"props"],[319,64,372,17],[320,8,372,19,"_this"],[320,13,372,19],[320,14,391,4,"state"],[320,19,391,9],[320,22,391,12],[321,10,392,6,"logs"],[321,14,392,10],[321,16,392,12],[321,20,392,16,"Set"],[321,23,392,19],[321,24,392,31],[321,25,392,32],[322,10,393,6,"isDisabled"],[322,20,393,16],[322,22,393,18],[322,27,393,23],[323,10,394,6,"hasError"],[323,18,394,14],[323,20,394,16],[323,25,394,21],[324,10,395,6,"selectedLogIndex"],[324,26,395,22],[324,28,395,24],[324,29,395,25],[325,8,396,4],[325,9,396,5],[326,8,396,5,"_this"],[326,13,396,5],[326,14,398,4,"retry"],[326,19,398,9],[326,22,398,12],[326,28,398,18],[327,10,399,6],[327,17,399,13],[327,21,399,17,"Promise"],[327,28,399,24],[327,29,399,32,"resolve"],[327,36,399,39],[327,40,399,44],[328,12,400,8,"_this"],[328,17,400,8],[328,18,400,13,"setState"],[328,26,400,21],[328,27,400,22],[329,14,400,24,"hasError"],[329,22,400,32],[329,24,400,34],[330,12,400,40],[330,13,400,41],[330,15,400,43],[330,21,400,49],[331,14,401,10,"resolve"],[331,21,401,17],[331,22,401,18],[331,23,401,19],[332,12,402,8],[332,13,402,9],[332,14,402,10],[333,10,403,6],[333,11,403,7],[333,12,403,8],[334,8,404,4],[334,9,404,5],[335,8,404,5,"_this"],[335,13,404,5],[335,14,436,4,"_handleDismiss"],[335,28,436,18],[335,31,436,21],[335,37,436,33],[336,10,437,6],[337,10,438,6],[338,10,439,6],[339,10,440,6],[339,14,440,6,"_this$state"],[339,25,440,6],[339,28,440,52,"_this"],[339,33,440,52],[339,34,440,57,"state"],[339,39,440,62],[340,12,440,14,"selectedLogIndex"],[340,28,440,30],[340,31,440,30,"_this$state"],[340,42,440,30],[340,43,440,14,"selectedLogIndex"],[340,59,440,30],[341,12,440,38,"stateLogs"],[341,21,440,47],[341,24,440,47,"_this$state"],[341,35,440,47],[341,36,440,32,"logs"],[341,40,440,36],[342,10,441,6],[342,14,441,12,"logsArray"],[342,23,441,21],[342,26,441,24,"Array"],[342,31,441,29],[342,32,441,30,"from"],[342,36,441,34],[342,37,441,35,"stateLogs"],[342,46,441,44],[342,47,441,45],[343,10,442,6],[343,14,442,10,"selectedLogIndex"],[343,30,442,26],[343,34,442,30],[343,38,442,34],[343,40,442,36],[344,12,443,8],[344,16,443,12,"logsArray"],[344,25,443,21],[344,26,443,22,"length"],[344,32,443,28],[344,35,443,31],[344,36,443,32],[344,40,443,36],[344,41,443,37],[344,43,443,39],[345,14,444,10,"setSelectedLog"],[345,28,444,24],[345,29,444,25],[345,30,444,26],[345,31,444,27],[345,32,444,28],[346,12,445,8],[346,13,445,9],[346,19,445,15],[346,23,445,19,"selectedLogIndex"],[346,39,445,35],[346,43,445,39,"logsArray"],[346,52,445,48],[346,53,445,49,"length"],[346,59,445,55],[346,62,445,58],[346,63,445,59],[346,65,445,61],[347,14,446,10,"setSelectedLog"],[347,28,446,24],[347,29,446,25,"selectedLogIndex"],[347,45,446,41],[347,48,446,44],[347,49,446,45],[347,50,446,46],[348,12,447,8],[349,12,449,8,"dismiss"],[349,19,449,15],[349,20,449,16,"logsArray"],[349,29,449,25],[349,30,449,26,"selectedLogIndex"],[349,46,449,42],[349,47,449,43],[349,48,449,44],[350,10,450,6],[351,8,451,4],[351,9,451,5],[352,8,451,5,"_this"],[352,13,451,5],[352,14,453,4,"_handleMinimize"],[352,29,453,19],[352,32,453,22],[352,38,453,34],[353,10,454,6,"setSelectedLog"],[353,24,454,20],[353,25,454,21],[353,26,454,22],[353,27,454,23],[353,28,454,24],[354,8,455,4],[354,9,455,5],[355,8,455,5,"_this"],[355,13,455,5],[355,14,457,4,"_handleSetSelectedLog"],[355,35,457,25],[355,38,457,29,"index"],[355,43,457,42],[355,47,457,53],[356,10,458,6,"setSelectedLog"],[356,24,458,20],[356,25,458,21,"index"],[356,30,458,26],[356,31,458,27],[357,8,459,4],[357,9,459,5],[358,8,374,6],[358,12,374,10,"process"],[358,19,374,17],[358,20,374,18,"env"],[358,23,374,21],[358,24,374,22,"NODE_ENV"],[358,32,374,30],[358,37,374,35],[358,50,374,48],[358,52,374,50],[359,10,375,8,"emitter"],[359,17,375,15],[359,18,375,16,"addListener"],[359,29,375,27],[359,30,375,28],[359,51,375,49],[359,53,375,51],[359,59,375,57],[360,12,376,10],[360,16,376,14,"_this"],[360,21,376,14],[360,22,376,19,"state"],[360,27,376,24],[360,28,376,25,"hasError"],[360,36,376,33],[360,38,376,35],[361,14,377,12,"_this"],[361,19,377,12],[361,20,377,17,"retry"],[361,25,377,22],[361,26,377,23],[361,27,377,24],[362,12,378,10],[363,10,379,8],[363,11,379,9],[363,12,379,10],[364,8,380,6],[365,8,380,7],[365,15,380,7,"_this"],[365,20,380,7],[366,6,381,4],[367,6,381,5],[367,10,381,5,"_inherits2"],[367,20,381,5],[367,21,381,5,"default"],[367,28,381,5],[367,30,381,5,"LogBoxStateSubscription"],[367,53,381,5],[367,55,381,5,"_React$Component"],[367,71,381,5],[368,6,381,5],[368,17,381,5,"_createClass2"],[368,30,381,5],[368,31,381,5,"default"],[368,38,381,5],[368,40,381,5,"LogBoxStateSubscription"],[368,63,381,5],[369,8,381,5,"key"],[369,11,381,5],[370,8,381,5,"value"],[370,13,381,5],[370,15,383,4],[370,24,383,4,"componentDidCatch"],[370,41,383,21,"componentDidCatch"],[370,42,383,22,"err"],[370,45,383,32],[370,47,383,34,"errorInfo"],[370,56,383,77],[370,58,383,79],[371,10,384,6],[372,0,385,0],[373,10,386,6,"reportLogBoxError"],[373,27,386,23],[373,28,386,24,"err"],[373,31,386,27],[373,33,386,29,"errorInfo"],[373,42,386,38],[373,43,386,39,"componentStack"],[373,57,386,53],[373,58,386,54],[374,8,387,4],[375,6,387,5],[376,8,387,5,"key"],[376,11,387,5],[377,8,387,5,"value"],[377,13,387,5],[377,15,406,4],[377,24,406,4,"render"],[377,30,406,10,"render"],[377,31,406,10],[377,33,406,13],[378,10,407,6],[378,30,408,8],[378,34,408,8,"_jsxDevRuntime"],[378,48,408,8],[378,49,408,8,"jsxDEV"],[378,55,408,8],[378,57,408,9,"_LogContext"],[378,68,408,9],[378,69,408,9,"LogContext"],[378,79,408,19],[378,80,408,20,"Provider"],[378,88,408,28],[379,12,409,10,"value"],[379,17,409,15],[379,19,409,17],[380,14,410,12,"selectedLogIndex"],[380,30,410,28],[380,32,410,30],[380,36,410,34],[380,37,410,35,"state"],[380,42,410,40],[380,43,410,41,"selectedLogIndex"],[380,59,410,57],[381,14,411,12,"isDisabled"],[381,24,411,22],[381,26,411,24],[381,30,411,28],[381,31,411,29,"state"],[381,36,411,34],[381,37,411,35,"isDisabled"],[381,47,411,45],[382,14,412,12,"logs"],[382,18,412,16],[382,20,412,18,"Array"],[382,25,412,23],[382,26,412,24,"from"],[382,30,412,28],[382,31,412,29],[382,35,412,33],[382,36,412,34,"state"],[382,41,412,39],[382,42,412,40,"logs"],[382,46,412,44],[383,12,413,10],[383,13,413,12],[384,12,413,12,"children"],[384,20,413,12],[384,23,414,11],[384,27,414,15],[384,28,414,16,"state"],[384,33,414,21],[384,34,414,22,"hasError"],[384,42,414,30],[384,45,414,33],[384,49,414,37],[384,52,414,40],[384,56,414,44],[384,57,414,45,"props"],[384,62,414,50],[384,63,414,51,"children"],[384,71,414,59],[384,86,415,10],[384,90,415,10,"_jsxDevRuntime"],[384,104,415,10],[384,105,415,10,"jsxDEV"],[384,111,415,10],[384,113,415,11,"WrappedComponent"],[384,129,415,27],[385,14,415,27,"fileName"],[385,22,415,27],[385,24,415,27,"_jsxFileName"],[385,36,415,27],[386,14,415,27,"lineNumber"],[386,24,415,27],[387,14,415,27,"columnNumber"],[387,26,415,27],[388,12,415,27],[388,19,415,29],[388,20,415,30],[389,10,415,30],[390,12,415,30,"fileName"],[390,20,415,30],[390,22,415,30,"_jsxFileName"],[390,34,415,30],[391,12,415,30,"lineNumber"],[391,22,415,30],[392,12,415,30,"columnNumber"],[392,24,415,30],[393,10,415,30],[393,17,416,29],[393,18,416,30],[394,8,418,4],[395,6,418,5],[396,8,418,5,"key"],[396,11,418,5],[397,8,418,5,"value"],[397,13,418,5],[397,15,420,4],[397,24,420,4,"componentDidMount"],[397,41,420,21,"componentDidMount"],[397,42,420,21],[397,44,420,30],[398,10,421,6],[398,14,421,10],[398,15,421,11,"_subscription"],[398,28,421,24],[398,31,421,27,"observe"],[398,38,421,34],[398,39,421,36,"data"],[398,43,421,40],[398,47,421,45],[399,12,422,8],[400,12,423,8],[400,16,423,12,"data"],[400,20,423,16],[400,21,423,17,"selectedLogIndex"],[400,37,423,33],[400,42,423,38],[400,43,423,39],[400,44,423,40],[400,46,423,42],[401,12,424,8,"React"],[401,17,424,13],[401,18,424,14,"startTransition"],[401,33,424,29],[401,34,424,30],[401,40,424,36],[402,14,425,10],[402,18,425,14],[402,19,425,15,"setState"],[402,27,425,23],[402,28,425,24,"data"],[402,32,425,28],[402,33,425,29],[403,12,426,8],[403,13,426,9],[403,14,426,10],[404,10,427,6],[404,11,427,7],[404,12,427,8],[405,8,428,4],[406,6,428,5],[407,8,428,5,"key"],[407,11,428,5],[408,8,428,5,"value"],[408,13,428,5],[408,15,430,4],[408,24,430,4,"componentWillUnmount"],[408,44,430,24,"componentWillUnmount"],[408,45,430,24],[408,47,430,33],[409,10,431,6],[409,14,431,10],[409,18,431,14],[409,19,431,15,"_subscription"],[409,32,431,28],[409,36,431,32],[409,40,431,36],[409,42,431,38],[410,12,432,8],[410,16,432,12],[410,17,432,13,"_subscription"],[410,30,432,26],[410,31,432,27,"unsubscribe"],[410,42,432,38],[410,43,432,39],[410,44,432,40],[411,10,433,6],[412,8,434,4],[413,6,434,5],[414,8,434,5,"key"],[414,11,434,5],[415,8,434,5,"value"],[415,13,434,5],[415,15,367,4],[415,24,367,11,"getDerivedStateFromError"],[415,48,367,35,"getDerivedStateFromError"],[415,49,367,35],[415,51,367,38],[416,10,368,6],[416,17,368,13],[417,12,368,15,"hasError"],[417,20,368,23],[417,22,368,25],[418,10,368,30],[418,11,368,31],[419,8,369,4],[420,6,369,5],[421,4,369,5],[421,6,366,40,"React"],[421,11,366,45],[421,12,366,46,"Component"],[421,21,366,55],[421,24,462,2],[422,4,463,2],[422,11,463,9,"LogBoxStateSubscription"],[422,34,463,32],[423,2,464,0],[424,0,464,1],[424,3]],"functionMap":{"names":["<global>","getNextState","reportLogBoxError","reportUnexpectedLogBoxError","isLogBoxErrorMessage","isMessageIgnored","setImmediateShim","handleUpdate","setImmediateShim$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_1","addLog","setImmediate$argument_0","addException","symbolicateLogNow","log.symbolicate$argument_1","retrySymbolicateLogNow","log.retrySymbolicate$argument_1","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","NativeEventEmitter$argument_0.addListener","NativeEventEmitter$argument_0.removeListeners","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#constructor","emitter.addListener$argument_1","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#retry","Promise$argument_0","setState$argument_1","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","React.startTransition$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;AC2E;CDM;OEE;CFO;OGE;CHG;OIE;CJE;OKE;CLU;AME;CNK;AOE;qCCE;wBCG,qCD;KDC;CPE;AUE;6CCuB;KDQ;yCEE;KFI;gCGK;KHQ;CVQ;OcE;eCK;GDiB;CdC;OgBE;eDG;GCM;ChBC;OiBE;wBCC;GDE;CjBC;OmBE;6BCC;GDE;CnBC;OqBE;CrBE;OsBE;CtBK;OuBE;eXiB;KWM;CvBE;OwBE;0CCC,6BD;CxBM;O0BE;0CDC,uDC;C1BK;O2BE;C3BK;O4BE;C5BE;O6BE;mBCI;GDa;yCJQ,+CI;C7BE;O+BE;C/BM;OgCE;ChCE;OiCE;ICO;KDE;CjCE;EmCG,gBnC;EoCC,oBpC;OqCG;ECC;ICC;KDE;IEE;mDCI;SDI;KFE;IIE;KJI;YKW;+BCC;2CCC;SDE;ODC;KLC;IQE;KRY;ISE;mCCC;8BCG;SDE;ODC;KTC;IYE;KZI;qBaE;Kbe;sBcE;KdE;4BeE;KfE;GDC;CrCI"}},"type":"js/module"}]}