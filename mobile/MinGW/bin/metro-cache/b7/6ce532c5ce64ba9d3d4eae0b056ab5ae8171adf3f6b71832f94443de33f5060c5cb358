{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":251,"column":44,"index":8618}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":251,"column":44,"index":8618}}],"key":"AkVSdHsy9g0oRbtVtdfz2QwrA14="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-is","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":46,"index":93}}],"key":"Kh8377WtECxkHj9j3Lmfo9R8et4="}},{"name":"./useRoute.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":94},"end":{"line":5,"column":41,"index":135}}],"key":"WK0dvcC4RSr6FoCxOk1pJZKkMVQ="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":30,"column":0,"index":808},"end":{"line":30,"column":48,"index":856}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _react = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var React = _react;\n  var _reactIs = require(_dependencyMap[3], \"react-is\");\n  var _useRoute = require(_dependencyMap[4], \"./useRoute.js\");\n  var _jsxRuntime = require(_dependencyMap[5], \"react/jsx-runtime\");\n  const _excluded = [\"screen\", \"if\"],\n    _excluded2 = [\"screens\", \"groups\"],\n    _excluded3 = [\"if\"];\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n  /**\n   * Infer the param list from the static navigation config.\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  const MemoizedScreen = /*#__PURE__*/React.memo(({\n    component\n  }) => {\n    const route = (0, _useRoute.useRoute)();\n    const children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  const getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(([name, item]) => {\n      let component;\n      let props = {};\n      let useIf;\n      let isNavigator = false;\n      if ('screen' in item) {\n        const {\n            screen,\n            if: _if\n          } = item,\n          rest = (0, _objectWithoutPropertiesLoose2.default)(item, _excluded);\n        useIf = _if;\n        props = rest;\n        if ((0, _reactIs.isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _reactIs.isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      const element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        const shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, Object.assign({\n          name: name\n        }, props, {\n          children: () => element\n        }), name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    const {\n      Navigator,\n      Group,\n      Screen,\n      config\n    } = tree;\n    const {\n        screens,\n        groups\n      } = config,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(config, _excluded2);\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    const items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (const key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(([key, _ref]) => {\n          let {\n              if: useIf\n            } = _ref,\n            group = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded3);\n          const groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            const children = groupItems.map(item => item());\n            const shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _react.createElement)(Group, Object.assign({\n              navigationKey: key\n            }, group, {\n              key: key\n            }), children);\n          };\n        }));\n      }\n    }\n    const NavigatorComponent = () => {\n      const children = items.map(item => item());\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, Object.assign({}, rest, {\n        children: children\n      }));\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    let initialScreenConfig;\n    const createPathConfigForTree = (t, o, skipInitialDetection) => {\n      const createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(([a], [b]) => {\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(([key, item]) => {\n          const screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          let screens;\n          const skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(([, screen]) => Object.keys(screen).length > 0));\n      };\n      const screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (const key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(([, group]) => {\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    const screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":259,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"createComponentForStaticNavigation"],[8,44,1,13],[8,47,1,13,"createComponentForStaticNavigation"],[8,81,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"createPathConfigForStaticNavigation"],[9,45,1,13],[9,48,1,13,"createPathConfigForStaticNavigation"],[9,83,1,13],[10,2,1,13],[10,6,1,13,"_objectWithoutPropertiesLoose2"],[10,36,1,13],[10,39,1,13,"_interopRequireDefault"],[10,61,1,13],[10,62,1,13,"require"],[10,69,1,13],[10,70,1,13,"_dependencyMap"],[10,84,1,13],[11,2,3,0],[11,6,3,0,"_react"],[11,12,3,0],[11,15,3,0,"_interopRequireWildcard"],[11,38,3,0],[11,39,3,0,"require"],[11,46,3,0],[11,47,3,0,"_dependencyMap"],[11,61,3,0],[12,2,3,31],[12,6,3,31,"React"],[12,11,3,31],[12,14,3,31,"_react"],[12,20,3,31],[13,2,4,0],[13,6,4,0,"_reactIs"],[13,14,4,0],[13,17,4,0,"require"],[13,24,4,0],[13,25,4,0,"_dependencyMap"],[13,39,4,0],[14,2,5,0],[14,6,5,0,"_useRoute"],[14,15,5,0],[14,18,5,0,"require"],[14,25,5,0],[14,26,5,0,"_dependencyMap"],[14,40,5,0],[15,2,30,0],[15,6,30,0,"_jsxRuntime"],[15,17,30,0],[15,20,30,0,"require"],[15,27,30,0],[15,28,30,0,"_dependencyMap"],[15,42,30,0],[16,2,30,48],[16,8,30,48,"_excluded"],[16,17,30,48],[17,4,30,48,"_excluded2"],[17,14,30,48],[18,4,30,48,"_excluded3"],[18,14,30,48],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,2,12,0],[24,0,13,0],[25,0,14,0],[26,0,15,0],[27,2,17,0],[28,0,18,0],[29,0,19,0],[30,0,20,0],[31,2,22,0],[32,0,23,0],[33,0,24,0],[34,0,25,0],[35,2,27,0],[36,0,28,0],[37,0,29,0],[38,2,27,0],[38,11,27,0,"_getRequireWildcardCache"],[38,36,27,0,"e"],[38,37,27,0],[38,66,27,0,"WeakMap"],[38,73,27,0],[38,92,27,0,"r"],[38,93,27,0],[38,100,27,0,"WeakMap"],[38,107,27,0],[38,111,27,0,"t"],[38,112,27,0],[38,119,27,0,"WeakMap"],[38,126,27,0],[38,138,27,0,"_getRequireWildcardCache"],[38,162,27,0],[38,174,27,0,"_getRequireWildcardCache"],[38,175,27,0,"e"],[38,176,27,0],[38,187,27,0,"e"],[38,188,27,0],[38,191,27,0,"t"],[38,192,27,0],[38,195,27,0,"r"],[38,196,27,0],[38,201,27,0,"e"],[38,202,27,0],[39,2,27,0],[39,11,27,0,"_interopRequireWildcard"],[39,35,27,0,"e"],[39,36,27,0],[39,38,27,0,"r"],[39,39,27,0],[39,48,27,0,"r"],[39,49,27,0],[39,53,27,0,"e"],[39,54,27,0],[39,58,27,0,"e"],[39,59,27,0],[39,60,27,0,"__esModule"],[39,70,27,0],[39,79,27,0,"e"],[39,80,27,0],[39,95,27,0,"e"],[39,96,27,0],[39,119,27,0,"e"],[39,120,27,0],[39,145,27,0,"e"],[39,146,27,0],[39,157,27,0,"default"],[39,164,27,0],[39,166,27,0,"e"],[39,167,27,0],[39,175,27,0,"t"],[39,176,27,0],[39,179,27,0,"_getRequireWildcardCache"],[39,203,27,0],[39,204,27,0,"r"],[39,205,27,0],[39,212,27,0,"t"],[39,213,27,0],[39,217,27,0,"t"],[39,218,27,0],[39,219,27,0,"has"],[39,222,27,0],[39,223,27,0,"e"],[39,224,27,0],[39,234,27,0,"t"],[39,235,27,0],[39,236,27,0,"get"],[39,239,27,0],[39,240,27,0,"e"],[39,241,27,0],[39,248,27,0,"n"],[39,249,27,0],[39,254,27,0,"__proto__"],[39,263,27,0],[39,273,27,0,"a"],[39,274,27,0],[39,277,27,0,"Object"],[39,283,27,0],[39,284,27,0,"defineProperty"],[39,298,27,0],[39,302,27,0,"Object"],[39,308,27,0],[39,309,27,0,"getOwnPropertyDescriptor"],[39,333,27,0],[39,344,27,0,"u"],[39,345,27,0],[39,349,27,0,"e"],[39,350,27,0],[39,370,27,0,"u"],[39,371,27,0],[39,378,27,0,"hasOwnProperty"],[39,392,27,0],[39,393,27,0,"call"],[39,397,27,0],[39,398,27,0,"e"],[39,399,27,0],[39,401,27,0,"u"],[39,402,27,0],[39,411,27,0,"i"],[39,412,27,0],[39,415,27,0,"a"],[39,416,27,0],[39,419,27,0,"Object"],[39,425,27,0],[39,426,27,0,"getOwnPropertyDescriptor"],[39,450,27,0],[39,451,27,0,"e"],[39,452,27,0],[39,454,27,0,"u"],[39,455,27,0],[39,465,27,0,"i"],[39,466,27,0],[39,471,27,0,"i"],[39,472,27,0],[39,473,27,0,"get"],[39,476,27,0],[39,480,27,0,"i"],[39,481,27,0],[39,482,27,0,"set"],[39,485,27,0],[39,489,27,0,"Object"],[39,495,27,0],[39,496,27,0,"defineProperty"],[39,510,27,0],[39,511,27,0,"n"],[39,512,27,0],[39,514,27,0,"u"],[39,515,27,0],[39,517,27,0,"i"],[39,518,27,0],[39,522,27,0,"n"],[39,523,27,0],[39,524,27,0,"u"],[39,525,27,0],[39,529,27,0,"e"],[39,530,27,0],[39,531,27,0,"u"],[39,532,27,0],[39,544,27,0,"n"],[39,545,27,0],[39,546,27,0,"default"],[39,553,27,0],[39,556,27,0,"e"],[39,557,27,0],[39,559,27,0,"t"],[39,560,27,0],[39,564,27,0,"t"],[39,565,27,0],[39,566,27,0,"set"],[39,569,27,0],[39,570,27,0,"e"],[39,571,27,0],[39,573,27,0,"n"],[39,574,27,0],[39,577,27,0,"n"],[39,578,27,0],[40,2,32,0],[40,8,32,6,"MemoizedScreen"],[40,22,32,20],[40,25,32,23],[40,38,32,36,"React"],[40,43,32,41],[40,44,32,42,"memo"],[40,48,32,46],[40,49,32,47],[40,50,32,48],[41,4,33,2,"component"],[42,2,34,0],[42,3,34,1],[42,8,34,6],[43,4,35,2],[43,10,35,8,"route"],[43,15,35,13],[43,18,35,16],[43,22,35,16,"useRoute"],[43,40,35,24],[43,42,35,25],[43,43,35,26],[44,4,36,2],[44,10,36,8,"children"],[44,18,36,16],[44,21,36,19],[44,34,36,32,"React"],[44,39,36,37],[44,40,36,38,"createElement"],[44,53,36,51],[44,54,36,52,"component"],[44,63,36,61],[44,65,36,63],[45,6,37,4,"route"],[46,4,38,2],[46,5,38,3],[46,6,38,4],[47,4,39,2],[47,11,39,9,"children"],[47,19,39,17],[48,2,40,0],[48,3,40,1],[48,4,40,2],[49,2,41,0,"MemoizedScreen"],[49,16,41,14],[49,17,41,15,"displayName"],[49,28,41,26],[49,31,41,29],[49,45,41,43],[50,2,42,0],[50,8,42,6,"getItemsFromScreens"],[50,27,42,25],[50,30,42,28,"getItemsFromScreens"],[50,31,42,29,"Screen"],[50,37,42,35],[50,39,42,37,"screens"],[50,46,42,44],[50,51,42,49],[51,4,43,2],[51,11,43,9,"Object"],[51,17,43,15],[51,18,43,16,"entries"],[51,25,43,23],[51,26,43,24,"screens"],[51,33,43,31],[51,34,43,32],[51,35,43,33,"map"],[51,38,43,36],[51,39,43,37],[51,40,43,38],[51,41,43,39,"name"],[51,45,43,43],[51,47,43,45,"item"],[51,51,43,49],[51,52,43,50],[51,57,43,55],[52,6,44,4],[52,10,44,8,"component"],[52,19,44,17],[53,6,45,4],[53,10,45,8,"props"],[53,15,45,13],[53,18,45,16],[53,19,45,17],[53,20,45,18],[54,6,46,4],[54,10,46,8,"useIf"],[54,15,46,13],[55,6,47,4],[55,10,47,8,"isNavigator"],[55,21,47,19],[55,24,47,22],[55,29,47,27],[56,6,48,4],[56,10,48,8],[56,18,48,16],[56,22,48,20,"item"],[56,26,48,24],[56,28,48,26],[57,8,49,6],[57,14,49,12],[58,12,50,8,"screen"],[58,18,50,14],[59,12,51,8,"if"],[59,14,51,10],[59,16,51,12,"_if"],[60,10,53,6],[60,11,53,7],[60,14,53,10,"item"],[60,18,53,14],[61,10,52,11,"rest"],[61,14,52,15],[61,21,52,15,"_objectWithoutPropertiesLoose2"],[61,51,52,15],[61,52,52,15,"default"],[61,59,52,15],[61,61,53,10,"item"],[61,65,53,14],[61,67,53,14,"_excluded"],[61,76,53,14],[62,8,54,6,"useIf"],[62,13,54,11],[62,16,54,14,"_if"],[62,19,54,17],[63,8,55,6,"props"],[63,13,55,11],[63,16,55,14,"rest"],[63,20,55,18],[64,8,56,6],[64,12,56,10],[64,16,56,10,"isValidElementType"],[64,43,56,28],[64,45,56,29,"screen"],[64,51,56,35],[64,52,56,36],[64,54,56,38],[65,10,57,8,"component"],[65,19,57,17],[65,22,57,20,"screen"],[65,28,57,26],[66,8,58,6],[66,9,58,7],[66,15,58,13],[66,19,58,17],[66,27,58,25],[66,31,58,29,"screen"],[66,37,58,35],[66,39,58,37],[67,10,59,8,"isNavigator"],[67,21,59,19],[67,24,59,22],[67,28,59,26],[68,10,60,8,"component"],[68,19,60,17],[68,22,60,20,"createComponentForStaticNavigation"],[68,56,60,54],[68,57,60,55,"screen"],[68,63,60,61],[68,65,60,63],[68,68,60,66,"name"],[68,72,60,70],[68,83,60,81],[68,84,60,82],[69,8,61,6],[70,6,62,4],[70,7,62,5],[70,13,62,11],[70,17,62,15],[70,21,62,15,"isValidElementType"],[70,48,62,33],[70,50,62,34,"item"],[70,54,62,38],[70,55,62,39],[70,57,62,41],[71,8,63,6,"component"],[71,17,63,15],[71,20,63,18,"item"],[71,24,63,22],[72,6,64,4],[72,7,64,5],[72,13,64,11],[72,17,64,15],[72,25,64,23],[72,29,64,27,"item"],[72,33,64,31],[72,35,64,33],[73,8,65,6,"isNavigator"],[73,19,65,17],[73,22,65,20],[73,26,65,24],[74,8,66,6,"component"],[74,17,66,15],[74,20,66,18,"createComponentForStaticNavigation"],[74,54,66,52],[74,55,66,53,"item"],[74,59,66,57],[74,61,66,59],[74,64,66,62,"name"],[74,68,66,66],[74,79,66,77],[74,80,66,78],[75,6,67,4],[76,6,68,4],[76,10,68,8,"component"],[76,19,68,17],[76,23,68,21],[76,27,68,25],[76,29,68,27],[77,8,69,6],[77,14,69,12],[77,18,69,16,"Error"],[77,23,69,21],[77,24,69,22],[77,77,69,75,"name"],[77,81,69,79],[77,262,69,260],[77,263,69,261],[78,6,70,4],[79,6,71,4],[79,12,71,10,"element"],[79,19,71,17],[79,22,71,20,"isNavigator"],[79,33,71,31],[79,37,71,35],[79,50,71,48,"React"],[79,55,71,53],[79,56,71,54,"createElement"],[79,69,71,67],[79,70,71,68,"component"],[79,79,71,77],[79,81,71,79],[79,82,71,80],[79,83,71,81],[79,84,71,82],[79,88,71,86],[79,101,71,99],[79,105,71,99,"_jsx"],[79,120,71,103],[79,122,71,104,"MemoizedScreen"],[79,136,71,118],[79,138,71,120],[80,8,72,6,"component"],[80,17,72,15],[80,19,72,17,"component"],[81,6,73,4],[81,7,73,5],[81,8,73,6],[82,6,74,4],[82,13,74,11],[82,19,74,17],[83,8,75,6],[83,14,75,12,"shouldRender"],[83,26,75,24],[83,29,75,27,"useIf"],[83,34,75,32],[83,38,75,36],[83,42,75,40],[83,46,75,44,"useIf"],[83,51,75,49],[83,52,75,50],[83,53,75,51],[84,8,76,6],[84,12,76,10],[84,13,76,11,"shouldRender"],[84,25,76,23],[84,27,76,25],[85,10,77,8],[85,17,77,15],[85,21,77,19],[86,8,78,6],[87,8,79,6],[87,15,79,13],[87,28,79,26],[87,32,79,26,"_jsx"],[87,47,79,30],[87,49,79,31,"Screen"],[87,55,79,37],[87,57,79,37,"Object"],[87,63,79,37],[87,64,79,37,"assign"],[87,70,79,37],[88,10,80,8,"name"],[88,14,80,12],[88,16,80,14,"name"],[89,8,80,18],[89,11,81,11,"props"],[89,16,81,16],[90,10,82,8,"children"],[90,18,82,16],[90,20,82,18,"children"],[90,21,82,18],[90,26,82,24,"element"],[91,8,82,31],[91,12,83,9,"name"],[91,16,83,13],[91,17,83,14],[92,6,84,4],[92,7,84,5],[93,4,85,2],[93,5,85,3],[93,6,85,4],[94,2,86,0],[94,3,86,1],[96,2,88,0],[97,0,89,0],[98,0,90,0],[99,0,91,0],[100,0,92,0],[101,0,93,0],[102,0,94,0],[103,2,95,7],[103,11,95,16,"createComponentForStaticNavigation"],[103,45,95,50,"createComponentForStaticNavigation"],[103,46,95,51,"tree"],[103,50,95,55],[103,52,95,57,"displayName"],[103,63,95,68],[103,65,95,70],[104,4,96,2],[104,10,96,8],[105,6,97,4,"Navigator"],[105,15,97,13],[106,6,98,4,"Group"],[106,11,98,9],[107,6,99,4,"Screen"],[107,12,99,10],[108,6,100,4,"config"],[109,4,101,2],[109,5,101,3],[109,8,101,6,"tree"],[109,12,101,10],[110,4,102,2],[110,10,102,8],[111,8,103,4,"screens"],[111,15,103,11],[112,8,104,4,"groups"],[113,6,106,2],[113,7,106,3],[113,10,106,6,"config"],[113,16,106,12],[114,6,105,7,"rest"],[114,10,105,11],[114,17,105,11,"_objectWithoutPropertiesLoose2"],[114,47,105,11],[114,48,105,11,"default"],[114,55,105,11],[114,57,106,6,"config"],[114,63,106,12],[114,65,106,12,"_excluded2"],[114,75,106,12],[115,4,107,2],[115,8,107,6,"screens"],[115,15,107,13],[115,19,107,17],[115,23,107,21],[115,27,107,25,"groups"],[115,33,107,31],[115,37,107,35],[115,41,107,39],[115,43,107,41],[116,6,108,4],[116,12,108,10],[116,16,108,14,"Error"],[116,21,108,19],[116,22,108,20],[116,153,108,151],[116,154,108,152],[117,4,109,2],[118,4,110,2],[118,10,110,8,"items"],[118,15,110,13],[118,18,110,16],[118,20,110,18],[120,4,112,2],[121,4,113,2],[122,4,114,2],[122,9,114,7],[122,15,114,13,"key"],[122,18,114,16],[122,22,114,20,"config"],[122,28,114,26],[122,30,114,28],[123,6,115,4],[123,10,115,8,"key"],[123,13,115,11],[123,18,115,16],[123,27,115,25],[123,31,115,29,"screens"],[123,38,115,36],[123,40,115,38],[124,8,116,6,"items"],[124,13,116,11],[124,14,116,12,"push"],[124,18,116,16],[124,19,116,17],[124,22,116,20,"getItemsFromScreens"],[124,41,116,39],[124,42,116,40,"Screen"],[124,48,116,46],[124,50,116,48,"screens"],[124,57,116,55],[124,58,116,56],[124,59,116,57],[125,6,117,4],[126,6,118,4],[126,10,118,8,"key"],[126,13,118,11],[126,18,118,16],[126,26,118,24],[126,30,118,28,"groups"],[126,36,118,34],[126,38,118,36],[127,8,119,6,"items"],[127,13,119,11],[127,14,119,12,"push"],[127,18,119,16],[127,19,119,17],[127,22,119,20,"Object"],[127,28,119,26],[127,29,119,27,"entries"],[127,36,119,34],[127,37,119,35,"groups"],[127,43,119,41],[127,44,119,42],[127,45,119,43,"map"],[127,48,119,46],[127,49,119,47],[127,50,119,48],[127,51,119,49,"key"],[127,54,119,52],[127,56,119,52,"_ref"],[127,60,119,52],[127,61,122,8],[127,66,122,13],[128,10,122,13],[128,14,119,54],[129,14,120,8,"if"],[129,16,120,10],[129,18,120,12,"useIf"],[130,12,122,6],[130,13,122,7],[130,16,122,7,"_ref"],[130,20,122,7],[131,12,121,11,"group"],[131,17,121,16],[131,24,121,16,"_objectWithoutPropertiesLoose2"],[131,54,121,16],[131,55,121,16,"default"],[131,62,121,16],[131,64,121,16,"_ref"],[131,68,121,16],[131,70,121,16,"_excluded3"],[131,80,121,16],[132,10,123,8],[132,16,123,14,"groupItems"],[132,26,123,24],[132,29,123,27,"getItemsFromScreens"],[132,48,123,46],[132,49,123,47,"Screen"],[132,55,123,53],[132,57,123,55,"group"],[132,62,123,60],[132,63,123,61,"screens"],[132,70,123,68],[132,71,123,69],[133,10,124,8],[133,17,124,15],[133,23,124,21],[134,12,125,10],[135,12,126,10],[135,18,126,16,"children"],[135,26,126,24],[135,29,126,27,"groupItems"],[135,39,126,37],[135,40,126,38,"map"],[135,43,126,41],[135,44,126,42,"item"],[135,48,126,46],[135,52,126,50,"item"],[135,56,126,54],[135,57,126,55],[135,58,126,56],[135,59,126,57],[136,12,127,10],[136,18,127,16,"shouldRender"],[136,30,127,28],[136,33,127,31,"useIf"],[136,38,127,36],[136,42,127,40],[136,46,127,44],[136,50,127,48,"useIf"],[136,55,127,53],[136,56,127,54],[136,57,127,55],[137,12,128,10],[137,16,128,14],[137,17,128,15,"shouldRender"],[137,29,128,27],[137,31,128,29],[138,14,129,12],[138,21,129,19],[138,25,129,23],[139,12,130,10],[140,12,131,10],[140,19,131,17],[140,32,131,30],[140,36,131,30,"_createElement"],[140,56,131,44],[140,58,131,45,"Group"],[140,63,131,50],[140,65,131,50,"Object"],[140,71,131,50],[140,72,131,50,"assign"],[140,78,131,50],[141,14,132,12,"navigationKey"],[141,27,132,25],[141,29,132,27,"key"],[142,12,132,30],[142,15,133,15,"group"],[142,20,133,20],[143,14,134,12,"key"],[143,17,134,15],[143,19,134,17,"key"],[144,12,134,20],[144,16,135,13,"children"],[144,24,135,21],[144,25,135,22],[145,10,136,8],[145,11,136,9],[146,8,137,6],[146,9,137,7],[146,10,137,8],[146,11,137,9],[147,6,138,4],[148,4,139,2],[149,4,140,2],[149,10,140,8,"NavigatorComponent"],[149,28,140,26],[149,31,140,29,"NavigatorComponent"],[149,32,140,29],[149,37,140,35],[150,6,141,4],[150,12,141,10,"children"],[150,20,141,18],[150,23,141,21,"items"],[150,28,141,26],[150,29,141,27,"map"],[150,32,141,30],[150,33,141,31,"item"],[150,37,141,35],[150,41,141,39,"item"],[150,45,141,43],[150,46,141,44],[150,47,141,45],[150,48,141,46],[151,6,142,4],[151,13,142,11],[151,26,142,24],[151,30,142,24,"_jsx"],[151,45,142,28],[151,47,142,29,"Navigator"],[151,56,142,38],[151,58,142,38,"Object"],[151,64,142,38],[151,65,142,38,"assign"],[151,71,142,38],[151,76,143,9,"rest"],[151,80,143,13],[152,8,144,6,"children"],[152,16,144,14],[152,18,144,16,"children"],[153,6,144,24],[153,8,145,5],[153,9,145,6],[154,4,146,2],[154,5,146,3],[155,4,147,2,"NavigatorComponent"],[155,22,147,20],[155,23,147,21,"displayName"],[155,34,147,32],[155,37,147,35,"displayName"],[155,48,147,46],[156,4,148,2],[156,11,148,9,"NavigatorComponent"],[156,29,148,27],[157,2,149,0],[158,2,150,0],[159,0,151,0],[160,0,152,0],[161,0,153,0],[162,0,154,0],[163,0,155,0],[164,0,156,0],[165,0,157,0],[166,0,158,0],[167,0,159,0],[168,0,160,0],[169,0,161,0],[170,0,162,0],[171,0,163,0],[172,0,164,0],[173,0,165,0],[174,0,166,0],[175,0,167,0],[176,0,168,0],[177,2,169,7],[177,11,169,16,"createPathConfigForStaticNavigation"],[177,46,169,51,"createPathConfigForStaticNavigation"],[177,47,169,52,"tree"],[177,51,169,56],[177,53,169,58,"options"],[177,60,169,65],[177,62,169,67,"auto"],[177,66,169,71],[177,68,169,73],[178,4,170,2],[178,8,170,6,"initialScreenConfig"],[178,27,170,25],[179,4,171,2],[179,10,171,8,"createPathConfigForTree"],[179,33,171,31],[179,36,171,34,"createPathConfigForTree"],[179,37,171,35,"t"],[179,38,171,36],[179,40,171,38,"o"],[179,41,171,39],[179,43,171,41,"skipInitialDetection"],[179,63,171,61],[179,68,171,66],[180,6,172,4],[180,12,172,10,"createPathConfigForScreens"],[180,38,172,36],[180,41,172,39,"createPathConfigForScreens"],[180,42,172,40,"screens"],[180,49,172,47],[180,51,172,49,"initialRouteName"],[180,67,172,65],[180,72,172,70],[181,8,173,6],[181,15,173,13,"Object"],[181,21,173,19],[181,22,173,20,"fromEntries"],[181,33,173,31],[181,34,173,32,"Object"],[181,40,173,38],[181,41,173,39,"entries"],[181,48,173,46],[181,49,173,47,"screens"],[181,56,173,54],[182,8,174,6],[183,8,175,6],[184,8,175,6],[184,9,176,7,"sort"],[184,13,176,11],[184,14,176,12],[184,15,176,13],[184,16,176,14,"a"],[184,17,176,15],[184,18,176,16],[184,20,176,18],[184,21,176,19,"b"],[184,22,176,20],[184,23,176,21],[184,28,176,26],[185,10,177,8],[185,14,177,12,"a"],[185,15,177,13],[185,20,177,18,"initialRouteName"],[185,36,177,34],[185,38,177,36],[186,12,178,10],[186,19,178,17],[186,20,178,18],[186,21,178,19],[187,10,179,8],[188,10,180,8],[188,14,180,12,"b"],[188,15,180,13],[188,20,180,18,"initialRouteName"],[188,36,180,34],[188,38,180,36],[189,12,181,10],[189,19,181,17],[189,20,181,18],[190,10,182,8],[191,10,183,8],[191,17,183,15],[191,18,183,16],[192,8,184,6],[192,9,184,7],[192,10,184,8],[192,11,184,9,"map"],[192,14,184,12],[192,15,184,13],[192,16,184,14],[192,17,184,15,"key"],[192,20,184,18],[192,22,184,20,"item"],[192,26,184,24],[192,27,184,25],[192,32,184,30],[193,10,185,8],[193,16,185,14,"screenConfig"],[193,28,185,26],[193,31,185,29],[193,32,185,30],[193,33,185,31],[194,10,186,8],[194,14,186,12],[194,23,186,21],[194,27,186,25,"item"],[194,31,186,29],[194,33,186,31],[195,12,187,10],[195,16,187,14],[195,23,187,21,"item"],[195,27,187,25],[195,28,187,26,"linking"],[195,35,187,33],[195,40,187,38],[195,48,187,46],[195,50,187,48],[196,14,188,12,"screenConfig"],[196,26,188,24],[196,27,188,25,"path"],[196,31,188,29],[196,34,188,32,"item"],[196,38,188,36],[196,39,188,37,"linking"],[196,46,188,44],[197,12,189,10],[197,13,189,11],[197,19,189,17],[198,14,190,12,"Object"],[198,20,190,18],[198,21,190,19,"assign"],[198,27,190,25],[198,28,190,26,"screenConfig"],[198,40,190,38],[198,42,190,40,"item"],[198,46,190,44],[198,47,190,45,"linking"],[198,54,190,52],[198,55,190,53],[199,12,191,10],[200,12,192,10],[200,16,192,14],[200,23,192,21,"screenConfig"],[200,35,192,33],[200,36,192,34,"path"],[200,40,192,38],[200,45,192,43],[200,53,192,51],[200,55,192,53],[201,14,193,12,"screenConfig"],[201,26,193,24],[201,27,193,25,"path"],[201,31,193,29],[201,34,193,32,"screenConfig"],[201,46,193,44],[201,47,193,45,"path"],[201,51,193,49],[201,52,193,50,"replace"],[201,59,193,57],[201,60,193,58],[201,65,193,63],[201,67,193,65],[201,69,193,67],[201,70,193,68],[201,71,193,69],[202,14,193,69],[202,15,194,13,"replace"],[202,22,194,20],[202,23,194,21],[202,28,194,26],[202,30,194,28],[202,32,194,30],[202,33,194,31],[202,34,194,32],[202,35,194,33],[203,12,195,10],[204,10,196,8],[205,10,197,8],[205,14,197,12,"screens"],[205,21,197,19],[206,10,198,8],[206,16,198,14,"skipInitialDetectionInChild"],[206,43,198,41],[206,46,198,44,"skipInitialDetection"],[206,66,198,64],[206,70,198,68,"screenConfig"],[206,82,198,80],[206,83,198,81,"path"],[206,87,198,85],[206,91,198,89],[206,95,198,93],[206,99,198,97,"screenConfig"],[206,111,198,109],[206,112,198,110,"path"],[206,116,198,114],[206,121,198,119],[206,123,198,121],[207,10,199,8],[207,14,199,12],[207,22,199,20],[207,26,199,24,"item"],[207,30,199,28],[207,32,199,30],[208,12,200,10,"screens"],[208,19,200,17],[208,22,200,20,"createPathConfigForTree"],[208,45,200,43],[208,46,200,44,"item"],[208,50,200,48],[208,52,200,50,"undefined"],[208,61,200,59],[208,63,200,61,"skipInitialDetectionInChild"],[208,90,200,88],[208,91,200,89],[209,10,201,8],[209,11,201,9],[209,17,201,15],[209,21,201,19],[209,29,201,27],[209,33,201,31,"item"],[209,37,201,35],[209,41,201,39],[209,49,201,47],[209,53,201,51,"item"],[209,57,201,55],[209,58,201,56,"screen"],[209,64,201,62],[209,69,201,67,"item"],[209,73,201,71],[209,74,201,72,"screen"],[209,80,201,78],[209,81,201,79,"config"],[209,87,201,85],[209,88,201,86,"screens"],[209,95,201,93],[209,99,201,97,"item"],[209,103,201,101],[209,104,201,102,"screen"],[209,110,201,108],[209,111,201,109,"config"],[209,117,201,115],[209,118,201,116,"groups"],[209,124,201,122],[209,125,201,123],[209,127,201,125],[210,12,202,10,"screens"],[210,19,202,17],[210,22,202,20,"createPathConfigForTree"],[210,45,202,43],[210,46,202,44,"item"],[210,50,202,48],[210,51,202,49,"screen"],[210,57,202,55],[210,59,202,57,"undefined"],[210,68,202,66],[210,70,202,68,"skipInitialDetectionInChild"],[210,97,202,95],[210,98,202,96],[211,10,203,8],[212,10,204,8],[212,14,204,12,"screens"],[212,21,204,19],[212,23,204,21],[213,12,205,10,"screenConfig"],[213,24,205,22],[213,25,205,23,"screens"],[213,32,205,30],[213,35,205,33,"screens"],[213,42,205,40],[214,10,206,8],[215,10,207,8],[215,14,207,12,"auto"],[215,18,207,16],[215,22,207,20],[215,23,207,21,"screenConfig"],[215,35,207,33],[215,36,207,34,"screens"],[215,43,207,41],[216,10,208,8],[217,10,209,8],[217,12,209,10],[217,21,209,19],[217,25,209,23,"item"],[217,29,209,27],[217,33,209,31,"item"],[217,37,209,35],[217,38,209,36,"linking"],[217,45,209,43],[217,49,209,47],[217,53,209,51],[217,54,209,52],[217,56,209,54],[218,12,210,10],[218,16,210,14,"screenConfig"],[218,28,210,26],[218,29,210,27,"path"],[218,33,210,31],[218,37,210,35],[218,41,210,39],[218,43,210,41],[219,14,211,12],[219,18,211,16],[219,19,211,17,"skipInitialDetection"],[219,39,211,37],[219,43,211,41,"screenConfig"],[219,55,211,53],[219,56,211,54,"path"],[219,60,211,58],[219,65,211,63],[219,67,211,65],[219,69,211,67],[220,16,212,14],[221,16,213,14],[222,16,214,14,"initialScreenConfig"],[222,35,214,33],[222,38,214,36,"undefined"],[222,47,214,45],[223,14,215,12],[224,12,216,10],[224,13,216,11],[224,19,216,17],[225,14,217,12],[225,18,217,16],[225,19,217,17,"skipInitialDetection"],[225,39,217,37],[225,43,217,41,"initialScreenConfig"],[225,62,217,60],[225,66,217,64],[225,70,217,68],[225,72,217,70],[226,16,218,14,"initialScreenConfig"],[226,35,218,33],[226,38,218,36,"screenConfig"],[226,50,218,48],[227,14,219,12],[228,14,220,12,"screenConfig"],[228,26,220,24],[228,27,220,25,"path"],[228,31,220,29],[228,34,220,32,"key"],[228,37,220,35],[228,38,220,36,"replace"],[228,45,220,43],[228,46,220,44],[228,57,220,55],[228,59,220,57],[228,64,220,62],[228,65,220,63],[228,66,220,64,"replace"],[228,73,220,71],[228,74,220,72],[228,78,220,76],[228,80,220,78],[228,82,220,80],[228,83,220,81],[228,84,220,82,"toLowerCase"],[228,95,220,93],[228,96,220,94],[228,97,220,95],[229,12,221,10],[230,10,222,8],[231,10,223,8],[231,17,223,15],[231,18,223,16,"key"],[231,21,223,19],[231,23,223,21,"screenConfig"],[231,35,223,33],[231,36,223,34],[232,8,224,6],[232,9,224,7],[232,10,224,8],[232,11,224,9,"filter"],[232,17,224,15],[232,18,224,16],[232,19,224,17],[232,22,224,20,"screen"],[232,28,224,26],[232,29,224,27],[232,34,224,32,"Object"],[232,40,224,38],[232,41,224,39,"keys"],[232,45,224,43],[232,46,224,44,"screen"],[232,52,224,50],[232,53,224,51],[232,54,224,52,"length"],[232,60,224,58],[232,63,224,61],[232,64,224,62],[232,65,224,63],[232,66,224,64],[233,6,225,4],[233,7,225,5],[234,6,226,4],[234,12,226,10,"screens"],[234,19,226,17],[234,22,226,20],[234,23,226,21],[234,24,226,22],[236,6,228,4],[237,6,229,4],[238,6,230,4],[238,11,230,9],[238,17,230,15,"key"],[238,20,230,18],[238,24,230,22,"t"],[238,25,230,23],[238,26,230,24,"config"],[238,32,230,30],[238,34,230,32],[239,8,231,6],[239,12,231,10,"key"],[239,15,231,13],[239,20,231,18],[239,29,231,27],[239,33,231,31,"t"],[239,34,231,32],[239,35,231,33,"config"],[239,41,231,39],[239,42,231,40,"screens"],[239,49,231,47],[239,51,231,49],[240,10,232,8,"Object"],[240,16,232,14],[240,17,232,15,"assign"],[240,23,232,21],[240,24,232,22,"screens"],[240,31,232,29],[240,33,232,31,"createPathConfigForScreens"],[240,59,232,57],[240,60,232,58,"t"],[240,61,232,59],[240,62,232,60,"config"],[240,68,232,66],[240,69,232,67,"screens"],[240,76,232,74],[240,78,232,76,"o"],[240,79,232,77],[240,81,232,79,"initialRouteName"],[240,97,232,95],[240,101,232,99,"t"],[240,102,232,100],[240,103,232,101,"config"],[240,109,232,107],[240,110,232,108,"initialRouteName"],[240,126,232,124],[240,127,232,125],[240,128,232,126],[241,8,233,6],[242,8,234,6],[242,12,234,10,"key"],[242,15,234,13],[242,20,234,18],[242,28,234,26],[242,32,234,30,"t"],[242,33,234,31],[242,34,234,32,"config"],[242,40,234,38],[242,41,234,39,"groups"],[242,47,234,45],[242,49,234,47],[243,10,235,8,"Object"],[243,16,235,14],[243,17,235,15,"entries"],[243,24,235,22],[243,25,235,23,"t"],[243,26,235,24],[243,27,235,25,"config"],[243,33,235,31],[243,34,235,32,"groups"],[243,40,235,38],[243,41,235,39],[243,42,235,40,"forEach"],[243,49,235,47],[243,50,235,48],[243,51,235,49],[243,54,235,52,"group"],[243,59,235,57],[243,60,235,58],[243,65,235,63],[244,12,236,10,"Object"],[244,18,236,16],[244,19,236,17,"assign"],[244,25,236,23],[244,26,236,24,"screens"],[244,33,236,31],[244,35,236,33,"createPathConfigForScreens"],[244,61,236,59],[244,62,236,60,"group"],[244,67,236,65],[244,68,236,66,"screens"],[244,75,236,73],[244,77,236,75,"o"],[244,78,236,76],[244,80,236,78,"initialRouteName"],[244,96,236,94],[244,100,236,98,"t"],[244,101,236,99],[244,102,236,100,"config"],[244,108,236,106],[244,109,236,107,"initialRouteName"],[244,125,236,123],[244,126,236,124],[244,127,236,125],[245,10,237,8],[245,11,237,9],[245,12,237,10],[246,8,238,6],[247,6,239,4],[248,6,240,4],[248,10,240,8,"Object"],[248,16,240,14],[248,17,240,15,"keys"],[248,21,240,19],[248,22,240,20,"screens"],[248,29,240,27],[248,30,240,28],[248,31,240,29,"length"],[248,37,240,35],[248,42,240,40],[248,43,240,41],[248,45,240,43],[249,8,241,6],[249,15,241,13,"undefined"],[249,24,241,22],[250,6,242,4],[251,6,243,4],[251,13,243,11,"screens"],[251,20,243,18],[252,4,244,2],[252,5,244,3],[253,4,245,2],[253,10,245,8,"screens"],[253,17,245,15],[253,20,245,18,"createPathConfigForTree"],[253,43,245,41],[253,44,245,42,"tree"],[253,48,245,46],[253,50,245,48,"options"],[253,57,245,55],[253,59,245,57],[253,64,245,62],[253,65,245,63],[254,4,246,2],[254,8,246,6,"auto"],[254,12,246,10],[254,16,246,14,"initialScreenConfig"],[254,35,246,33],[254,37,246,35],[255,6,247,4,"initialScreenConfig"],[255,25,247,23],[255,26,247,24,"path"],[255,30,247,28],[255,33,247,31],[255,35,247,33],[256,4,248,2],[257,4,249,2],[257,11,249,9,"screens"],[257,18,249,16],[258,2,250,0],[259,0,250,1],[259,3]],"functionMap":{"names":["<global>","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","_jsx$argument_1.children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;+CC+B;CDQ;4BEE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CFC;OMS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CNG;OUoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CVM"}},"type":"js/module"}]}