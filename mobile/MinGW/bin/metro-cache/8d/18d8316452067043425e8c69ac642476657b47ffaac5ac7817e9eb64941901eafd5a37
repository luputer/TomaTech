{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":489,"column":48,"index":20795}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":489,"column":48,"index":20795}}],"key":"AkVSdHsy9g0oRbtVtdfz2QwrA14="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"vzJhU8p+EXFUpX28ANa6h4NbBWk="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-is","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":46,"index":152}}],"key":"Kh8377WtECxkHj9j3Lmfo9R8et4="}},{"name":"use-latest-callback","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":153},"end":{"line":6,"column":52,"index":205}}],"key":"Y37UDlHqFWGsIoaqIV2lsupH1AM="}},{"name":"./deepFreeze.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":206},"end":{"line":7,"column":45,"index":251}}],"key":"gUWwtN3cGtPFA39/AfK87dLMoDw="}},{"name":"./Group.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":252},"end":{"line":8,"column":35,"index":287}}],"key":"MJzpBsNh6Xmuq5gZYt5R0gjFCC0="}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":288},"end":{"line":9,"column":49,"index":337}}],"key":"Vb50P4WVkAnizz+ENIDrg6CJX4g="}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":338},"end":{"line":10,"column":51,"index":389}}],"key":"r92Pd29+9uUvlHu+K/XAzxqzFrQ="}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":390},"end":{"line":11,"column":73,"index":463}}],"key":"fvb0BcCeN3mgZOO7XIAQIk1mles="}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":464},"end":{"line":12,"column":69,"index":533}}],"key":"jk0qVIUl5f0mZv0RFSM44Eb40Bo="}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":534},"end":{"line":13,"column":69,"index":603}}],"key":"s3tKImF4x81CxrhRnhZSIjHl48M="}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":604},"end":{"line":14,"column":67,"index":671}}],"key":"45SPQoFjK3sUjTZFqk2Y4agFvFk="}},{"name":"./Screen.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":672},"end":{"line":15,"column":37,"index":709}}],"key":"4AmuaFUSUGP0K1dvEZyRNAwexKU="}},{"name":"./types.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":710},"end":{"line":16,"column":47,"index":757}}],"key":"60uxQGokIVE04vR1RPOTA2bTDdM="}},{"name":"./useChildListeners.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":758},"end":{"line":17,"column":59,"index":817}}],"key":"FO+VwKTKNPUgOVmAfSG+UGPnET0="}},{"name":"./useComponent.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":0,"index":818},"end":{"line":18,"column":49,"index":867}}],"key":"Y5xAZFHu0jypGToZbfmlrWy1SgE="}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0,"index":868},"end":{"line":19,"column":57,"index":925}}],"key":"tzY2bQtMnt7XLhuL/OlR4pmmhZc="}},{"name":"./useDescriptors.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":926},"end":{"line":20,"column":53,"index":979}}],"key":"HhfvEZqKuY9HOwhIIOTEjGttH8Y="}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":980},"end":{"line":21,"column":55,"index":1035}}],"key":"BYS1cAgkQBqwT1M7oWxnCjlR/wY="}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":1036},"end":{"line":22,"column":93,"index":1129}}],"key":"weYmoyL/DEblcXDY3zs7Q5CbgHE="}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":1130},"end":{"line":23,"column":53,"index":1183}}],"key":"5Oyhm1kG2EgqR0gx2Pklgk5oawE="}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":1184},"end":{"line":24,"column":72,"index":1256}}],"key":"W03y7JxvNp1uZoBb1c7L4Qdz13U="}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":1257},"end":{"line":25,"column":69,"index":1326}}],"key":"Utbfur1yyRTHmnJD8IptXCXqfxA="}},{"name":"./useLazyValue.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":26,"column":0,"index":1327},"end":{"line":26,"column":49,"index":1376}}],"key":"Ke63sDSZ+3As+jICPBrawHNhIeA="}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":27,"column":0,"index":1377},"end":{"line":27,"column":65,"index":1442}}],"key":"6Rst5U3d9V6eo+ZGxpcNX0Xdx2M="}},{"name":"./useOnAction.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":28,"column":0,"index":1443},"end":{"line":28,"column":47,"index":1490}}],"key":"L5EcEtqvsTSR0oSKNg1D3Svf9ok="}},{"name":"./useOnGetState.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":29,"column":0,"index":1491},"end":{"line":29,"column":51,"index":1542}}],"key":"22cB4vxphxCAhpwncmrKt+jDClM="}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":30,"column":0,"index":1543},"end":{"line":30,"column":55,"index":1598}}],"key":"eHoDHZjOg6CrFEKf6JDIwwFuGY0="}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":31,"column":0,"index":1599},"end":{"line":31,"column":65,"index":1664}}],"key":"KvruacEZ7pRoYaD+bHWqoQIxwuo="}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":32,"column":0,"index":1665},"end":{"line":32,"column":59,"index":1724}}],"key":"loWFvvlxo4F+3fT6U1iOJcrLX8M="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":36,"column":0,"index":1840},"end":{"line":36,"column":48,"index":1888}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _routers = require(_dependencyMap[2], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[3], \"react\"));\n  var _reactIs = require(_dependencyMap[4], \"react-is\");\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[5], \"use-latest-callback\"));\n  var _deepFreeze = require(_dependencyMap[6], \"./deepFreeze.js\");\n  var _Group = require(_dependencyMap[7], \"./Group.js\");\n  var _isArrayEqual = require(_dependencyMap[8], \"./isArrayEqual.js\");\n  var _isRecordEqual = require(_dependencyMap[9], \"./isRecordEqual.js\");\n  var _NavigationHelpersContext = require(_dependencyMap[10], \"./NavigationHelpersContext.js\");\n  var _NavigationRouteContext = require(_dependencyMap[11], \"./NavigationRouteContext.js\");\n  var _NavigationStateContext = require(_dependencyMap[12], \"./NavigationStateContext.js\");\n  var _PreventRemoveProvider = require(_dependencyMap[13], \"./PreventRemoveProvider.js\");\n  var _Screen = require(_dependencyMap[14], \"./Screen.js\");\n  var _types = require(_dependencyMap[15], \"./types.js\");\n  var _useChildListeners = require(_dependencyMap[16], \"./useChildListeners.js\");\n  var _useComponent = require(_dependencyMap[17], \"./useComponent.js\");\n  var _useCurrentRender = require(_dependencyMap[18], \"./useCurrentRender.js\");\n  var _useDescriptors = require(_dependencyMap[19], \"./useDescriptors.js\");\n  var _useEventEmitter = require(_dependencyMap[20], \"./useEventEmitter.js\");\n  var _useFocusedListenersChildrenAdapter = require(_dependencyMap[21], \"./useFocusedListenersChildrenAdapter.js\");\n  var _useFocusEvents = require(_dependencyMap[22], \"./useFocusEvents.js\");\n  var _useIsomorphicLayoutEffect = require(_dependencyMap[23], \"./useIsomorphicLayoutEffect\");\n  var _useKeyedChildListeners = require(_dependencyMap[24], \"./useKeyedChildListeners.js\");\n  var _useLazyValue = require(_dependencyMap[25], \"./useLazyValue.js\");\n  var _useNavigationHelpers = require(_dependencyMap[26], \"./useNavigationHelpers.js\");\n  var _useOnAction = require(_dependencyMap[27], \"./useOnAction.js\");\n  var _useOnGetState = require(_dependencyMap[28], \"./useOnGetState.js\");\n  var _useOnRouteFocus = require(_dependencyMap[29], \"./useOnRouteFocus.js\");\n  var _useRegisterNavigator = require(_dependencyMap[30], \"./useRegisterNavigator.js\");\n  var _useScheduleUpdate = require(_dependencyMap[31], \"./useScheduleUpdate.js\");\n  var _jsxRuntime = require(_dependencyMap[32], \"react/jsx-runtime\");\n  const _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\", \"UNSTABLE_router\"]; // This is to make TypeScript compiler happy\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  _types.PrivateValueStore;\n  const isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  const getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    const configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (child.type === _Screen.Screen) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (child.type === React.Fragment || child.type === _Group.Group) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== _Group.Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/ /*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        const {\n          name,\n          children,\n          component,\n          getComponent\n        } = config.props;\n        if (typeof name !== 'string' || !name) {\n          throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n        }\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    const navigatorKey = (0, _useRegisterNavigator.useRegisterNavigator)();\n    const route = React.useContext(_NavigationRouteContext.NavigationRouteContext);\n    const {\n        children,\n        layout,\n        screenOptions,\n        screenLayout,\n        screenListeners,\n        UNSTABLE_router\n      } = options,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n    const routeConfigs = getRouteConfigsFromChildren(children);\n    const router = (0, _useLazyValue.useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      const original = createRouter(rest);\n      if (UNSTABLE_router != null) {\n        const overrides = UNSTABLE_router(original);\n        return Object.assign({}, original, overrides);\n      }\n      return original;\n    });\n    const screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    const routeNames = routeConfigs.map(config => config.props.name);\n    const routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    const routeParamList = routeNames.reduce((acc, curr) => {\n      const {\n        initialParams\n      } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    const {\n      state: currentState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      setKey,\n      getKey,\n      getIsInitial\n    } = React.useContext(_NavigationStateContext.NavigationStateContext);\n    const stateCleanedUp = React.useRef(false);\n    const setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n      const initialRouteParamList = routeNames.reduce((acc, curr) => {\n        const {\n          initialParams\n        } = screens[curr].props;\n        const initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n        acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? Object.assign({}, initialParams, initialParamsFromParams) : undefined;\n        return acc;\n      }, {});\n\n      // If the current state isn't initialized on first render, we initialize it\n      // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n      // Otherwise assume that the state was provided as initial state\n      // So we need to rehydrate it to make it usable\n      if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n        return [router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), true];\n      } else {\n        let stateFromParams;\n        if (route?.params?.state != null) {\n          stateFromParams = route.params.state;\n        } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n          stateFromParams = {\n            index: 0,\n            routes: [{\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path\n            }]\n          };\n        }\n        return [router.getRehydratedState(stateFromParams ?? currentState, {\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList\n        }), false];\n      }\n      // We explicitly don't include routeNames, route.params etc. in the dep list\n      // below. We want to avoid forcing a new state to be calculated in those cases\n      // Instead, we handle changes to these in the nextState code below. Note\n      // that some changes to routeConfigs are explicitly ignored, such as changes\n      // to initialParams\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentState, router, isStateValid]);\n    const previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    const previousRouteKeyList = previousRouteKeyListRef.current;\n    let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    let nextState = state;\n    if (!(0, _isArrayEqual.isArrayEqual)(state.routeNames, routeNames) || !(0, _isRecordEqual.isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    const previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      const previousParams = previousNestedParamsRef.current;\n      let action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _routers.CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _routers.CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      const updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    const shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    const stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    const getState = (0, _useLatestCallback.default)(() => {\n      const currentState = getCurrentState();\n      return (0, _deepFreeze.deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    const emitter = (0, _useEventEmitter.useEventEmitter)(e => {\n      const routeNames = [];\n      let route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      const navigation = descriptors[route.key].navigation;\n      const listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        const {\n          listeners\n        } = screens[name].props;\n        return listeners;\n      })].map(listeners => {\n        const map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, _useFocusEvents.useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    const {\n      listeners: childListeners,\n      addListener\n    } = (0, _useChildListeners.useChildListeners)();\n    const {\n      keyedListeners,\n      addKeyedListener\n    } = (0, _useKeyedChildListeners.useKeyedChildListeners)();\n    const onAction = (0, _useOnAction.useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    const onRouteFocus = (0, _useOnRouteFocus.useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    const navigation = (0, _useNavigationHelpers.useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, _useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _useOnGetState.useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    const {\n      describe,\n      descriptors\n    } = (0, _useDescriptors.useDescriptors)({\n      state,\n      screens,\n      navigation,\n      screenOptions,\n      screenLayout,\n      onAction,\n      getState,\n      setState,\n      onRouteFocus,\n      addListener,\n      addKeyedListener,\n      router,\n      // @ts-expect-error: this should have both core and custom events, but too much work right now\n      emitter\n    });\n    (0, _useCurrentRender.useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    const NavigationContent = (0, _useComponent.useComponent)(children => {\n      const element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":491,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationBuilder"],[8,30,1,13],[8,33,1,13,"useNavigationBuilder"],[8,53,1,13],[9,2,1,13],[9,6,1,13,"_objectWithoutPropertiesLoose2"],[9,36,1,13],[9,39,1,13,"_interopRequireDefault"],[9,61,1,13],[9,62,1,13,"require"],[9,69,1,13],[9,70,1,13,"_dependencyMap"],[9,84,1,13],[10,2,3,0],[10,6,3,0,"_routers"],[10,14,3,0],[10,17,3,0,"require"],[10,24,3,0],[10,25,3,0,"_dependencyMap"],[10,39,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,5,0],[12,6,5,0,"_reactIs"],[12,14,5,0],[12,17,5,0,"require"],[12,24,5,0],[12,25,5,0,"_dependencyMap"],[12,39,5,0],[13,2,6,0],[13,6,6,0,"_useLatestCallback"],[13,24,6,0],[13,27,6,0,"_interopRequireDefault"],[13,49,6,0],[13,50,6,0,"require"],[13,57,6,0],[13,58,6,0,"_dependencyMap"],[13,72,6,0],[14,2,7,0],[14,6,7,0,"_deepFreeze"],[14,17,7,0],[14,20,7,0,"require"],[14,27,7,0],[14,28,7,0,"_dependencyMap"],[14,42,7,0],[15,2,8,0],[15,6,8,0,"_Group"],[15,12,8,0],[15,15,8,0,"require"],[15,22,8,0],[15,23,8,0,"_dependencyMap"],[15,37,8,0],[16,2,9,0],[16,6,9,0,"_isArrayEqual"],[16,19,9,0],[16,22,9,0,"require"],[16,29,9,0],[16,30,9,0,"_dependencyMap"],[16,44,9,0],[17,2,10,0],[17,6,10,0,"_isRecordEqual"],[17,20,10,0],[17,23,10,0,"require"],[17,30,10,0],[17,31,10,0,"_dependencyMap"],[17,45,10,0],[18,2,11,0],[18,6,11,0,"_NavigationHelpersContext"],[18,31,11,0],[18,34,11,0,"require"],[18,41,11,0],[18,42,11,0,"_dependencyMap"],[18,56,11,0],[19,2,12,0],[19,6,12,0,"_NavigationRouteContext"],[19,29,12,0],[19,32,12,0,"require"],[19,39,12,0],[19,40,12,0,"_dependencyMap"],[19,54,12,0],[20,2,13,0],[20,6,13,0,"_NavigationStateContext"],[20,29,13,0],[20,32,13,0,"require"],[20,39,13,0],[20,40,13,0,"_dependencyMap"],[20,54,13,0],[21,2,14,0],[21,6,14,0,"_PreventRemoveProvider"],[21,28,14,0],[21,31,14,0,"require"],[21,38,14,0],[21,39,14,0,"_dependencyMap"],[21,53,14,0],[22,2,15,0],[22,6,15,0,"_Screen"],[22,13,15,0],[22,16,15,0,"require"],[22,23,15,0],[22,24,15,0,"_dependencyMap"],[22,38,15,0],[23,2,16,0],[23,6,16,0,"_types"],[23,12,16,0],[23,15,16,0,"require"],[23,22,16,0],[23,23,16,0,"_dependencyMap"],[23,37,16,0],[24,2,17,0],[24,6,17,0,"_useChildListeners"],[24,24,17,0],[24,27,17,0,"require"],[24,34,17,0],[24,35,17,0,"_dependencyMap"],[24,49,17,0],[25,2,18,0],[25,6,18,0,"_useComponent"],[25,19,18,0],[25,22,18,0,"require"],[25,29,18,0],[25,30,18,0,"_dependencyMap"],[25,44,18,0],[26,2,19,0],[26,6,19,0,"_useCurrentRender"],[26,23,19,0],[26,26,19,0,"require"],[26,33,19,0],[26,34,19,0,"_dependencyMap"],[26,48,19,0],[27,2,20,0],[27,6,20,0,"_useDescriptors"],[27,21,20,0],[27,24,20,0,"require"],[27,31,20,0],[27,32,20,0,"_dependencyMap"],[27,46,20,0],[28,2,21,0],[28,6,21,0,"_useEventEmitter"],[28,22,21,0],[28,25,21,0,"require"],[28,32,21,0],[28,33,21,0,"_dependencyMap"],[28,47,21,0],[29,2,22,0],[29,6,22,0,"_useFocusedListenersChildrenAdapter"],[29,41,22,0],[29,44,22,0,"require"],[29,51,22,0],[29,52,22,0,"_dependencyMap"],[29,66,22,0],[30,2,23,0],[30,6,23,0,"_useFocusEvents"],[30,21,23,0],[30,24,23,0,"require"],[30,31,23,0],[30,32,23,0,"_dependencyMap"],[30,46,23,0],[31,2,24,0],[31,6,24,0,"_useIsomorphicLayoutEffect"],[31,32,24,0],[31,35,24,0,"require"],[31,42,24,0],[31,43,24,0,"_dependencyMap"],[31,57,24,0],[32,2,25,0],[32,6,25,0,"_useKeyedChildListeners"],[32,29,25,0],[32,32,25,0,"require"],[32,39,25,0],[32,40,25,0,"_dependencyMap"],[32,54,25,0],[33,2,26,0],[33,6,26,0,"_useLazyValue"],[33,19,26,0],[33,22,26,0,"require"],[33,29,26,0],[33,30,26,0,"_dependencyMap"],[33,44,26,0],[34,2,27,0],[34,6,27,0,"_useNavigationHelpers"],[34,27,27,0],[34,30,27,0,"require"],[34,37,27,0],[34,38,27,0,"_dependencyMap"],[34,52,27,0],[35,2,28,0],[35,6,28,0,"_useOnAction"],[35,18,28,0],[35,21,28,0,"require"],[35,28,28,0],[35,29,28,0,"_dependencyMap"],[35,43,28,0],[36,2,29,0],[36,6,29,0,"_useOnGetState"],[36,20,29,0],[36,23,29,0,"require"],[36,30,29,0],[36,31,29,0,"_dependencyMap"],[36,45,29,0],[37,2,30,0],[37,6,30,0,"_useOnRouteFocus"],[37,22,30,0],[37,25,30,0,"require"],[37,32,30,0],[37,33,30,0,"_dependencyMap"],[37,47,30,0],[38,2,31,0],[38,6,31,0,"_useRegisterNavigator"],[38,27,31,0],[38,30,31,0,"require"],[38,37,31,0],[38,38,31,0,"_dependencyMap"],[38,52,31,0],[39,2,32,0],[39,6,32,0,"_useScheduleUpdate"],[39,24,32,0],[39,27,32,0,"require"],[39,34,32,0],[39,35,32,0,"_dependencyMap"],[39,49,32,0],[40,2,36,0],[40,6,36,0,"_jsxRuntime"],[40,17,36,0],[40,20,36,0,"require"],[40,27,36,0],[40,28,36,0,"_dependencyMap"],[40,42,36,0],[41,2,36,48],[41,8,36,48,"_excluded"],[41,17,36,48],[41,115,34,0],[42,2,35,0],[43,2,35,0],[43,11,35,0,"_getRequireWildcardCache"],[43,36,35,0,"e"],[43,37,35,0],[43,66,35,0,"WeakMap"],[43,73,35,0],[43,92,35,0,"r"],[43,93,35,0],[43,100,35,0,"WeakMap"],[43,107,35,0],[43,111,35,0,"t"],[43,112,35,0],[43,119,35,0,"WeakMap"],[43,126,35,0],[43,138,35,0,"_getRequireWildcardCache"],[43,162,35,0],[43,174,35,0,"_getRequireWildcardCache"],[43,175,35,0,"e"],[43,176,35,0],[43,187,35,0,"e"],[43,188,35,0],[43,191,35,0,"t"],[43,192,35,0],[43,195,35,0,"r"],[43,196,35,0],[43,201,35,0,"e"],[43,202,35,0],[44,2,35,0],[44,11,35,0,"_interopRequireWildcard"],[44,35,35,0,"e"],[44,36,35,0],[44,38,35,0,"r"],[44,39,35,0],[44,48,35,0,"r"],[44,49,35,0],[44,53,35,0,"e"],[44,54,35,0],[44,58,35,0,"e"],[44,59,35,0],[44,60,35,0,"__esModule"],[44,70,35,0],[44,79,35,0,"e"],[44,80,35,0],[44,95,35,0,"e"],[44,96,35,0],[44,119,35,0,"e"],[44,120,35,0],[44,145,35,0,"e"],[44,146,35,0],[44,157,35,0,"default"],[44,164,35,0],[44,166,35,0,"e"],[44,167,35,0],[44,175,35,0,"t"],[44,176,35,0],[44,179,35,0,"_getRequireWildcardCache"],[44,203,35,0],[44,204,35,0,"r"],[44,205,35,0],[44,212,35,0,"t"],[44,213,35,0],[44,217,35,0,"t"],[44,218,35,0],[44,219,35,0,"has"],[44,222,35,0],[44,223,35,0,"e"],[44,224,35,0],[44,234,35,0,"t"],[44,235,35,0],[44,236,35,0,"get"],[44,239,35,0],[44,240,35,0,"e"],[44,241,35,0],[44,248,35,0,"n"],[44,249,35,0],[44,254,35,0,"__proto__"],[44,263,35,0],[44,273,35,0,"a"],[44,274,35,0],[44,277,35,0,"Object"],[44,283,35,0],[44,284,35,0,"defineProperty"],[44,298,35,0],[44,302,35,0,"Object"],[44,308,35,0],[44,309,35,0,"getOwnPropertyDescriptor"],[44,333,35,0],[44,344,35,0,"u"],[44,345,35,0],[44,349,35,0,"e"],[44,350,35,0],[44,370,35,0,"u"],[44,371,35,0],[44,378,35,0,"hasOwnProperty"],[44,392,35,0],[44,393,35,0,"call"],[44,397,35,0],[44,398,35,0,"e"],[44,399,35,0],[44,401,35,0,"u"],[44,402,35,0],[44,411,35,0,"i"],[44,412,35,0],[44,415,35,0,"a"],[44,416,35,0],[44,419,35,0,"Object"],[44,425,35,0],[44,426,35,0,"getOwnPropertyDescriptor"],[44,450,35,0],[44,451,35,0,"e"],[44,452,35,0],[44,454,35,0,"u"],[44,455,35,0],[44,465,35,0,"i"],[44,466,35,0],[44,471,35,0,"i"],[44,472,35,0],[44,473,35,0,"get"],[44,476,35,0],[44,480,35,0,"i"],[44,481,35,0],[44,482,35,0,"set"],[44,485,35,0],[44,489,35,0,"Object"],[44,495,35,0],[44,496,35,0,"defineProperty"],[44,510,35,0],[44,511,35,0,"n"],[44,512,35,0],[44,514,35,0,"u"],[44,515,35,0],[44,517,35,0,"i"],[44,518,35,0],[44,522,35,0,"n"],[44,523,35,0],[44,524,35,0,"u"],[44,525,35,0],[44,529,35,0,"e"],[44,530,35,0],[44,531,35,0,"u"],[44,532,35,0],[44,544,35,0,"n"],[44,545,35,0],[44,546,35,0,"default"],[44,553,35,0],[44,556,35,0,"e"],[44,557,35,0],[44,559,35,0,"t"],[44,560,35,0],[44,564,35,0,"t"],[44,565,35,0],[44,566,35,0,"set"],[44,569,35,0],[44,570,35,0,"e"],[44,571,35,0],[44,573,35,0,"n"],[44,574,35,0],[44,577,35,0,"n"],[44,578,35,0],[45,2,37,0,"PrivateValueStore"],[45,26,37,17],[46,2,38,0],[46,8,38,6,"isValidKey"],[46,18,38,16],[46,21,38,19,"key"],[46,24,38,22],[46,28,38,26,"key"],[46,31,38,29],[46,36,38,34,"undefined"],[46,45,38,43],[46,49,38,47],[46,56,38,54,"key"],[46,59,38,57],[46,64,38,62],[46,72,38,70],[46,76,38,74,"key"],[46,79,38,77],[46,84,38,82],[46,86,38,84],[48,2,40,0],[49,0,41,0],[50,0,42,0],[51,0,43,0],[52,0,44,0],[53,2,45,0],[53,8,45,6,"getRouteConfigsFromChildren"],[53,35,45,33],[53,38,45,36,"getRouteConfigsFromChildren"],[53,39,45,37,"children"],[53,47,45,45],[53,49,45,47,"groupKey"],[53,57,45,55],[53,59,45,57,"groupOptions"],[53,71,45,69],[53,73,45,71,"groupLayout"],[53,84,45,82],[53,89,45,87],[54,4,46,2],[54,10,46,8,"configs"],[54,17,46,15],[54,20,46,18,"React"],[54,25,46,23],[54,26,46,24,"Children"],[54,34,46,32],[54,35,46,33,"toArray"],[54,42,46,40],[54,43,46,41,"children"],[54,51,46,49],[54,52,46,50],[54,53,46,51,"reduce"],[54,59,46,57],[54,60,46,58],[54,61,46,59,"acc"],[54,64,46,62],[54,66,46,64,"child"],[54,71,46,69],[54,76,46,74],[55,6,47,4],[55,10,47,8],[55,23,47,21,"React"],[55,28,47,26],[55,29,47,27,"isValidElement"],[55,43,47,41],[55,44,47,42,"child"],[55,49,47,47],[55,50,47,48],[55,52,47,50],[56,8,48,6],[56,12,48,10,"child"],[56,17,48,15],[56,18,48,16,"type"],[56,22,48,20],[56,27,48,25,"Screen"],[56,41,48,31],[56,43,48,33],[57,10,49,8],[58,10,50,8],[60,10,52,8],[60,14,52,12],[60,15,52,13,"isValidKey"],[60,25,52,23],[60,26,52,24,"child"],[60,31,52,29],[60,32,52,30,"props"],[60,37,52,35],[60,38,52,36,"navigationKey"],[60,51,52,49],[60,52,52,50],[60,54,52,52],[61,12,53,10],[61,18,53,16],[61,22,53,20,"Error"],[61,27,53,25],[61,28,53,26],[61,68,53,66,"JSON"],[61,72,53,70],[61,73,53,71,"stringify"],[61,82,53,80],[61,83,53,81,"child"],[61,88,53,86],[61,89,53,87,"props"],[61,94,53,92],[61,95,53,93,"navigationKey"],[61,108,53,106],[61,109,53,107],[61,130,53,128,"child"],[61,135,53,133],[61,136,53,134,"props"],[61,141,53,139],[61,142,53,140,"name"],[61,146,53,144],[61,196,53,194],[61,197,53,195],[62,10,54,8],[63,10,55,8,"acc"],[63,13,55,11],[63,14,55,12,"push"],[63,18,55,16],[63,19,55,17],[64,12,56,10,"keys"],[64,16,56,14],[64,18,56,16],[64,19,56,17,"groupKey"],[64,27,56,25],[64,29,56,27,"child"],[64,34,56,32],[64,35,56,33,"props"],[64,40,56,38],[64,41,56,39,"navigationKey"],[64,54,56,52],[64,55,56,53],[65,12,57,10,"options"],[65,19,57,17],[65,21,57,19,"groupOptions"],[65,33,57,31],[66,12,58,10,"layout"],[66,18,58,16],[66,20,58,18,"groupLayout"],[66,31,58,29],[67,12,59,10,"props"],[67,17,59,15],[67,19,59,17,"child"],[67,24,59,22],[67,25,59,23,"props"],[68,10,60,8],[68,11,60,9],[68,12,60,10],[69,10,61,8],[69,17,61,15,"acc"],[69,20,61,18],[70,8,62,6],[71,8,63,6],[71,12,63,10,"child"],[71,17,63,15],[71,18,63,16,"type"],[71,22,63,20],[71,27,63,25,"React"],[71,32,63,30],[71,33,63,31,"Fragment"],[71,41,63,39],[71,45,63,43,"child"],[71,50,63,48],[71,51,63,49,"type"],[71,55,63,53],[71,60,63,58,"Group"],[71,72,63,63],[71,74,63,65],[72,10,64,8],[72,14,64,12],[72,15,64,13,"isValidKey"],[72,25,64,23],[72,26,64,24,"child"],[72,31,64,29],[72,32,64,30,"props"],[72,37,64,35],[72,38,64,36,"navigationKey"],[72,51,64,49],[72,52,64,50],[72,54,64,52],[73,12,65,10],[73,18,65,16],[73,22,65,20,"Error"],[73,27,65,25],[73,28,65,26],[73,68,65,66,"JSON"],[73,72,65,70],[73,73,65,71,"stringify"],[73,82,65,80],[73,83,65,81,"child"],[73,88,65,86],[73,89,65,87,"props"],[73,94,65,92],[73,95,65,93,"navigationKey"],[73,108,65,106],[73,109,65,107],[73,173,65,171],[73,174,65,172],[74,10,66,8],[76,10,68,8],[77,10,69,8],[78,10,70,8,"acc"],[78,13,70,11],[78,14,70,12,"push"],[78,18,70,16],[78,19,70,17],[78,22,70,20,"getRouteConfigsFromChildren"],[78,49,70,47],[78,50,70,48,"child"],[78,55,70,53],[78,56,70,54,"props"],[78,61,70,59],[78,62,70,60,"children"],[78,70,70,68],[78,72,70,70,"child"],[78,77,70,75],[78,78,70,76,"props"],[78,83,70,81],[78,84,70,82,"navigationKey"],[78,97,70,95],[78,99,70,97,"child"],[78,104,70,102],[78,105,70,103,"type"],[78,109,70,107],[78,114,70,112,"Group"],[78,126,70,117],[78,129,70,120,"groupOptions"],[78,141,70,132],[78,144,70,135,"groupOptions"],[78,156,70,147],[78,160,70,151],[78,164,70,155],[78,167,70,158],[78,168,70,159],[78,171,70,162,"groupOptions"],[78,183,70,174],[78,185,70,176,"child"],[78,190,70,181],[78,191,70,182,"props"],[78,196,70,187],[78,197,70,188,"screenOptions"],[78,210,70,201],[78,211,70,202],[78,214,70,205],[78,215,70,206,"child"],[78,220,70,211],[78,221,70,212,"props"],[78,226,70,217],[78,227,70,218,"screenOptions"],[78,240,70,231],[78,241,70,232],[78,243,70,234],[78,250,70,241,"child"],[78,255,70,246],[78,256,70,247,"props"],[78,261,70,252],[78,262,70,253,"screenLayout"],[78,274,70,265],[78,279,70,270],[78,289,70,280],[78,292,70,283,"child"],[78,297,70,288],[78,298,70,289,"props"],[78,303,70,294],[78,304,70,295,"screenLayout"],[78,316,70,307],[78,319,70,310,"groupLayout"],[78,330,70,321],[78,331,70,322],[78,332,70,323],[79,10,71,8],[79,17,71,15,"acc"],[79,20,71,18],[80,8,72,6],[81,6,73,4],[82,6,74,4],[82,12,74,10],[82,16,74,14,"Error"],[82,21,74,19],[82,22,74,20],[82,122,74,120],[82,135,74,133],[82,149,74,133,"React"],[82,154,74,138],[82,155,74,139,"isValidElement"],[82,169,74,153],[82,170,74,154,"child"],[82,175,74,159],[82,176,74,160],[82,179,74,163],[82,183,74,167],[82,190,74,174,"child"],[82,195,74,179],[82,196,74,180,"type"],[82,200,74,184],[82,205,74,189],[82,213,74,197],[82,216,74,200,"child"],[82,221,74,205],[82,222,74,206,"type"],[82,226,74,210],[82,229,74,213,"child"],[82,234,74,218],[82,235,74,219,"type"],[82,239,74,223],[82,241,74,225,"name"],[82,245,74,229],[82,249,74,233,"child"],[82,254,74,238],[82,255,74,239,"props"],[82,260,74,244],[82,264,74,248],[82,268,74,252],[82,272,74,256],[82,279,74,263,"child"],[82,284,74,268],[82,285,74,269,"props"],[82,290,74,274],[82,295,74,279],[82,303,74,287],[82,307,74,291],[82,313,74,297],[82,317,74,301,"child"],[82,322,74,306],[82,323,74,307,"props"],[82,328,74,312],[82,332,74,316,"child"],[82,337,74,321],[82,338,74,322,"props"],[82,343,74,327],[82,345,74,329,"name"],[82,349,74,333],[82,352,74,336],[82,372,74,356,"child"],[82,377,74,361],[82,378,74,362,"props"],[82,383,74,367],[82,384,74,368,"name"],[82,388,74,372],[82,391,74,375],[82,394,74,378],[82,396,74,380],[82,398,74,382],[82,401,74,385],[82,408,74,392,"child"],[82,413,74,397],[82,418,74,402],[82,426,74,410],[82,429,74,413,"JSON"],[82,433,74,417],[82,434,74,418,"stringify"],[82,443,74,427],[82,444,74,428,"child"],[82,449,74,433],[82,450,74,434],[82,453,74,437],[82,457,74,441,"String"],[82,463,74,447],[82,464,74,448,"child"],[82,469,74,453],[82,470,74,454],[82,473,74,457],[82,565,74,549],[82,566,74,550],[83,4,75,2],[83,5,75,3],[83,7,75,5],[83,9,75,7],[83,10,75,8],[84,4,76,2],[84,8,76,6,"process"],[84,15,76,13],[84,16,76,14,"env"],[84,19,76,17],[84,20,76,18,"NODE_ENV"],[84,28,76,26],[84,33,76,31],[84,45,76,43],[84,47,76,45],[85,6,77,4,"configs"],[85,13,77,11],[85,14,77,12,"forEach"],[85,21,77,19],[85,22,77,20,"config"],[85,28,77,26],[85,32,77,30],[86,8,78,6],[86,14,78,12],[87,10,79,8,"name"],[87,14,79,12],[88,10,80,8,"children"],[88,18,80,16],[89,10,81,8,"component"],[89,19,81,17],[90,10,82,8,"getComponent"],[91,8,83,6],[91,9,83,7],[91,12,83,10,"config"],[91,18,83,16],[91,19,83,17,"props"],[91,24,83,22],[92,8,84,6],[92,12,84,10],[92,19,84,17,"name"],[92,23,84,21],[92,28,84,26],[92,36,84,34],[92,40,84,38],[92,41,84,39,"name"],[92,45,84,43],[92,47,84,45],[93,10,85,8],[93,16,85,14],[93,20,85,18,"Error"],[93,25,85,23],[93,26,85,24],[93,50,85,48,"JSON"],[93,54,85,52],[93,55,85,53,"stringify"],[93,64,85,62],[93,65,85,63,"name"],[93,69,85,67],[93,70,85,68],[93,120,85,118],[93,121,85,119],[94,8,86,6],[95,8,87,6],[95,12,87,10,"children"],[95,20,87,18],[95,24,87,22],[95,28,87,26],[95,32,87,30,"component"],[95,41,87,39],[95,46,87,44,"undefined"],[95,55,87,53],[95,59,87,57,"getComponent"],[95,71,87,69],[95,76,87,74,"undefined"],[95,85,87,83],[95,87,87,85],[96,10,88,8],[96,14,88,12,"children"],[96,22,88,20],[96,26,88,24],[96,30,88,28],[96,34,88,32,"component"],[96,43,88,41],[96,48,88,46,"undefined"],[96,57,88,55],[96,59,88,57],[97,12,89,10],[97,18,89,16],[97,22,89,20,"Error"],[97,27,89,25],[97,28,89,26],[97,89,89,87,"name"],[97,93,89,91],[97,129,89,127],[97,130,89,128],[98,10,90,8],[99,10,91,8],[99,14,91,12,"children"],[99,22,91,20],[99,26,91,24],[99,30,91,28],[99,34,91,32,"getComponent"],[99,46,91,44],[99,51,91,49,"undefined"],[99,60,91,58],[99,62,91,60],[100,12,92,10],[100,18,92,16],[100,22,92,20,"Error"],[100,27,92,25],[100,28,92,26],[100,92,92,90,"name"],[100,96,92,94],[100,132,92,130],[100,133,92,131],[101,10,93,8],[102,10,94,8],[102,14,94,12,"component"],[102,23,94,21],[102,28,94,26,"undefined"],[102,37,94,35],[102,41,94,39,"getComponent"],[102,53,94,51],[102,58,94,56,"undefined"],[102,67,94,65],[102,69,94,67],[103,12,95,10],[103,18,95,16],[103,22,95,20,"Error"],[103,27,95,25],[103,28,95,26],[103,93,95,91,"name"],[103,97,95,95],[103,133,95,131],[103,134,95,132],[104,10,96,8],[105,10,97,8],[105,14,97,12,"children"],[105,22,97,20],[105,26,97,24],[105,30,97,28],[105,34,97,32],[105,41,97,39,"children"],[105,49,97,47],[105,54,97,52],[105,64,97,62],[105,66,97,64],[106,12,98,10],[106,18,98,16],[106,22,98,20,"Error"],[106,27,98,25],[106,28,98,26],[106,88,98,86,"name"],[106,92,98,90],[106,145,98,143],[106,146,98,144],[107,10,99,8],[108,10,100,8],[108,14,100,12,"component"],[108,23,100,21],[108,28,100,26,"undefined"],[108,37,100,35],[108,41,100,39],[108,42,100,40],[108,46,100,40,"isValidElementType"],[108,73,100,58],[108,75,100,59,"component"],[108,84,100,68],[108,85,100,69],[108,87,100,71],[109,12,101,10],[109,18,101,16],[109,22,101,20,"Error"],[109,27,101,25],[109,28,101,26],[109,89,101,87,"name"],[109,93,101,91],[109,133,101,131],[109,134,101,132],[110,10,102,8],[111,10,103,8],[111,14,103,12,"getComponent"],[111,26,103,24],[111,31,103,29,"undefined"],[111,40,103,38],[111,44,103,42],[111,51,103,49,"getComponent"],[111,63,103,61],[111,68,103,66],[111,78,103,76],[111,80,103,78],[112,12,104,10],[112,18,104,16],[112,22,104,20,"Error"],[112,27,104,25],[112,28,104,26],[112,92,104,90,"name"],[112,96,104,94],[112,151,104,149],[112,152,104,150],[113,10,105,8],[114,10,106,8],[114,14,106,12],[114,21,106,19,"component"],[114,30,106,28],[114,35,106,33],[114,45,106,43],[114,47,106,45],[115,12,107,10],[115,16,107,14,"component"],[115,25,107,23],[115,26,107,24,"name"],[115,30,107,28],[115,35,107,33],[115,46,107,44],[115,48,107,46],[116,14,108,12],[117,14,109,12],[118,14,110,12],[119,14,111,12,"console"],[119,21,111,19],[119,22,111,20,"warn"],[119,26,111,24],[119,27,111,25],[119,112,111,110,"name"],[119,116,111,114],[119,395,111,393],[119,396,111,394],[120,12,112,10],[120,13,112,11],[120,19,112,17],[120,23,112,21],[120,31,112,29],[120,32,112,30,"test"],[120,36,112,34],[120,37,112,35,"component"],[120,46,112,44],[120,47,112,45,"name"],[120,51,112,49],[120,52,112,50],[120,54,112,52],[121,14,113,12,"console"],[121,21,113,19],[121,22,113,20,"warn"],[121,26,113,24],[121,27,113,25],[121,61,113,59,"component"],[121,70,113,68],[121,71,113,69,"name"],[121,75,113,73],[121,96,113,94,"name"],[121,100,113,98],[121,301,113,299],[121,302,113,300],[122,12,114,10],[123,10,115,8],[124,8,116,6],[124,9,116,7],[124,15,116,13],[125,10,117,8],[125,16,117,14],[125,20,117,18,"Error"],[125,25,117,23],[125,26,117,24],[125,108,117,106,"name"],[125,112,117,110],[125,293,117,291],[125,294,117,292],[126,8,118,6],[127,6,119,4],[127,7,119,5],[127,8,119,6],[128,4,120,2],[129,4,121,2],[129,11,121,9,"configs"],[129,18,121,16],[130,2,122,0],[130,3,122,1],[132,2,124,0],[133,0,125,0],[134,0,126,0],[135,0,127,0],[136,0,128,0],[137,0,129,0],[138,0,130,0],[139,2,131,7],[139,11,131,16,"useNavigationBuilder"],[139,31,131,36,"useNavigationBuilder"],[139,32,131,37,"createRouter"],[139,44,131,49],[139,46,131,51,"options"],[139,53,131,58],[139,55,131,60],[140,4,132,2],[140,10,132,8,"navigatorKey"],[140,22,132,20],[140,25,132,23],[140,29,132,23,"useRegisterNavigator"],[140,71,132,43],[140,73,132,44],[140,74,132,45],[141,4,133,2],[141,10,133,8,"route"],[141,15,133,13],[141,18,133,16,"React"],[141,23,133,21],[141,24,133,22,"useContext"],[141,34,133,32],[141,35,133,33,"NavigationRouteContext"],[141,81,133,55],[141,82,133,56],[142,4,134,2],[142,10,134,8],[143,8,135,4,"children"],[143,16,135,12],[144,8,136,4,"layout"],[144,14,136,10],[145,8,137,4,"screenOptions"],[145,21,137,17],[146,8,138,4,"screenLayout"],[146,20,138,16],[147,8,139,4,"screenListeners"],[147,23,139,19],[148,8,140,4,"UNSTABLE_router"],[149,6,142,2],[149,7,142,3],[149,10,142,6,"options"],[149,17,142,13],[150,6,141,7,"rest"],[150,10,141,11],[150,17,141,11,"_objectWithoutPropertiesLoose2"],[150,47,141,11],[150,48,141,11,"default"],[150,55,141,11],[150,57,142,6,"options"],[150,64,142,13],[150,66,142,13,"_excluded"],[150,75,142,13],[151,4,143,2],[151,10,143,8,"routeConfigs"],[151,22,143,20],[151,25,143,23,"getRouteConfigsFromChildren"],[151,52,143,50],[151,53,143,51,"children"],[151,61,143,59],[151,62,143,60],[152,4,144,2],[152,10,144,8,"router"],[152,16,144,14],[152,19,144,17],[152,23,144,17,"useLazyValue"],[152,49,144,29],[152,51,144,30],[152,57,144,36],[153,6,145,4],[153,10,145,8,"rest"],[153,14,145,12],[153,15,145,13,"initialRouteName"],[153,31,145,29],[153,35,145,33],[153,39,145,37],[153,43,145,41,"routeConfigs"],[153,55,145,53],[153,56,145,54,"every"],[153,61,145,59],[153,62,145,60,"config"],[153,68,145,66],[153,72,145,70,"config"],[153,78,145,76],[153,79,145,77,"props"],[153,84,145,82],[153,85,145,83,"name"],[153,89,145,87],[153,94,145,92,"rest"],[153,98,145,96],[153,99,145,97,"initialRouteName"],[153,115,145,113],[153,116,145,114],[153,118,145,116],[154,8,146,6],[154,14,146,12],[154,18,146,16,"Error"],[154,23,146,21],[154,24,146,22],[154,57,146,55,"rest"],[154,61,146,59],[154,62,146,60,"initialRouteName"],[154,78,146,76],[154,111,146,109],[154,112,146,110],[155,6,147,4],[156,6,148,4],[156,12,148,10,"original"],[156,20,148,18],[156,23,148,21,"createRouter"],[156,35,148,33],[156,36,148,34,"rest"],[156,40,148,38],[156,41,148,39],[157,6,149,4],[157,10,149,8,"UNSTABLE_router"],[157,25,149,23],[157,29,149,27],[157,33,149,31],[157,35,149,33],[158,8,150,6],[158,14,150,12,"overrides"],[158,23,150,21],[158,26,150,24,"UNSTABLE_router"],[158,41,150,39],[158,42,150,40,"original"],[158,50,150,48],[158,51,150,49],[159,8,151,6],[159,15,151,6,"Object"],[159,21,151,6],[159,22,151,6,"assign"],[159,28,151,6],[159,33,152,11,"original"],[159,41,152,19],[159,43,153,11,"overrides"],[159,52,153,20],[160,6,155,4],[161,6,156,4],[161,13,156,11,"original"],[161,21,156,19],[162,4,157,2],[162,5,157,3],[162,6,157,4],[163,4,158,2],[163,10,158,8,"screens"],[163,17,158,15],[163,20,158,18,"routeConfigs"],[163,32,158,30],[163,33,158,31,"reduce"],[163,39,158,37],[163,40,158,38],[163,41,158,39,"acc"],[163,44,158,42],[163,46,158,44,"config"],[163,52,158,50],[163,57,158,55],[164,6,159,4],[164,10,159,8,"config"],[164,16,159,14],[164,17,159,15,"props"],[164,22,159,20],[164,23,159,21,"name"],[164,27,159,25],[164,31,159,29,"acc"],[164,34,159,32],[164,36,159,34],[165,8,160,6],[165,14,160,12],[165,18,160,16,"Error"],[165,23,160,21],[165,24,160,22],[165,133,160,131,"config"],[165,139,160,137],[165,140,160,138,"props"],[165,145,160,143],[165,146,160,144,"name"],[165,150,160,148],[165,154,160,152],[165,155,160,153],[166,6,161,4],[167,6,162,4,"acc"],[167,9,162,7],[167,10,162,8,"config"],[167,16,162,14],[167,17,162,15,"props"],[167,22,162,20],[167,23,162,21,"name"],[167,27,162,25],[167,28,162,26],[167,31,162,29,"config"],[167,37,162,35],[168,6,163,4],[168,13,163,11,"acc"],[168,16,163,14],[169,4,164,2],[169,5,164,3],[169,7,164,5],[169,8,164,6],[169,9,164,7],[169,10,164,8],[170,4,165,2],[170,10,165,8,"routeNames"],[170,20,165,18],[170,23,165,21,"routeConfigs"],[170,35,165,33],[170,36,165,34,"map"],[170,39,165,37],[170,40,165,38,"config"],[170,46,165,44],[170,50,165,48,"config"],[170,56,165,54],[170,57,165,55,"props"],[170,62,165,60],[170,63,165,61,"name"],[170,67,165,65],[170,68,165,66],[171,4,166,2],[171,10,166,8,"routeKeyList"],[171,22,166,20],[171,25,166,23,"routeNames"],[171,35,166,33],[171,36,166,34,"reduce"],[171,42,166,40],[171,43,166,41],[171,44,166,42,"acc"],[171,47,166,45],[171,49,166,47,"curr"],[171,53,166,51],[171,58,166,56],[172,6,167,4,"acc"],[172,9,167,7],[172,10,167,8,"curr"],[172,14,167,12],[172,15,167,13],[172,18,167,16,"screens"],[172,25,167,23],[172,26,167,24,"curr"],[172,30,167,28],[172,31,167,29],[172,32,167,30,"keys"],[172,36,167,34],[172,37,167,35,"map"],[172,40,167,38],[172,41,167,39,"key"],[172,44,167,42],[172,48,167,46,"key"],[172,51,167,49],[172,55,167,53],[172,57,167,55],[172,58,167,56],[172,59,167,57,"join"],[172,63,167,61],[172,64,167,62],[172,67,167,65],[172,68,167,66],[173,6,168,4],[173,13,168,11,"acc"],[173,16,168,14],[174,4,169,2],[174,5,169,3],[174,7,169,5],[174,8,169,6],[174,9,169,7],[174,10,169,8],[175,4,170,2],[175,10,170,8,"routeParamList"],[175,24,170,22],[175,27,170,25,"routeNames"],[175,37,170,35],[175,38,170,36,"reduce"],[175,44,170,42],[175,45,170,43],[175,46,170,44,"acc"],[175,49,170,47],[175,51,170,49,"curr"],[175,55,170,53],[175,60,170,58],[176,6,171,4],[176,12,171,10],[177,8,172,6,"initialParams"],[178,6,173,4],[178,7,173,5],[178,10,173,8,"screens"],[178,17,173,15],[178,18,173,16,"curr"],[178,22,173,20],[178,23,173,21],[178,24,173,22,"props"],[178,29,173,27],[179,6,174,4,"acc"],[179,9,174,7],[179,10,174,8,"curr"],[179,14,174,12],[179,15,174,13],[179,18,174,16,"initialParams"],[179,31,174,29],[180,6,175,4],[180,13,175,11,"acc"],[180,16,175,14],[181,4,176,2],[181,5,176,3],[181,7,176,5],[181,8,176,6],[181,9,176,7],[181,10,176,8],[182,4,177,2],[182,10,177,8,"routeGetIdList"],[182,24,177,22],[182,27,177,25,"routeNames"],[182,37,177,35],[182,38,177,36,"reduce"],[182,44,177,42],[182,45,177,43],[182,46,177,44,"acc"],[182,49,177,47],[182,51,177,49,"curr"],[182,55,177,53],[182,60,177,58,"Object"],[182,66,177,64],[182,67,177,65,"assign"],[182,73,177,71],[182,74,177,72,"acc"],[182,77,177,75],[182,79,177,77],[183,6,178,4],[183,7,178,5,"curr"],[183,11,178,9],[183,14,178,12,"screens"],[183,21,178,19],[183,22,178,20,"curr"],[183,26,178,24],[183,27,178,25],[183,28,178,26,"props"],[183,33,178,31],[183,34,178,32,"getId"],[184,4,179,2],[184,5,179,3],[184,6,179,4],[184,8,179,6],[184,9,179,7],[184,10,179,8],[184,11,179,9],[185,4,180,2],[185,8,180,6],[185,9,180,7,"routeNames"],[185,19,180,17],[185,20,180,18,"length"],[185,26,180,24],[185,28,180,26],[186,6,181,4],[186,12,181,10],[186,16,181,14,"Error"],[186,21,181,19],[186,22,181,20],[186,114,181,112],[186,115,181,113],[187,4,182,2],[188,4,183,2],[188,10,183,8,"isStateValid"],[188,22,183,20],[188,25,183,23,"React"],[188,30,183,28],[188,31,183,29,"useCallback"],[188,42,183,40],[188,43,183,41,"state"],[188,48,183,46],[188,52,183,50,"state"],[188,57,183,55],[188,58,183,56,"type"],[188,62,183,60],[188,67,183,65,"undefined"],[188,76,183,74],[188,80,183,78,"state"],[188,85,183,83],[188,86,183,84,"type"],[188,90,183,88],[188,95,183,93,"router"],[188,101,183,99],[188,102,183,100,"type"],[188,106,183,104],[188,108,183,106],[188,109,183,107,"router"],[188,115,183,113],[188,116,183,114,"type"],[188,120,183,118],[188,121,183,119],[188,122,183,120],[189,4,184,2],[189,10,184,8,"isStateInitialized"],[189,28,184,26],[189,31,184,29,"React"],[189,36,184,34],[189,37,184,35,"useCallback"],[189,48,184,46],[189,49,184,47,"state"],[189,54,184,52],[189,58,184,56,"state"],[189,63,184,61],[189,68,184,66,"undefined"],[189,77,184,75],[189,81,184,79,"state"],[189,86,184,84],[189,87,184,85,"stale"],[189,92,184,90],[189,97,184,95],[189,102,184,100],[189,106,184,104,"isStateValid"],[189,118,184,116],[189,119,184,117,"state"],[189,124,184,122],[189,125,184,123],[189,127,184,125],[189,128,184,126,"isStateValid"],[189,140,184,138],[189,141,184,139],[189,142,184,140],[190,4,185,2],[190,10,185,8],[191,6,186,4,"state"],[191,11,186,9],[191,13,186,11,"currentState"],[191,25,186,23],[192,6,187,4,"getState"],[192,14,187,12],[192,16,187,14,"getCurrentState"],[192,31,187,29],[193,6,188,4,"setState"],[193,14,188,12],[193,16,188,14,"setCurrentState"],[193,31,188,29],[194,6,189,4,"setKey"],[194,12,189,10],[195,6,190,4,"getKey"],[195,12,190,10],[196,6,191,4,"getIsInitial"],[197,4,192,2],[197,5,192,3],[197,8,192,6,"React"],[197,13,192,11],[197,14,192,12,"useContext"],[197,24,192,22],[197,25,192,23,"NavigationStateContext"],[197,71,192,45],[197,72,192,46],[198,4,193,2],[198,10,193,8,"stateCleanedUp"],[198,24,193,22],[198,27,193,25,"React"],[198,32,193,30],[198,33,193,31,"useRef"],[198,39,193,37],[198,40,193,38],[198,45,193,43],[198,46,193,44],[199,4,194,2],[199,10,194,8,"setState"],[199,18,194,16],[199,21,194,19],[199,25,194,19,"useLatestCallback"],[199,51,194,36],[199,53,194,37,"state"],[199,58,194,42],[199,62,194,46],[200,6,195,4],[200,10,195,8,"stateCleanedUp"],[200,24,195,22],[200,25,195,23,"current"],[200,32,195,30],[200,34,195,32],[201,8,196,6],[202,8,197,6],[203,8,198,6],[204,8,199,6],[205,6,200,4],[206,6,201,4,"setCurrentState"],[206,21,201,19],[206,22,201,20,"state"],[206,27,201,25],[206,28,201,26],[207,4,202,2],[207,5,202,3],[207,6,202,4],[208,4,203,2],[208,10,203,8],[208,11,203,9,"initializedState"],[208,27,203,25],[208,29,203,27,"isFirstStateInitialization"],[208,55,203,53],[208,56,203,54],[208,59,203,57,"React"],[208,64,203,62],[208,65,203,63,"useMemo"],[208,72,203,70],[208,73,203,71],[208,79,203,77],[209,6,204,4],[209,12,204,10,"initialRouteParamList"],[209,33,204,31],[209,36,204,34,"routeNames"],[209,46,204,44],[209,47,204,45,"reduce"],[209,53,204,51],[209,54,204,52],[209,55,204,53,"acc"],[209,58,204,56],[209,60,204,58,"curr"],[209,64,204,62],[209,69,204,67],[210,8,205,6],[210,14,205,12],[211,10,206,8,"initialParams"],[212,8,207,6],[212,9,207,7],[212,12,207,10,"screens"],[212,19,207,17],[212,20,207,18,"curr"],[212,24,207,22],[212,25,207,23],[212,26,207,24,"props"],[212,31,207,29],[213,8,208,6],[213,14,208,12,"initialParamsFromParams"],[213,37,208,35],[213,40,208,38,"route"],[213,45,208,43],[213,47,208,45,"params"],[213,53,208,51],[213,55,208,53,"state"],[213,60,208,58],[213,64,208,62],[213,68,208,66],[213,72,208,70,"route"],[213,77,208,75],[213,79,208,77,"params"],[213,85,208,83],[213,87,208,85,"initial"],[213,94,208,92],[213,99,208,97],[213,104,208,102],[213,108,208,106,"route"],[213,113,208,111],[213,115,208,113,"params"],[213,121,208,119],[213,123,208,121,"screen"],[213,129,208,127],[213,134,208,132,"curr"],[213,138,208,136],[213,141,208,139,"route"],[213,146,208,144],[213,147,208,145,"params"],[213,153,208,151],[213,154,208,152,"params"],[213,160,208,158],[213,163,208,161,"undefined"],[213,172,208,170],[214,8,209,6,"acc"],[214,11,209,9],[214,12,209,10,"curr"],[214,16,209,14],[214,17,209,15],[214,20,209,18,"initialParams"],[214,33,209,31],[214,38,209,36,"undefined"],[214,47,209,45],[214,51,209,49,"initialParamsFromParams"],[214,74,209,72],[214,79,209,77,"undefined"],[214,88,209,86],[214,91,209,86,"Object"],[214,97,209,86],[214,98,209,86,"assign"],[214,104,209,86],[214,109,210,11,"initialParams"],[214,122,210,24],[214,124,211,11,"initialParamsFromParams"],[214,147,211,34],[214,151,212,10,"undefined"],[214,160,212,19],[215,8,213,6],[215,15,213,13,"acc"],[215,18,213,16],[216,6,214,4],[216,7,214,5],[216,9,214,7],[216,10,214,8],[216,11,214,9],[216,12,214,10],[218,6,216,4],[219,6,217,4],[220,6,218,4],[221,6,219,4],[222,6,220,4],[222,10,220,8],[222,11,220,9,"currentState"],[222,23,220,21],[222,28,220,26,"undefined"],[222,37,220,35],[222,41,220,39],[222,42,220,40,"isStateValid"],[222,54,220,52],[222,55,220,53,"currentState"],[222,67,220,65],[222,68,220,66],[222,73,220,71,"route"],[222,78,220,76],[222,80,220,78,"params"],[222,86,220,84],[222,88,220,86,"state"],[222,93,220,91],[222,97,220,95],[222,101,220,99],[222,105,220,103],[222,107,220,105],[222,114,220,112,"route"],[222,119,220,117],[222,121,220,119,"params"],[222,127,220,125],[222,129,220,127,"screen"],[222,135,220,133],[222,140,220,138],[222,148,220,146],[222,152,220,150,"route"],[222,157,220,155],[222,159,220,157,"params"],[222,165,220,163],[222,167,220,165,"initial"],[222,174,220,172],[222,179,220,177],[222,184,220,182],[222,185,220,183],[222,187,220,185],[223,8,221,6],[223,15,221,13],[223,16,221,14,"router"],[223,22,221,20],[223,23,221,21,"getInitialState"],[223,38,221,36],[223,39,221,37],[224,10,222,8,"routeNames"],[224,20,222,18],[225,10,223,8,"routeParamList"],[225,24,223,22],[225,26,223,24,"initialRouteParamList"],[225,47,223,45],[226,10,224,8,"routeGetIdList"],[227,8,225,6],[227,9,225,7],[227,10,225,8],[227,12,225,10],[227,16,225,14],[227,17,225,15],[228,6,226,4],[228,7,226,5],[228,13,226,11],[229,8,227,6],[229,12,227,10,"stateFromParams"],[229,27,227,25],[230,8,228,6],[230,12,228,10,"route"],[230,17,228,15],[230,19,228,17,"params"],[230,25,228,23],[230,27,228,25,"state"],[230,32,228,30],[230,36,228,34],[230,40,228,38],[230,42,228,40],[231,10,229,8,"stateFromParams"],[231,25,229,23],[231,28,229,26,"route"],[231,33,229,31],[231,34,229,32,"params"],[231,40,229,38],[231,41,229,39,"state"],[231,46,229,44],[232,8,230,6],[232,9,230,7],[232,15,230,13],[232,19,230,17],[232,26,230,24,"route"],[232,31,230,29],[232,33,230,31,"params"],[232,39,230,37],[232,41,230,39,"screen"],[232,47,230,45],[232,52,230,50],[232,60,230,58],[232,64,230,62,"route"],[232,69,230,67],[232,71,230,69,"params"],[232,77,230,75],[232,79,230,77,"initial"],[232,86,230,84],[232,91,230,89],[232,96,230,94],[232,98,230,96],[233,10,231,8,"stateFromParams"],[233,25,231,23],[233,28,231,26],[234,12,232,10,"index"],[234,17,232,15],[234,19,232,17],[234,20,232,18],[235,12,233,10,"routes"],[235,18,233,16],[235,20,233,18],[235,21,233,19],[236,14,234,12,"name"],[236,18,234,16],[236,20,234,18,"route"],[236,25,234,23],[236,26,234,24,"params"],[236,32,234,30],[236,33,234,31,"screen"],[236,39,234,37],[237,14,235,12,"params"],[237,20,235,18],[237,22,235,20,"route"],[237,27,235,25],[237,28,235,26,"params"],[237,34,235,32],[237,35,235,33,"params"],[237,41,235,39],[238,14,236,12,"path"],[238,18,236,16],[238,20,236,18,"route"],[238,25,236,23],[238,26,236,24,"params"],[238,32,236,30],[238,33,236,31,"path"],[239,12,237,10],[239,13,237,11],[240,10,238,8],[240,11,238,9],[241,8,239,6],[242,8,240,6],[242,15,240,13],[242,16,240,14,"router"],[242,22,240,20],[242,23,240,21,"getRehydratedState"],[242,41,240,39],[242,42,240,40,"stateFromParams"],[242,57,240,55],[242,61,240,59,"currentState"],[242,73,240,71],[242,75,240,73],[243,10,241,8,"routeNames"],[243,20,241,18],[244,10,242,8,"routeParamList"],[244,24,242,22],[244,26,242,24,"initialRouteParamList"],[244,47,242,45],[245,10,243,8,"routeGetIdList"],[246,8,244,6],[246,9,244,7],[246,10,244,8],[246,12,244,10],[246,17,244,15],[246,18,244,16],[247,6,245,4],[248,6,246,4],[249,6,247,4],[250,6,248,4],[251,6,249,4],[252,6,250,4],[253,6,251,4],[254,4,252,2],[254,5,252,3],[254,7,252,5],[254,8,252,6,"currentState"],[254,20,252,18],[254,22,252,20,"router"],[254,28,252,26],[254,30,252,28,"isStateValid"],[254,42,252,40],[254,43,252,41],[254,44,252,42],[255,4,253,2],[255,10,253,8,"previousRouteKeyListRef"],[255,33,253,31],[255,36,253,34,"React"],[255,41,253,39],[255,42,253,40,"useRef"],[255,48,253,46],[255,49,253,47,"routeKeyList"],[255,61,253,59],[255,62,253,60],[256,4,254,2,"React"],[256,9,254,7],[256,10,254,8,"useEffect"],[256,19,254,17],[256,20,254,18],[256,26,254,24],[257,6,255,4,"previousRouteKeyListRef"],[257,29,255,27],[257,30,255,28,"current"],[257,37,255,35],[257,40,255,38,"routeKeyList"],[257,52,255,50],[258,4,256,2],[258,5,256,3],[258,6,256,4],[259,4,257,2],[259,10,257,8,"previousRouteKeyList"],[259,30,257,28],[259,33,257,31,"previousRouteKeyListRef"],[259,56,257,54],[259,57,257,55,"current"],[259,64,257,62],[260,4,258,2],[260,8,258,6,"state"],[260,13,258,11],[261,4,259,2],[262,4,260,2],[263,4,261,2],[264,4,262,2,"isStateInitialized"],[264,22,262,20],[264,23,262,21,"currentState"],[264,35,262,33],[264,36,262,34],[264,39,262,37,"currentState"],[264,51,262,49],[264,54,262,52,"initializedState"],[264,70,262,68],[265,4,263,2],[265,8,263,6,"nextState"],[265,17,263,15],[265,20,263,18,"state"],[265,25,263,23],[266,4,264,2],[266,8,264,6],[266,9,264,7],[266,13,264,7,"isArrayEqual"],[266,39,264,19],[266,41,264,20,"state"],[266,46,264,25],[266,47,264,26,"routeNames"],[266,57,264,36],[266,59,264,38,"routeNames"],[266,69,264,48],[266,70,264,49],[266,74,264,53],[266,75,264,54],[266,79,264,54,"isRecordEqual"],[266,107,264,67],[266,109,264,68,"routeKeyList"],[266,121,264,80],[266,123,264,82,"previousRouteKeyList"],[266,143,264,102],[266,144,264,103],[266,146,264,105],[267,6,265,4],[268,6,266,4,"nextState"],[268,15,266,13],[268,18,266,16,"router"],[268,24,266,22],[268,25,266,23,"getStateForRouteNamesChange"],[268,52,266,50],[268,53,266,51,"state"],[268,58,266,56],[268,60,266,58],[269,8,267,6,"routeNames"],[269,18,267,16],[270,8,268,6,"routeParamList"],[270,22,268,20],[271,8,269,6,"routeGetIdList"],[271,22,269,20],[272,8,270,6,"routeKeyChanges"],[272,23,270,21],[272,25,270,23,"Object"],[272,31,270,29],[272,32,270,30,"keys"],[272,36,270,34],[272,37,270,35,"routeKeyList"],[272,49,270,47],[272,50,270,48],[272,51,270,49,"filter"],[272,57,270,55],[272,58,270,56,"name"],[272,62,270,60],[272,66,270,64,"name"],[272,70,270,68],[272,74,270,72,"previousRouteKeyList"],[272,94,270,92],[272,98,270,96,"routeKeyList"],[272,110,270,108],[272,111,270,109,"name"],[272,115,270,113],[272,116,270,114],[272,121,270,119,"previousRouteKeyList"],[272,141,270,139],[272,142,270,140,"name"],[272,146,270,144],[272,147,270,145],[273,6,271,4],[273,7,271,5],[273,8,271,6],[274,4,272,2],[275,4,273,2],[275,10,273,8,"previousNestedParamsRef"],[275,33,273,31],[275,36,273,34,"React"],[275,41,273,39],[275,42,273,40,"useRef"],[275,48,273,46],[275,49,273,47,"route"],[275,54,273,52],[275,56,273,54,"params"],[275,62,273,60],[275,63,273,61],[276,4,274,2,"React"],[276,9,274,7],[276,10,274,8,"useEffect"],[276,19,274,17],[276,20,274,18],[276,26,274,24],[277,6,275,4,"previousNestedParamsRef"],[277,29,275,27],[277,30,275,28,"current"],[277,37,275,35],[277,40,275,38,"route"],[277,45,275,43],[277,47,275,45,"params"],[277,53,275,51],[278,4,276,2],[278,5,276,3],[278,7,276,5],[278,8,276,6,"route"],[278,13,276,11],[278,15,276,13,"params"],[278,21,276,19],[278,22,276,20],[278,23,276,21],[279,4,277,2],[279,8,277,6,"route"],[279,13,277,11],[279,15,277,13,"params"],[279,21,277,19],[279,23,277,21],[280,6,278,4],[280,12,278,10,"previousParams"],[280,26,278,24],[280,29,278,27,"previousNestedParamsRef"],[280,52,278,50],[280,53,278,51,"current"],[280,60,278,58],[281,6,279,4],[281,10,279,8,"action"],[281,16,279,14],[282,6,280,4],[282,10,280,8],[282,17,280,15,"route"],[282,22,280,20],[282,23,280,21,"params"],[282,29,280,27],[282,30,280,28,"state"],[282,35,280,33],[282,40,280,38],[282,48,280,46],[282,52,280,50,"route"],[282,57,280,55],[282,58,280,56,"params"],[282,64,280,62],[282,65,280,63,"state"],[282,70,280,68],[282,74,280,72],[282,78,280,76],[282,82,280,80,"route"],[282,87,280,85],[282,88,280,86,"params"],[282,94,280,92],[282,99,280,97,"previousParams"],[282,113,280,111],[282,115,280,113],[283,8,281,6],[284,8,282,6,"action"],[284,14,282,12],[284,17,282,15,"CommonActions"],[284,39,282,28],[284,40,282,29,"reset"],[284,45,282,34],[284,46,282,35,"route"],[284,51,282,40],[284,52,282,41,"params"],[284,58,282,47],[284,59,282,48,"state"],[284,64,282,53],[284,65,282,54],[285,6,283,4],[285,7,283,5],[285,13,283,11],[285,17,283,15],[285,24,283,22,"route"],[285,29,283,27],[285,30,283,28,"params"],[285,36,283,34],[285,37,283,35,"screen"],[285,43,283,41],[285,48,283,46],[285,56,283,54],[285,61,283,59,"route"],[285,66,283,64],[285,67,283,65,"params"],[285,73,283,71],[285,74,283,72,"initial"],[285,81,283,79],[285,86,283,84],[285,91,283,89],[285,95,283,93,"isFirstStateInitialization"],[285,121,283,119],[285,125,283,123,"route"],[285,130,283,128],[285,131,283,129,"params"],[285,137,283,135],[285,142,283,140,"previousParams"],[285,156,283,154],[285,157,283,155],[285,159,283,157],[286,8,284,6],[287,8,285,6,"action"],[287,14,285,12],[287,17,285,15,"CommonActions"],[287,39,285,28],[287,40,285,29,"navigate"],[287,48,285,37],[287,49,285,38],[288,10,286,8,"name"],[288,14,286,12],[288,16,286,14,"route"],[288,21,286,19],[288,22,286,20,"params"],[288,28,286,26],[288,29,286,27,"screen"],[288,35,286,33],[289,10,287,8,"params"],[289,16,287,14],[289,18,287,16,"route"],[289,23,287,21],[289,24,287,22,"params"],[289,30,287,28],[289,31,287,29,"params"],[289,37,287,35],[290,10,288,8,"path"],[290,14,288,12],[290,16,288,14,"route"],[290,21,288,19],[290,22,288,20,"params"],[290,28,288,26],[290,29,288,27,"path"],[290,33,288,31],[291,10,289,8,"pop"],[291,13,289,11],[291,15,289,13,"route"],[291,20,289,18],[291,21,289,19,"params"],[291,27,289,25],[291,28,289,26,"pop"],[292,8,290,6],[292,9,290,7],[292,10,290,8],[293,6,291,4],[295,6,293,4],[296,6,294,4],[296,12,294,10,"updatedState"],[296,24,294,22],[296,27,294,25,"action"],[296,33,294,31],[296,36,294,34,"router"],[296,42,294,40],[296,43,294,41,"getStateForAction"],[296,60,294,58],[296,61,294,59,"nextState"],[296,70,294,68],[296,72,294,70,"action"],[296,78,294,76],[296,80,294,78],[297,8,295,6,"routeNames"],[297,18,295,16],[298,8,296,6,"routeParamList"],[298,22,296,20],[299,8,297,6,"routeGetIdList"],[300,6,298,4],[300,7,298,5],[300,8,298,6],[300,11,298,9],[300,15,298,13],[301,6,299,4,"nextState"],[301,15,299,13],[301,18,299,16,"updatedState"],[301,30,299,28],[301,35,299,33],[301,39,299,37],[301,42,299,40,"router"],[301,48,299,46],[301,49,299,47,"getRehydratedState"],[301,67,299,65],[301,68,299,66,"updatedState"],[301,80,299,78],[301,82,299,80],[302,8,300,6,"routeNames"],[302,18,300,16],[303,8,301,6,"routeParamList"],[303,22,301,20],[304,8,302,6,"routeGetIdList"],[305,6,303,4],[305,7,303,5],[305,8,303,6],[305,11,303,9,"nextState"],[305,20,303,18],[306,4,304,2],[307,4,305,2],[307,10,305,8,"shouldUpdate"],[307,22,305,20],[307,25,305,23,"state"],[307,30,305,28],[307,35,305,33,"nextState"],[307,44,305,42],[308,4,306,2],[308,8,306,2,"useScheduleUpdate"],[308,44,306,19],[308,46,306,20],[308,52,306,26],[309,6,307,4],[309,10,307,8,"shouldUpdate"],[309,22,307,20],[309,24,307,22],[310,8,308,6],[311,8,309,6,"setState"],[311,16,309,14],[311,17,309,15,"nextState"],[311,26,309,24],[311,27,309,25],[312,6,310,4],[313,4,311,2],[313,5,311,3],[313,6,311,4],[315,4,313,2],[316,4,314,2],[317,4,315,2],[318,4,316,2,"state"],[318,9,316,7],[318,12,316,10,"nextState"],[318,21,316,19],[319,4,317,2,"React"],[319,9,317,7],[319,10,317,8,"useEffect"],[319,19,317,17],[319,20,317,18],[319,26,317,24],[320,6,318,4],[321,6,319,4],[322,6,320,4,"stateCleanedUp"],[322,20,320,18],[322,21,320,19,"current"],[322,28,320,26],[322,31,320,29],[322,36,320,34],[323,6,321,4,"setKey"],[323,12,321,10],[323,13,321,11,"navigatorKey"],[323,25,321,23],[323,26,321,24],[324,6,322,4],[324,10,322,8],[324,11,322,9,"getIsInitial"],[324,23,322,21],[324,24,322,22],[324,25,322,23],[324,27,322,25],[325,8,323,6],[326,8,324,6],[327,8,325,6],[328,8,326,6,"setState"],[328,16,326,14],[328,17,326,15,"nextState"],[328,26,326,24],[328,27,326,25],[329,6,327,4],[330,6,328,4],[330,13,328,11],[330,19,328,17],[331,8,329,6],[332,8,330,6],[332,12,330,10,"getCurrentState"],[332,27,330,25],[332,28,330,26],[332,29,330,27],[332,34,330,32,"undefined"],[332,43,330,41],[332,47,330,45,"getKey"],[332,53,330,51],[332,54,330,52],[332,55,330,53],[332,60,330,58,"navigatorKey"],[332,72,330,70],[332,74,330,72],[333,10,331,8,"setCurrentState"],[333,25,331,23],[333,26,331,24,"undefined"],[333,35,331,33],[333,36,331,34],[334,10,332,8,"stateCleanedUp"],[334,24,332,22],[334,25,332,23,"current"],[334,32,332,30],[334,35,332,33],[334,39,332,37],[335,8,333,6],[336,6,334,4],[336,7,334,5],[337,6,335,4],[338,4,336,2],[338,5,336,3],[338,7,336,5],[338,9,336,7],[338,10,336,8],[340,4,338,2],[341,4,339,2],[342,4,340,2],[343,4,341,2],[344,4,342,2],[345,4,343,2],[345,10,343,8,"stateRef"],[345,18,343,16],[345,21,343,19,"React"],[345,26,343,24],[345,27,343,25,"useRef"],[345,33,343,31],[345,34,343,32,"state"],[345,39,343,37],[345,40,343,38],[346,4,344,2,"stateRef"],[346,12,344,10],[346,13,344,11,"current"],[346,20,344,18],[346,23,344,21,"state"],[346,28,344,26],[347,4,345,2],[347,8,345,2,"useIsomorphicLayoutEffect"],[347,60,345,27],[347,62,345,28],[347,68,345,34],[348,6,346,4,"stateRef"],[348,14,346,12],[348,15,346,13,"current"],[348,22,346,20],[348,25,346,23],[348,29,346,27],[349,4,347,2],[349,5,347,3],[349,6,347,4],[350,4,348,2],[350,10,348,8,"getState"],[350,18,348,16],[350,21,348,19],[350,25,348,19,"useLatestCallback"],[350,51,348,36],[350,53,348,37],[350,59,348,43],[351,6,349,4],[351,12,349,10,"currentState"],[351,24,349,22],[351,27,349,25,"getCurrentState"],[351,42,349,40],[351,43,349,41],[351,44,349,42],[352,6,350,4],[352,13,350,11],[352,17,350,11,"deepFreeze"],[352,39,350,21],[352,41,350,22,"isStateInitialized"],[352,59,350,40],[352,60,350,41,"currentState"],[352,72,350,53],[352,73,350,54],[352,76,350,57,"currentState"],[352,88,350,69],[352,91,350,72,"initializedState"],[352,107,350,88],[352,108,350,89],[353,4,351,2],[353,5,351,3],[353,6,351,4],[354,4,352,2],[354,10,352,8,"emitter"],[354,17,352,15],[354,20,352,18],[354,24,352,18,"useEventEmitter"],[354,56,352,33],[354,58,352,34,"e"],[354,59,352,35],[354,63,352,39],[355,6,353,4],[355,12,353,10,"routeNames"],[355,22,353,20],[355,25,353,23],[355,27,353,25],[356,6,354,4],[356,10,354,8,"route"],[356,15,354,13],[357,6,355,4],[357,10,355,8,"e"],[357,11,355,9],[357,12,355,10,"target"],[357,18,355,16],[357,20,355,18],[358,8,356,6,"route"],[358,13,356,11],[358,16,356,14,"state"],[358,21,356,19],[358,22,356,20,"routes"],[358,28,356,26],[358,29,356,27,"find"],[358,33,356,31],[358,34,356,32,"route"],[358,39,356,37],[358,43,356,41,"route"],[358,48,356,46],[358,49,356,47,"key"],[358,52,356,50],[358,57,356,55,"e"],[358,58,356,56],[358,59,356,57,"target"],[358,65,356,63],[358,66,356,64],[359,8,357,6],[359,12,357,10,"route"],[359,17,357,15],[359,19,357,17,"name"],[359,23,357,21],[359,25,357,23],[360,10,358,8,"routeNames"],[360,20,358,18],[360,21,358,19,"push"],[360,25,358,23],[360,26,358,24,"route"],[360,31,358,29],[360,32,358,30,"name"],[360,36,358,34],[360,37,358,35],[361,8,359,6],[362,6,360,4],[362,7,360,5],[362,13,360,11],[363,8,361,6,"route"],[363,13,361,11],[363,16,361,14,"state"],[363,21,361,19],[363,22,361,20,"routes"],[363,28,361,26],[363,29,361,27,"state"],[363,34,361,32],[363,35,361,33,"index"],[363,40,361,38],[363,41,361,39],[364,8,362,6,"routeNames"],[364,18,362,16],[364,19,362,17,"push"],[364,23,362,21],[364,24,362,22],[364,27,362,25,"Object"],[364,33,362,31],[364,34,362,32,"keys"],[364,38,362,36],[364,39,362,37,"screens"],[364,46,362,44],[364,47,362,45],[364,48,362,46,"filter"],[364,54,362,52],[364,55,362,53,"name"],[364,59,362,57],[364,63,362,61,"route"],[364,68,362,66],[364,70,362,68,"name"],[364,74,362,72],[364,79,362,77,"name"],[364,83,362,81],[364,84,362,82],[364,85,362,83],[365,6,363,4],[366,6,364,4],[366,10,364,8,"route"],[366,15,364,13],[366,19,364,17],[366,23,364,21],[366,25,364,23],[367,8,365,6],[368,6,366,4],[369,6,367,4],[369,12,367,10,"navigation"],[369,22,367,20],[369,25,367,23,"descriptors"],[369,36,367,34],[369,37,367,35,"route"],[369,42,367,40],[369,43,367,41,"key"],[369,46,367,44],[369,47,367,45],[369,48,367,46,"navigation"],[369,58,367,56],[370,6,368,4],[370,12,368,10,"listeners"],[370,21,368,19],[370,24,368,22],[370,26,368,24],[370,27,368,25,"concat"],[370,33,368,31],[371,6,369,4],[372,6,370,4],[372,9,370,7],[372,10,370,8,"screenListeners"],[372,25,370,23],[372,27,370,25],[372,30,370,28,"routeNames"],[372,40,370,38],[372,41,370,39,"map"],[372,44,370,42],[372,45,370,43,"name"],[372,49,370,47],[372,53,370,51],[373,8,371,6],[373,14,371,12],[374,10,372,8,"listeners"],[375,8,373,6],[375,9,373,7],[375,12,373,10,"screens"],[375,19,373,17],[375,20,373,18,"name"],[375,24,373,22],[375,25,373,23],[375,26,373,24,"props"],[375,31,373,29],[376,8,374,6],[376,15,374,13,"listeners"],[376,24,374,22],[377,6,375,4],[377,7,375,5],[377,8,375,6],[377,9,375,7],[377,10,375,8,"map"],[377,13,375,11],[377,14,375,12,"listeners"],[377,23,375,21],[377,27,375,25],[378,8,376,6],[378,14,376,12,"map"],[378,17,376,15],[378,20,376,18],[378,27,376,25,"listeners"],[378,36,376,34],[378,41,376,39],[378,51,376,49],[378,54,376,52,"listeners"],[378,63,376,61],[378,64,376,62],[379,10,377,8,"route"],[379,15,377,13],[379,17,377,15,"route"],[379,22,377,20],[380,10,378,8,"navigation"],[381,8,379,6],[381,9,379,7],[381,10,379,8],[381,13,379,11,"listeners"],[381,22,379,20],[382,8,380,6],[382,15,380,13,"map"],[382,18,380,16],[382,21,380,19,"Object"],[382,27,380,25],[382,28,380,26,"keys"],[382,32,380,30],[382,33,380,31,"map"],[382,36,380,34],[382,37,380,35],[382,38,380,36,"filter"],[382,44,380,42],[382,45,380,43,"type"],[382,49,380,47],[382,53,380,51,"type"],[382,57,380,55],[382,62,380,60,"e"],[382,63,380,61],[382,64,380,62,"type"],[382,68,380,66],[382,69,380,67],[382,70,380,68,"map"],[382,73,380,71],[382,74,380,72,"type"],[382,78,380,76],[382,82,380,80,"map"],[382,85,380,83],[382,88,380,86,"type"],[382,92,380,90],[382,93,380,91],[382,94,380,92],[382,97,380,95,"undefined"],[382,106,380,104],[383,6,381,4],[383,7,381,5],[383,8,381,6],[384,6,382,4],[385,6,383,4],[386,6,383,4],[386,7,384,5,"filter"],[386,13,384,11],[386,14,384,12],[386,15,384,13,"cb"],[386,17,384,15],[386,19,384,17,"i"],[386,20,384,18],[386,22,384,20,"self"],[386,26,384,24],[386,31,384,29,"cb"],[386,33,384,31],[386,37,384,35,"self"],[386,41,384,39],[386,42,384,40,"lastIndexOf"],[386,53,384,51],[386,54,384,52,"cb"],[386,56,384,54],[386,57,384,55],[386,62,384,60,"i"],[386,63,384,61],[386,64,384,62],[387,6,385,4,"listeners"],[387,15,385,13],[387,16,385,14,"forEach"],[387,23,385,21],[387,24,385,22,"listener"],[387,32,385,30],[387,36,385,34,"listener"],[387,44,385,42],[387,47,385,45,"e"],[387,48,385,46],[387,49,385,47],[387,50,385,48],[388,4,386,2],[388,5,386,3],[388,6,386,4],[389,4,387,2],[389,8,387,2,"useFocusEvents"],[389,38,387,16],[389,40,387,17],[390,6,388,4,"state"],[390,11,388,9],[391,6,389,4,"emitter"],[392,4,390,2],[392,5,390,3],[392,6,390,4],[393,4,391,2,"React"],[393,9,391,7],[393,10,391,8,"useEffect"],[393,19,391,17],[393,20,391,18],[393,26,391,24],[394,6,392,4,"emitter"],[394,13,392,11],[394,14,392,12,"emit"],[394,18,392,16],[394,19,392,17],[395,8,393,6,"type"],[395,12,393,10],[395,14,393,12],[395,21,393,19],[396,8,394,6,"data"],[396,12,394,10],[396,14,394,12],[397,10,395,8,"state"],[398,8,396,6],[399,6,397,4],[399,7,397,5],[399,8,397,6],[400,4,398,2],[400,5,398,3],[400,7,398,5],[400,8,398,6,"emitter"],[400,15,398,13],[400,17,398,15,"state"],[400,22,398,20],[400,23,398,21],[400,24,398,22],[401,4,399,2],[401,10,399,8],[402,6,400,4,"listeners"],[402,15,400,13],[402,17,400,15,"childListeners"],[402,31,400,29],[403,6,401,4,"addListener"],[404,4,402,2],[404,5,402,3],[404,8,402,6],[404,12,402,6,"useChildListeners"],[404,48,402,23],[404,50,402,24],[404,51,402,25],[405,4,403,2],[405,10,403,8],[406,6,404,4,"keyedListeners"],[406,20,404,18],[407,6,405,4,"addKeyedListener"],[408,4,406,2],[408,5,406,3],[408,8,406,6],[408,12,406,6,"useKeyedChildListeners"],[408,58,406,28],[408,60,406,29],[408,61,406,30],[409,4,407,2],[409,10,407,8,"onAction"],[409,18,407,16],[409,21,407,19],[409,25,407,19,"useOnAction"],[409,49,407,30],[409,51,407,31],[410,6,408,4,"router"],[410,12,408,10],[411,6,409,4,"getState"],[411,14,409,12],[412,6,410,4,"setState"],[412,14,410,12],[413,6,411,4,"key"],[413,9,411,7],[413,11,411,9,"route"],[413,16,411,14],[413,18,411,16,"key"],[413,21,411,19],[414,6,412,4,"actionListeners"],[414,21,412,19],[414,23,412,21,"childListeners"],[414,37,412,35],[414,38,412,36,"action"],[414,44,412,42],[415,6,413,4,"beforeRemoveListeners"],[415,27,413,25],[415,29,413,27,"keyedListeners"],[415,43,413,41],[415,44,413,42,"beforeRemove"],[415,56,413,54],[416,6,414,4,"routerConfigOptions"],[416,25,414,23],[416,27,414,25],[417,8,415,6,"routeNames"],[417,18,415,16],[418,8,416,6,"routeParamList"],[418,22,416,20],[419,8,417,6,"routeGetIdList"],[420,6,418,4],[420,7,418,5],[421,6,419,4,"emitter"],[422,4,420,2],[422,5,420,3],[422,6,420,4],[423,4,421,2],[423,10,421,8,"onRouteFocus"],[423,22,421,20],[423,25,421,23],[423,29,421,23,"useOnRouteFocus"],[423,61,421,38],[423,63,421,39],[424,6,422,4,"router"],[424,12,422,10],[425,6,423,4,"key"],[425,9,423,7],[425,11,423,9,"route"],[425,16,423,14],[425,18,423,16,"key"],[425,21,423,19],[426,6,424,4,"getState"],[426,14,424,12],[427,6,425,4,"setState"],[428,4,426,2],[428,5,426,3],[428,6,426,4],[429,4,427,2],[429,10,427,8,"navigation"],[429,20,427,18],[429,23,427,21],[429,27,427,21,"useNavigationHelpers"],[429,69,427,41],[429,71,427,42],[430,6,428,4,"id"],[430,8,428,6],[430,10,428,8,"options"],[430,17,428,15],[430,18,428,16,"id"],[430,20,428,18],[431,6,429,4,"onAction"],[431,14,429,12],[432,6,430,4,"getState"],[432,14,430,12],[433,6,431,4,"emitter"],[433,13,431,11],[434,6,432,4,"router"],[434,12,432,10],[435,6,433,4,"stateRef"],[436,4,434,2],[436,5,434,3],[436,6,434,4],[437,4,435,2],[437,8,435,2,"useFocusedListenersChildrenAdapter"],[437,78,435,36],[437,80,435,37],[438,6,436,4,"navigation"],[438,16,436,14],[439,6,437,4,"focusedListeners"],[439,22,437,20],[439,24,437,22,"childListeners"],[439,38,437,36],[439,39,437,37,"focus"],[440,4,438,2],[440,5,438,3],[440,6,438,4],[441,4,439,2],[441,8,439,2,"useOnGetState"],[441,36,439,15],[441,38,439,16],[442,6,440,4,"getState"],[442,14,440,12],[443,6,441,4,"getStateListeners"],[443,23,441,21],[443,25,441,23,"keyedListeners"],[443,39,441,37],[443,40,441,38,"getState"],[444,4,442,2],[444,5,442,3],[444,6,442,4],[445,4,443,2],[445,10,443,8],[446,6,444,4,"describe"],[446,14,444,12],[447,6,445,4,"descriptors"],[448,4,446,2],[448,5,446,3],[448,8,446,6],[448,12,446,6,"useDescriptors"],[448,42,446,20],[448,44,446,21],[449,6,447,4,"state"],[449,11,447,9],[450,6,448,4,"screens"],[450,13,448,11],[451,6,449,4,"navigation"],[451,16,449,14],[452,6,450,4,"screenOptions"],[452,19,450,17],[453,6,451,4,"screenLayout"],[453,18,451,16],[454,6,452,4,"onAction"],[454,14,452,12],[455,6,453,4,"getState"],[455,14,453,12],[456,6,454,4,"setState"],[456,14,454,12],[457,6,455,4,"onRouteFocus"],[457,18,455,16],[458,6,456,4,"addListener"],[458,17,456,15],[459,6,457,4,"addKeyedListener"],[459,22,457,20],[460,6,458,4,"router"],[460,12,458,10],[461,6,459,4],[462,6,460,4,"emitter"],[463,4,461,2],[463,5,461,3],[463,6,461,4],[464,4,462,2],[464,8,462,2,"useCurrentRender"],[464,42,462,18],[464,44,462,19],[465,6,463,4,"state"],[465,11,463,9],[466,6,464,4,"navigation"],[466,16,464,14],[467,6,465,4,"descriptors"],[468,4,466,2],[468,5,466,3],[468,6,466,4],[469,4,467,2],[469,10,467,8,"NavigationContent"],[469,27,467,25],[469,30,467,28],[469,34,467,28,"useComponent"],[469,60,467,40],[469,62,467,41,"children"],[469,70,467,49],[469,74,467,53],[470,6,468,4],[470,12,468,10,"element"],[470,19,468,17],[470,22,468,20,"layout"],[470,28,468,26],[470,32,468,30],[470,36,468,34],[470,39,468,37,"layout"],[470,45,468,43],[470,46,468,44],[471,8,469,6,"state"],[471,13,469,11],[472,8,470,6,"descriptors"],[472,19,470,17],[473,8,471,6,"navigation"],[473,18,471,16],[474,8,472,6,"children"],[475,6,473,4],[475,7,473,5],[475,8,473,6],[475,11,473,9,"children"],[475,19,473,17],[476,6,474,4],[476,13,474,11],[476,26,474,24],[476,30,474,24,"_jsx"],[476,45,474,28],[476,47,474,29,"NavigationHelpersContext"],[476,97,474,53],[476,98,474,54,"Provider"],[476,106,474,62],[476,108,474,64],[477,8,475,6,"value"],[477,13,475,11],[477,15,475,13,"navigation"],[477,25,475,23],[478,8,476,6,"children"],[478,16,476,14],[478,18,476,16],[478,31,476,29],[478,35,476,29,"_jsx"],[478,50,476,33],[478,52,476,34,"PreventRemoveProvider"],[478,96,476,55],[478,98,476,57],[479,10,477,8,"children"],[479,18,477,16],[479,20,477,18,"element"],[480,8,478,6],[480,9,478,7],[481,6,479,4],[481,7,479,5],[481,8,479,6],[482,4,480,2],[482,5,480,3],[482,6,480,4],[483,4,481,2],[483,11,481,9],[484,6,482,4,"state"],[484,11,482,9],[485,6,483,4,"navigation"],[485,16,483,14],[486,6,484,4,"describe"],[486,14,484,12],[487,6,485,4,"descriptors"],[487,17,485,15],[488,6,486,4,"NavigationContent"],[489,4,487,2],[489,5,487,3],[490,2,488,0],[491,0,488,1],[491,3]],"functionMap":{"names":["<global>","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","useLazyValue$argument_0","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","useLatestCallback$argument_0","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","useScheduleUpdate$argument_0","<anonymous>","useIsomorphicLayoutEffect$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0","useComponent$argument_0"],"mappings":"AAA;mBCqC,iED;oCEO;0DCC;GD6B;oBEE;KF0C;CFG;OKS;8BCa;4DCC,qDD;GDY;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;qCSU;GTQ;uEUC;oDLC;KKU;GVsC;kBWE;GXE;wDYc,yFZ;kBWI;GXE;oBa8B;GbK;kBWM;WGW;KHM;GXE;4BeS;GfE;qCSC;GTG;kCgBC;gCCI,+BD;qDJM,4BI;2CEQ;KFK,OG;2CPK,uBO,MC,mBD;KHC;YKG,iDL;sBMC,yBN;GhBC;kBWK;GXO;yCuBqE;GvBa;CLQ"}},"type":"js/module"}]}