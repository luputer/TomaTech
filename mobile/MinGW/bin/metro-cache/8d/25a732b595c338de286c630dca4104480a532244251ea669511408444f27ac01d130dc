{"dependencies":[{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var invariant = require(_dependencyMap[0], \"invariant\");\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    if (typeof aspectRatio !== 'string') {\n      if (__DEV__) {\n        invariant(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var matches = aspectRatio.split('/').map(s => s.trim());\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        invariant(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n    if (__DEV__) {\n      invariant(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  module.exports = processAspectRatio;\n});","lineCount":35,"map":[[2,2,11,0],[2,14,11,12],[4,2,13,0],[4,6,13,6,"invariant"],[4,15,13,15],[4,18,13,18,"require"],[4,25,13,25],[4,26,13,25,"_dependencyMap"],[4,40,13,25],[4,56,13,37],[4,57,13,38],[5,2,15,0],[5,11,15,9,"processAspectRatio"],[5,29,15,27,"processAspectRatio"],[5,30,15,28,"aspectRatio"],[5,41,15,57],[5,43,15,68],[6,4,16,2],[6,8,16,6],[6,15,16,13,"aspectRatio"],[6,26,16,24],[6,31,16,29],[6,39,16,37],[6,41,16,39],[7,6,17,4],[7,13,17,11,"aspectRatio"],[7,24,17,22],[8,4,18,2],[9,4,19,2],[9,8,19,6],[9,15,19,13,"aspectRatio"],[9,26,19,24],[9,31,19,29],[9,39,19,37],[9,41,19,39],[10,6,20,4],[10,10,20,8,"__DEV__"],[10,17,20,15],[10,19,20,17],[11,8,21,6,"invariant"],[11,17,21,15],[11,18,22,8],[11,19,22,9,"aspectRatio"],[11,30,22,20],[11,32,23,8],[11,111,23,87],[11,113,24,8,"aspectRatio"],[11,124,25,6],[11,125,25,7],[12,6,26,4],[13,6,27,4],[14,4,28,2],[15,4,30,2],[15,8,30,8,"matches"],[15,15,30,15],[15,18,30,18,"aspectRatio"],[15,29,30,29],[15,30,30,30,"split"],[15,35,30,35],[15,36,30,36],[15,39,30,39],[15,40,30,40],[15,41,30,41,"map"],[15,44,30,44],[15,45,30,45,"s"],[15,46,30,46],[15,50,30,50,"s"],[15,51,30,51],[15,52,30,52,"trim"],[15,56,30,56],[15,57,30,57],[15,58,30,58],[15,59,30,59],[16,4,32,2],[16,8,32,6,"matches"],[16,15,32,13],[16,16,32,14,"includes"],[16,24,32,22],[16,25,32,23],[16,31,32,29],[16,32,32,30],[16,34,32,32],[17,6,33,4],[17,10,33,8,"__DEV__"],[17,17,33,15],[17,19,33,17],[18,8,34,6,"invariant"],[18,17,34,15],[18,18,35,8,"matches"],[18,25,35,15],[18,26,35,16,"length"],[18,32,35,22],[18,34,36,8],[18,95,36,69],[18,97,37,8,"aspectRatio"],[18,108,38,6],[18,109,38,7],[19,6,39,4],[20,6,40,4],[21,4,41,2],[22,4,43,2],[22,8,43,8,"hasNonNumericValues"],[22,27,43,27],[22,30,43,30,"matches"],[22,37,43,37],[22,38,43,38,"some"],[22,42,43,42],[22,43,43,43,"n"],[22,44,43,44],[22,48,43,48,"Number"],[22,54,43,54],[22,55,43,55,"isNaN"],[22,60,43,60],[22,61,43,61,"Number"],[22,67,43,67],[22,68,43,68,"n"],[22,69,43,69],[22,70,43,70],[22,71,43,71],[22,72,43,72],[23,4,44,2],[23,8,44,6,"__DEV__"],[23,15,44,13],[23,17,44,15],[24,6,45,4,"invariant"],[24,15,45,13],[24,16,46,6],[24,17,46,7,"hasNonNumericValues"],[24,36,46,26],[24,41,46,31,"matches"],[24,48,46,38],[24,49,46,39,"length"],[24,55,46,45],[24,60,46,50],[24,61,46,51],[24,65,46,55,"matches"],[24,72,46,62],[24,73,46,63,"length"],[24,79,46,69],[24,84,46,74],[24,85,46,75],[24,86,46,76],[24,88,47,6],[24,167,47,85],[24,169,48,6,"aspectRatio"],[24,180,49,4],[24,181,49,5],[25,4,50,2],[26,4,52,2],[26,8,52,6,"hasNonNumericValues"],[26,27,52,25],[26,29,52,27],[27,6,53,4],[28,4,54,2],[29,4,56,2],[29,8,56,6,"matches"],[29,15,56,13],[29,16,56,14,"length"],[29,22,56,20],[29,27,56,25],[29,28,56,26],[29,30,56,28],[30,6,57,4],[30,13,57,11,"Number"],[30,19,57,17],[30,20,57,18,"matches"],[30,27,57,25],[30,28,57,26],[30,29,57,27],[30,30,57,28],[30,31,57,29],[30,34,57,32,"Number"],[30,40,57,38],[30,41,57,39,"matches"],[30,48,57,46],[30,49,57,47],[30,50,57,48],[30,51,57,49],[30,52,57,50],[31,4,58,2],[32,4,60,2],[32,11,60,9,"Number"],[32,17,60,15],[32,18,60,16,"matches"],[32,25,60,23],[32,26,60,24],[32,27,60,25],[32,28,60,26],[32,29,60,27],[33,2,61,0],[34,2,63,0,"module"],[34,8,63,6],[34,9,63,7,"exports"],[34,16,63,14],[34,19,63,17,"processAspectRatio"],[34,37,63,35],[35,0,63,36],[35,3]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCe,aD;2CEa,4BF;CDkB"}},"type":"js/module"}]}