{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.shouldLinkExternally = exports.isWellKnownUri = exports.hasUrlProtocolPrefix = void 0;\n  /**\n   * Does the input string start with a valid URL scheme.\n   * NOTE: Additional strictness added to ensure URLs sent in query parameters for in-app navigation are not matched.\n   */\n  function hasUrlProtocolPrefix(href) {\n    return /^([\\w\\d_+.-]+:)?\\/\\//.test(href);\n  }\n  exports.hasUrlProtocolPrefix = hasUrlProtocolPrefix;\n  function isWellKnownUri(href) {\n    // This is a hack and we should change this to work like the web in the future where we have full confidence in the\n    // ability to match URLs and send anything unmatched to the OS. The main difference between this and `hasUrlProtocolPrefix` is\n    // that we don't require `//`, e.g. `mailto:` is valid and common, and `mailto://bacon` is invalid.\n    return /^(https?|mailto|tel|sms|geo|maps|market|itmss?|itms-apps|content|file):/.test(href);\n  }\n  exports.isWellKnownUri = isWellKnownUri;\n  function shouldLinkExternally(href) {\n    // Cheap check first to avoid regex if the href is not a path fragment.\n    return !href.startsWith('.') && (hasUrlProtocolPrefix(href) || isWellKnownUri(href));\n  }\n  exports.shouldLinkExternally = shouldLinkExternally;\n});","lineCount":28,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"shouldLinkExternally"],[7,30,3,28],[7,33,3,31,"exports"],[7,40,3,38],[7,41,3,39,"isWellKnownUri"],[7,55,3,53],[7,58,3,56,"exports"],[7,65,3,63],[7,66,3,64,"hasUrlProtocolPrefix"],[7,86,3,84],[7,89,3,87],[7,94,3,92],[7,95,3,93],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,2,8,0],[12,11,8,9,"hasUrlProtocolPrefix"],[12,31,8,29,"hasUrlProtocolPrefix"],[12,32,8,30,"href"],[12,36,8,34],[12,38,8,36],[13,4,9,4],[13,11,9,11],[13,33,9,33],[13,34,9,34,"test"],[13,38,9,38],[13,39,9,39,"href"],[13,43,9,43],[13,44,9,44],[14,2,10,0],[15,2,11,0,"exports"],[15,9,11,7],[15,10,11,8,"hasUrlProtocolPrefix"],[15,30,11,28],[15,33,11,31,"hasUrlProtocolPrefix"],[15,53,11,51],[16,2,12,0],[16,11,12,9,"isWellKnownUri"],[16,25,12,23,"isWellKnownUri"],[16,26,12,24,"href"],[16,30,12,28],[16,32,12,30],[17,4,13,4],[18,4,14,4],[19,4,15,4],[20,4,16,4],[20,11,16,11],[20,84,16,84],[20,85,16,85,"test"],[20,89,16,89],[20,90,16,90,"href"],[20,94,16,94],[20,95,16,95],[21,2,17,0],[22,2,18,0,"exports"],[22,9,18,7],[22,10,18,8,"isWellKnownUri"],[22,24,18,22],[22,27,18,25,"isWellKnownUri"],[22,41,18,39],[23,2,19,0],[23,11,19,9,"shouldLinkExternally"],[23,31,19,29,"shouldLinkExternally"],[23,32,19,30,"href"],[23,36,19,34],[23,38,19,36],[24,4,20,4],[25,4,21,4],[25,11,21,11],[25,12,21,12,"href"],[25,16,21,16],[25,17,21,17,"startsWith"],[25,27,21,27],[25,28,21,28],[25,31,21,31],[25,32,21,32],[25,37,21,37,"hasUrlProtocolPrefix"],[25,57,21,57],[25,58,21,58,"href"],[25,62,21,62],[25,63,21,63],[25,67,21,67,"isWellKnownUri"],[25,81,21,81],[25,82,21,82,"href"],[25,86,21,86],[25,87,21,87],[25,88,21,88],[26,2,22,0],[27,2,23,0,"exports"],[27,9,23,7],[27,10,23,8,"shouldLinkExternally"],[27,30,23,28],[27,33,23,31,"shouldLinkExternally"],[27,53,23,51],[28,0,23,52],[28,3]],"functionMap":{"names":["<global>","hasUrlProtocolPrefix","isWellKnownUri","shouldLinkExternally"],"mappings":"AAA;ACO;CDE;AEE;CFK;AGE;CHG"}},"type":"js/module"}]}