{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"aLLVXWB8QP15fri3afEUab9H+Os="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseRouter = void 0;\n  var _nonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  /**\n   * Base router object that can be used when writing custom routers.\n   * This provides few helper methods to handle common actions such as `RESET`.\n   */\n  const BaseRouter = exports.BaseRouter = {\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n          {\n            const index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return Object.assign({}, state, {\n              routes: state.routes.map((r, i) => i === index ? Object.assign({}, r, {\n                params: Object.assign({}, r.params, action.payload.params)\n              }) : r)\n            });\n          }\n        case 'RESET':\n          {\n            const nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n                return null;\n              }\n              return Object.assign({}, nextState, {\n                routes: nextState.routes.map(route => route.key ? route : Object.assign({}, route, {\n                  key: `${route.name}-${(0, _nonSecure.nanoid)()}`\n                }))\n              });\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":54,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"BaseRouter"],[7,20,1,13],[8,2,3,0],[8,6,3,0,"_nonSecure"],[8,16,3,0],[8,19,3,0,"require"],[8,26,3,0],[8,27,3,0,"_dependencyMap"],[8,41,3,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,2,8,7],[13,8,8,13,"BaseRouter"],[13,18,8,23],[13,21,8,23,"exports"],[13,28,8,23],[13,29,8,23,"BaseRouter"],[13,39,8,23],[13,42,8,26],[14,4,9,2,"getStateForAction"],[14,21,9,19,"getStateForAction"],[14,22,9,20,"state"],[14,27,9,25],[14,29,9,27,"action"],[14,35,9,33],[14,37,9,35],[15,6,10,4],[15,14,10,12,"action"],[15,20,10,18],[15,21,10,19,"type"],[15,25,10,23],[16,8,11,6],[16,13,11,11],[16,25,11,23],[17,10,12,8],[18,12,13,10],[18,18,13,16,"index"],[18,23,13,21],[18,26,13,24,"action"],[18,32,13,30],[18,33,13,31,"source"],[18,39,13,37],[18,42,13,40,"state"],[18,47,13,45],[18,48,13,46,"routes"],[18,54,13,52],[18,55,13,53,"findIndex"],[18,64,13,62],[18,65,13,63,"r"],[18,66,13,64],[18,70,13,68,"r"],[18,71,13,69],[18,72,13,70,"key"],[18,75,13,73],[18,80,13,78,"action"],[18,86,13,84],[18,87,13,85,"source"],[18,93,13,91],[18,94,13,92],[18,97,13,95,"state"],[18,102,13,100],[18,103,13,101,"index"],[18,108,13,106],[19,12,14,10],[19,16,14,14,"index"],[19,21,14,19],[19,26,14,24],[19,27,14,25],[19,28,14,26],[19,30,14,28],[20,14,15,12],[20,21,15,19],[20,25,15,23],[21,12,16,10],[22,12,17,10],[22,19,17,10,"Object"],[22,25,17,10],[22,26,17,10,"assign"],[22,32,17,10],[22,37,18,15,"state"],[22,42,18,20],[23,14,19,12,"routes"],[23,20,19,18],[23,22,19,20,"state"],[23,27,19,25],[23,28,19,26,"routes"],[23,34,19,32],[23,35,19,33,"map"],[23,38,19,36],[23,39,19,37],[23,40,19,38,"r"],[23,41,19,39],[23,43,19,41,"i"],[23,44,19,42],[23,49,19,47,"i"],[23,50,19,48],[23,55,19,53,"index"],[23,60,19,58],[23,63,19,58,"Object"],[23,69,19,58],[23,70,19,58,"assign"],[23,76,19,58],[23,81,20,17,"r"],[23,82,20,18],[24,16,21,14,"params"],[24,22,21,20],[24,24,21,20,"Object"],[24,30,21,20],[24,31,21,20,"assign"],[24,37,21,20],[24,42,22,19,"r"],[24,43,22,20],[24,44,22,21,"params"],[24,50,22,27],[24,52,23,19,"action"],[24,58,23,25],[24,59,23,26,"payload"],[24,66,23,33],[24,67,23,34,"params"],[24,73,23,40],[25,14,24,15],[25,19,25,16,"r"],[25,20,25,17],[26,12,25,18],[27,10,27,8],[28,8,28,6],[28,13,28,11],[28,20,28,18],[29,10,29,8],[30,12,30,10],[30,18,30,16,"nextState"],[30,27,30,25],[30,30,30,28,"action"],[30,36,30,34],[30,37,30,35,"payload"],[30,44,30,42],[31,12,31,10],[31,16,31,14,"nextState"],[31,25,31,23],[31,26,31,24,"routes"],[31,32,31,30],[31,33,31,31,"length"],[31,39,31,37],[31,44,31,42],[31,45,31,43],[31,49,31,47,"nextState"],[31,58,31,56],[31,59,31,57,"routes"],[31,65,31,63],[31,66,31,64,"some"],[31,70,31,68],[31,71,31,69,"route"],[31,76,31,74],[31,80,31,78],[31,81,31,79,"state"],[31,86,31,84],[31,87,31,85,"routeNames"],[31,97,31,95],[31,98,31,96,"includes"],[31,106,31,104],[31,107,31,105,"route"],[31,112,31,110],[31,113,31,111,"name"],[31,117,31,115],[31,118,31,116],[31,119,31,117],[31,121,31,119],[32,14,32,12],[32,21,32,19],[32,25,32,23],[33,12,33,10],[34,12,34,10],[34,16,34,14,"nextState"],[34,25,34,23],[34,26,34,24,"stale"],[34,31,34,29],[34,36,34,34],[34,41,34,39],[34,43,34,41],[35,14,35,12],[35,18,35,16,"state"],[35,23,35,21],[35,24,35,22,"routeNames"],[35,34,35,32],[35,35,35,33,"length"],[35,41,35,39],[35,46,35,44,"nextState"],[35,55,35,53],[35,56,35,54,"routeNames"],[35,66,35,64],[35,67,35,65,"length"],[35,73,35,71],[35,77,35,75,"nextState"],[35,86,35,84],[35,87,35,85,"routeNames"],[35,97,35,95],[35,98,35,96,"some"],[35,102,35,100],[35,103,35,101,"name"],[35,107,35,105],[35,111,35,109],[35,112,35,110,"state"],[35,117,35,115],[35,118,35,116,"routeNames"],[35,128,35,126],[35,129,35,127,"includes"],[35,137,35,135],[35,138,35,136,"name"],[35,142,35,140],[35,143,35,141],[35,144,35,142],[35,146,35,144],[36,16,36,14],[36,23,36,21],[36,27,36,25],[37,14,37,12],[38,14,38,12],[38,21,38,12,"Object"],[38,27,38,12],[38,28,38,12,"assign"],[38,34,38,12],[38,39,39,17,"nextState"],[38,48,39,26],[39,16,40,14,"routes"],[39,22,40,20],[39,24,40,22,"nextState"],[39,33,40,31],[39,34,40,32,"routes"],[39,40,40,38],[39,41,40,39,"map"],[39,44,40,42],[39,45,40,43,"route"],[39,50,40,48],[39,54,40,52,"route"],[39,59,40,57],[39,60,40,58,"key"],[39,63,40,61],[39,66,40,64,"route"],[39,71,40,69],[39,74,40,69,"Object"],[39,80,40,69],[39,81,40,69,"assign"],[39,87,40,69],[39,92,41,19,"route"],[39,97,41,24],[40,18,42,16,"key"],[40,21,42,19],[40,23,42,21],[40,26,42,24,"route"],[40,31,42,29],[40,32,42,30,"name"],[40,36,42,34],[40,40,42,38],[40,44,42,38,"nanoid"],[40,61,42,44],[40,63,42,45],[40,64,42,46],[41,16,42,48],[41,18,43,15],[42,14,43,16],[43,12,45,10],[44,12,46,10],[44,19,46,17,"nextState"],[44,28,46,26],[45,10,47,8],[46,8,48,6],[47,10,49,8],[47,17,49,15],[47,21,49,19],[48,6,50,4],[49,4,51,2],[49,5,51,3],[50,4,52,2,"shouldActionChangeFocus"],[50,27,52,25,"shouldActionChangeFocus"],[50,28,52,26,"action"],[50,34,52,32],[50,36,52,34],[51,6,53,4],[51,13,53,11,"action"],[51,19,53,17],[51,20,53,18,"type"],[51,24,53,22],[51,29,53,27],[51,39,53,37],[51,43,53,41,"action"],[51,49,53,47],[51,50,53,48,"type"],[51,54,53,52],[51,59,53,57],[51,80,53,78],[52,4,54,2],[53,2,55,0],[53,3,55,1],[54,0,55,2],[54,3]],"functionMap":{"names":["<global>","getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","shouldActionChangeFocus"],"mappings":"AAA;ECQ;+DCI,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"}},"type":"js/module"}]}