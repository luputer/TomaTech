{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nanoid = exports.customAlphabet = void 0;\n  // This alphabet uses `A-Za-z0-9_-` symbols.\n  // The order of characters is optimized for better gzip and brotli compression.\n  // References to the same file (works both for gzip and brotli):\n  // `'use`, `andom`, and `rict'`\n  // References to the brotli default dictionary:\n  // `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\n  var urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\n  var customAlphabet = function (alphabet) {\n    var defaultSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;\n    return function () {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n      var id = '';\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      var i = size | 0;\n      while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += alphabet[Math.random() * alphabet.length | 0];\n      }\n      return id;\n    };\n  };\n  exports.customAlphabet = customAlphabet;\n  var nanoid = function () {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n    var id = '';\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    var i = size | 0;\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += urlAlphabet[Math.random() * 64 | 0];\n    }\n    return id;\n  };\n  exports.nanoid = nanoid;\n});","lineCount":40,"map":[[6,2,1,0],[7,2,2,0],[8,2,3,0],[9,2,4,0],[10,2,5,0],[11,2,6,0],[12,2,7,0],[12,6,7,4,"urlAlphabet"],[12,17,7,15],[12,20,8,2],[12,86,8,68],[13,2,10,0],[13,6,10,4,"customAlphabet"],[13,20,10,18],[13,23,10,21],[13,32,10,21,"customAlphabet"],[13,33,10,22,"alphabet"],[13,41,10,30],[13,43,10,53],[14,4,10,53],[14,8,10,32,"defaultSize"],[14,19,10,43],[14,22,10,43,"arguments"],[14,31,10,43],[14,32,10,43,"length"],[14,38,10,43],[14,46,10,43,"arguments"],[14,55,10,43],[14,63,10,43,"undefined"],[14,72,10,43],[14,75,10,43,"arguments"],[14,84,10,43],[14,90,10,46],[14,92,10,48],[15,4,11,2],[15,11,11,9],[15,23,11,33],[16,6,11,33],[16,10,11,10,"size"],[16,14,11,14],[16,17,11,14,"arguments"],[16,26,11,14],[16,27,11,14,"length"],[16,33,11,14],[16,41,11,14,"arguments"],[16,50,11,14],[16,58,11,14,"undefined"],[16,67,11,14],[16,70,11,14,"arguments"],[16,79,11,14],[16,85,11,17,"defaultSize"],[16,96,11,28],[17,6,12,4],[17,10,12,8,"id"],[17,12,12,10],[17,15,12,13],[17,17,12,15],[18,6,13,4],[19,6,14,4],[19,10,14,8,"i"],[19,11,14,9],[19,14,14,12,"size"],[19,18,14,16],[19,21,14,19],[19,22,14,20],[20,6,15,4],[20,13,15,11,"i"],[20,14,15,12],[20,16,15,14],[20,18,15,16],[21,8,16,6],[22,8,17,6,"id"],[22,10,17,8],[22,14,17,12,"alphabet"],[22,22,17,20],[22,23,17,22,"Math"],[22,27,17,26],[22,28,17,27,"random"],[22,34,17,33],[22,35,17,34],[22,36,17,35],[22,39,17,38,"alphabet"],[22,47,17,46],[22,48,17,47,"length"],[22,54,17,53],[22,57,17,57],[22,58,17,58],[22,59,17,59],[23,6,18,4],[24,6,19,4],[24,13,19,11,"id"],[24,15,19,13],[25,4,20,2],[25,5,20,3],[26,2,21,0],[26,3,21,1],[27,2,21,1,"exports"],[27,9,21,1],[27,10,21,1,"customAlphabet"],[27,24,21,1],[27,27,21,1,"customAlphabet"],[27,41,21,1],[28,2,23,0],[28,6,23,4,"nanoid"],[28,12,23,10],[28,15,23,13],[28,24,23,13,"nanoid"],[28,25,23,13],[28,27,23,28],[29,4,23,28],[29,8,23,14,"size"],[29,12,23,18],[29,15,23,18,"arguments"],[29,24,23,18],[29,25,23,18,"length"],[29,31,23,18],[29,39,23,18,"arguments"],[29,48,23,18],[29,56,23,18,"undefined"],[29,65,23,18],[29,68,23,18,"arguments"],[29,77,23,18],[29,83,23,21],[29,85,23,23],[30,4,24,2],[30,8,24,6,"id"],[30,10,24,8],[30,13,24,11],[30,15,24,13],[31,4,25,2],[32,4,26,2],[32,8,26,6,"i"],[32,9,26,7],[32,12,26,10,"size"],[32,16,26,14],[32,19,26,17],[32,20,26,18],[33,4,27,2],[33,11,27,9,"i"],[33,12,27,10],[33,14,27,12],[33,16,27,14],[34,6,28,4],[35,6,29,4,"id"],[35,8,29,6],[35,12,29,10,"urlAlphabet"],[35,23,29,21],[35,24,29,23,"Math"],[35,28,29,27],[35,29,29,28,"random"],[35,35,29,34],[35,36,29,35],[35,37,29,36],[35,40,29,39],[35,42,29,41],[35,45,29,45],[35,46,29,46],[35,47,29,47],[36,4,30,2],[37,4,31,2],[37,11,31,9,"id"],[37,13,31,11],[38,2,32,0],[38,3,32,1],[39,2,32,1,"exports"],[39,9,32,1],[39,10,32,1,"nanoid"],[39,16,32,1],[39,19,32,1,"nanoid"],[39,25,32,1],[40,0,32,1],[40,3]],"functionMap":{"names":["<global>","customAlphabet","<anonymous>","nanoid"],"mappings":"AAA;qBCS;SCC;GDS;CDC;aGE;CHS"}},"type":"js/module"}]}