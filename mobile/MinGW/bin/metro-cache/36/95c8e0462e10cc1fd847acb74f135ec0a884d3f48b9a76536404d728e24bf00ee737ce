{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseBase","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"jMONaMrLKWyW98OXtOcLrGqurmM="}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseKey","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"qTmzI90+V4e5n8oYrMtPGytmrV0="}},{"name":"../../../../Libraries/Utilities/warnOnce","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":64}}],"key":"Ghh5qlfuZKYys9QXlkSDlK8AUjk="}},{"name":"./EventTiming","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":53}}],"key":"nk16OQjZrV1yMNxoPlDB/yrx634="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":52}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":19,"column":0},"end":{"line":23,"column":31}}],"key":"zrkCAbiGCMzHpBgnI/Ykq8YEer4="}},{"name":"./specs/NativePerformanceObserver","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0},"end":{"line":24,"column":74}}],"key":"e5cFiNYK24FFj+OBvYsOcKKfpSs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"PerformanceEntry\", {\n    enumerable: true,\n    get: function () {\n      return _PerformanceEntry.PerformanceEntry;\n    }\n  });\n  Object.defineProperty(exports, \"PerformanceEventTiming\", {\n    enumerable: true,\n    get: function () {\n      return _EventTiming.PerformanceEventTiming;\n    }\n  });\n  exports.PerformanceObserverEntryList = exports.PerformanceObserver = void 0;\n  exports.warnNoNativePerformanceObserver = warnNoNativePerformanceObserver;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _classPrivateFieldLooseBase2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n  var _classPrivateFieldLooseKey2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n  var _warnOnce = _interopRequireDefault(require(_dependencyMap[6], \"../../../../Libraries/Utilities/warnOnce\"));\n  var _EventTiming = require(_dependencyMap[7], \"./EventTiming\");\n  var _PerformanceEntry = require(_dependencyMap[8], \"./PerformanceEntry\");\n  var _RawPerformanceEntry = require(_dependencyMap[9], \"./RawPerformanceEntry\");\n  var _NativePerformanceObserver = _interopRequireDefault(require(_dependencyMap[10], \"./specs/NativePerformanceObserver\"));\n  var _entries = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"entries\");\n  var PerformanceObserverEntryList = exports.PerformanceObserverEntryList = /*#__PURE__*/function () {\n    function PerformanceObserverEntryList(entries) {\n      (0, _classCallCheck2.default)(this, PerformanceObserverEntryList);\n      Object.defineProperty(this, _entries, {\n        writable: true,\n        value: void 0\n      });\n      (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries] = entries;\n    }\n    return (0, _createClass2.default)(PerformanceObserverEntryList, [{\n      key: \"getEntries\",\n      value: function getEntries() {\n        return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries];\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(type) {\n        return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries].filter(entry => entry.entryType === type);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(name, type) {\n        if (type === undefined) {\n          return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries].filter(entry => entry.name === name);\n        } else {\n          return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries].filter(entry => entry.name === name && entry.entryType === type);\n        }\n      }\n    }]);\n  }();\n  var observerCountPerEntryType = new Map();\n  var registeredObservers = new Map();\n  var isOnPerformanceEntryCallbackSet = false;\n  var onPerformanceEntry = () => {\n    if (!_NativePerformanceObserver.default) {\n      return;\n    }\n    var entryResult = _NativePerformanceObserver.default.popPendingEntries();\n    var rawEntries = entryResult?.entries ?? [];\n    var droppedEntriesCount = entryResult?.droppedEntriesCount;\n    if (rawEntries.length === 0) {\n      return;\n    }\n    var entries = rawEntries.map(_RawPerformanceEntry.rawToPerformanceEntry);\n    var _loop = function (observerConfig) {\n      var entriesForObserver = entries.filter(entry => {\n        if (!observerConfig.entryTypes.has(entry.entryType)) {\n          return false;\n        }\n        if (entry.entryType === 'event' && observerConfig.durationThreshold != null) {\n          return entry.duration >= observerConfig.durationThreshold;\n        }\n        return true;\n      });\n      if (entriesForObserver.length !== 0) {\n        try {\n          observerConfig.callback(new PerformanceObserverEntryList(entriesForObserver), _observer, droppedEntriesCount);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    };\n    for (var _ref of registeredObservers.entries()) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n      var _observer = _ref2[0];\n      var observerConfig = _ref2[1];\n      _loop(observerConfig);\n    }\n  };\n  function warnNoNativePerformanceObserver() {\n    (0, _warnOnce.default)('missing-native-performance-observer', 'Missing native implementation of PerformanceObserver');\n  }\n  function applyDurationThresholds() {\n    var durationThresholds = Array.from(registeredObservers.values()).map(observerConfig => observerConfig.durationThreshold).filter(Boolean);\n    return Math.min(...durationThresholds);\n  }\n  function getSupportedPerformanceEntryTypes() {\n    if (!_NativePerformanceObserver.default) {\n      return Object.freeze([]);\n    }\n    if (!_NativePerformanceObserver.default.getSupportedPerformanceEntryTypes) {\n      return Object.freeze(['mark', 'measure', 'event']);\n    }\n    return Object.freeze(_NativePerformanceObserver.default.getSupportedPerformanceEntryTypes().map(_RawPerformanceEntry.rawToPerformanceEntryType));\n  }\n  var _callback = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"callback\");\n  var _type = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"type\");\n  var _validateObserveOptions = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"validateObserveOptions\");\n  var PerformanceObserver = exports.PerformanceObserver = /*#__PURE__*/function () {\n    function PerformanceObserver(callback) {\n      (0, _classCallCheck2.default)(this, PerformanceObserver);\n      Object.defineProperty(this, _validateObserveOptions, {\n        value: _validateObserveOptions2\n      });\n      Object.defineProperty(this, _callback, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _type, {\n        writable: true,\n        value: void 0\n      });\n      (0, _classPrivateFieldLooseBase2.default)(this, _callback)[_callback] = callback;\n    }\n    return (0, _createClass2.default)(PerformanceObserver, [{\n      key: \"observe\",\n      value: function observe(options) {\n        if (!_NativePerformanceObserver.default) {\n          warnNoNativePerformanceObserver();\n          return;\n        }\n        (0, _classPrivateFieldLooseBase2.default)(this, _validateObserveOptions)[_validateObserveOptions](options);\n        var requestedEntryTypes;\n        if (options.entryTypes) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] = 'multiple';\n          requestedEntryTypes = new Set(options.entryTypes);\n        } else {\n          (0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] = 'single';\n          requestedEntryTypes = new Set([options.type]);\n        }\n        var currentEntryTypes = registeredObservers.get(this)?.entryTypes;\n        var nextEntryTypes = currentEntryTypes ? union(requestedEntryTypes, currentEntryTypes) : requestedEntryTypes;\n        if (currentEntryTypes && currentEntryTypes.size === nextEntryTypes.size) {\n          return;\n        }\n        registeredObservers.set(this, {\n          callback: (0, _classPrivateFieldLooseBase2.default)(this, _callback)[_callback],\n          durationThreshold: options.type === 'event' ? options.durationThreshold : undefined,\n          entryTypes: nextEntryTypes\n        });\n        if (!isOnPerformanceEntryCallbackSet) {\n          _NativePerformanceObserver.default.setOnPerformanceEntryCallback(onPerformanceEntry);\n          isOnPerformanceEntryCallbackSet = true;\n        }\n        var newEntryTypes = currentEntryTypes ? difference(new Set(requestedEntryTypes.keys()), new Set(currentEntryTypes.keys())) : new Set(requestedEntryTypes.keys());\n        for (var type of newEntryTypes) {\n          if (!observerCountPerEntryType.has(type)) {\n            var rawType = (0, _RawPerformanceEntry.performanceEntryTypeToRaw)(type);\n            _NativePerformanceObserver.default.startReporting(rawType);\n          }\n          observerCountPerEntryType.set(type, (observerCountPerEntryType.get(type) ?? 0) + 1);\n        }\n        applyDurationThresholds();\n      }\n    }, {\n      key: \"disconnect\",\n      value: function disconnect() {\n        if (!_NativePerformanceObserver.default) {\n          warnNoNativePerformanceObserver();\n          return;\n        }\n        var observerConfig = registeredObservers.get(this);\n        if (!observerConfig) {\n          return;\n        }\n        for (var type of observerConfig.entryTypes.keys()) {\n          var numberOfObserversForThisType = observerCountPerEntryType.get(type) ?? 0;\n          if (numberOfObserversForThisType === 1) {\n            observerCountPerEntryType.delete(type);\n            _NativePerformanceObserver.default.stopReporting((0, _RawPerformanceEntry.performanceEntryTypeToRaw)(type));\n          } else if (numberOfObserversForThisType !== 0) {\n            observerCountPerEntryType.set(type, numberOfObserversForThisType - 1);\n          }\n        }\n        registeredObservers.delete(this);\n        if (registeredObservers.size === 0) {\n          _NativePerformanceObserver.default.setOnPerformanceEntryCallback(undefined);\n          isOnPerformanceEntryCallbackSet = false;\n        }\n        applyDurationThresholds();\n      }\n    }]);\n  }();\n  function _validateObserveOptions2(options) {\n    var type = options.type,\n      entryTypes = options.entryTypes,\n      durationThreshold = options.durationThreshold;\n    if (!type && !entryTypes) {\n      throw new TypeError(\"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.\");\n    }\n    if (entryTypes && type) {\n      throw new TypeError(\"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.\");\n    }\n    if ((0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] === 'multiple' && type) {\n      throw new Error(\"Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})\");\n    }\n    if ((0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] === 'single' && entryTypes) {\n      throw new Error(\"Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})\");\n    }\n    if (entryTypes && durationThreshold !== undefined) {\n      throw new TypeError(\"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and durationThreshold arguments.\");\n    }\n  }\n  PerformanceObserver.supportedEntryTypes = getSupportedPerformanceEntryTypes();\n  function union(a, b) {\n    return new Set([...a, ...b]);\n  }\n  function difference(a, b) {\n    return new Set([...a].filter(x => !b.has(x)));\n  }\n});","lineCount":231,"map":[[25,2,16,0],[25,6,16,0,"_warnOnce"],[25,15,16,0],[25,18,16,0,"_interopRequireDefault"],[25,40,16,0],[25,41,16,0,"require"],[25,48,16,0],[25,49,16,0,"_dependencyMap"],[25,63,16,0],[26,2,17,0],[26,6,17,0,"_EventTiming"],[26,18,17,0],[26,21,17,0,"require"],[26,28,17,0],[26,29,17,0,"_dependencyMap"],[26,43,17,0],[27,2,18,0],[27,6,18,0,"_PerformanceEntry"],[27,23,18,0],[27,26,18,0,"require"],[27,33,18,0],[27,34,18,0,"_dependencyMap"],[27,48,18,0],[28,2,19,0],[28,6,19,0,"_RawPerformanceEntry"],[28,26,19,0],[28,29,19,0,"require"],[28,36,19,0],[28,37,19,0,"_dependencyMap"],[28,51,19,0],[29,2,24,0],[29,6,24,0,"_NativePerformanceObserver"],[29,32,24,0],[29,35,24,0,"_interopRequireDefault"],[29,57,24,0],[29,58,24,0,"require"],[29,65,24,0],[29,66,24,0,"_dependencyMap"],[29,80,24,0],[30,2,24,74],[30,6,24,74,"_entries"],[30,14,24,74],[30,34,24,74,"_classPrivateFieldLooseKey2"],[30,61,24,74],[30,62,24,74,"default"],[30,69,24,74],[31,2,24,74],[31,6,30,13,"PerformanceObserverEntryList"],[31,34,30,41],[31,37,30,41,"exports"],[31,44,30,41],[31,45,30,41,"PerformanceObserverEntryList"],[31,73,30,41],[32,4,33,2],[32,13,33,2,"PerformanceObserverEntryList"],[32,42,33,14,"entries"],[32,49,33,43],[32,51,33,45],[33,6,33,45],[33,10,33,45,"_classCallCheck2"],[33,26,33,45],[33,27,33,45,"default"],[33,34,33,45],[33,42,33,45,"PerformanceObserverEntryList"],[33,70,33,45],[34,6,33,45,"Object"],[34,12,33,45],[34,13,33,45,"defineProperty"],[34,27,33,45],[34,34,33,45,"_entries"],[34,42,33,45],[35,8,33,45,"writable"],[35,16,33,45],[36,8,33,45,"value"],[36,13,33,45],[37,6,33,45],[38,6,34,4],[38,10,34,4,"_classPrivateFieldLooseBase2"],[38,38,34,4],[38,39,34,4,"default"],[38,46,34,4],[38,52,34,8],[38,54,34,8,"_entries"],[38,62,34,8],[38,64,34,8,"_entries"],[38,72,34,8],[38,76,34,20,"entries"],[38,83,34,27],[39,4,35,2],[40,4,35,3],[40,15,35,3,"_createClass2"],[40,28,35,3],[40,29,35,3,"default"],[40,36,35,3],[40,38,35,3,"PerformanceObserverEntryList"],[40,66,35,3],[41,6,35,3,"key"],[41,9,35,3],[42,6,35,3,"value"],[42,11,35,3],[42,13,37,2],[42,22,37,2,"getEntries"],[42,32,37,12,"getEntries"],[42,33,37,12],[42,35,37,37],[43,8,38,4],[43,19,38,4,"_classPrivateFieldLooseBase2"],[43,47,38,4],[43,48,38,4,"default"],[43,55,38,4],[43,57,38,11],[43,61,38,15],[43,63,38,15,"_entries"],[43,71,38,15],[43,73,38,15,"_entries"],[43,81,38,15],[44,6,39,2],[45,4,39,3],[46,6,39,3,"key"],[46,9,39,3],[47,6,39,3,"value"],[47,11,39,3],[47,13,41,2],[47,22,41,2,"getEntriesByType"],[47,38,41,18,"getEntriesByType"],[47,39,41,19,"type"],[47,43,41,45],[47,45,41,69],[48,8,42,4],[48,15,42,11],[48,19,42,11,"_classPrivateFieldLooseBase2"],[48,47,42,11],[48,48,42,11,"default"],[48,55,42,11],[48,61,42,15],[48,63,42,15,"_entries"],[48,71,42,15],[48,73,42,15,"_entries"],[48,81,42,15],[48,83,42,25,"filter"],[48,89,42,31],[48,90,42,32,"entry"],[48,95,42,37],[48,99,42,41,"entry"],[48,104,42,46],[48,105,42,47,"entryType"],[48,114,42,56],[48,119,42,61,"type"],[48,123,42,65],[48,124,42,66],[49,6,43,2],[50,4,43,3],[51,6,43,3,"key"],[51,9,43,3],[52,6,43,3,"value"],[52,11,43,3],[52,13,45,2],[52,22,45,2,"getEntriesByName"],[52,38,45,18,"getEntriesByName"],[52,39,46,4,"name"],[52,43,46,16],[52,45,47,4,"type"],[52,49,47,31],[52,51,48,26],[53,8,49,4],[53,12,49,8,"type"],[53,16,49,12],[53,21,49,17,"undefined"],[53,30,49,26],[53,32,49,28],[54,10,50,6],[54,17,50,13],[54,21,50,13,"_classPrivateFieldLooseBase2"],[54,49,50,13],[54,50,50,13,"default"],[54,57,50,13],[54,63,50,17],[54,65,50,17,"_entries"],[54,73,50,17],[54,75,50,17,"_entries"],[54,83,50,17],[54,85,50,27,"filter"],[54,91,50,33],[54,92,50,34,"entry"],[54,97,50,39],[54,101,50,43,"entry"],[54,106,50,48],[54,107,50,49,"name"],[54,111,50,53],[54,116,50,58,"name"],[54,120,50,62],[54,121,50,63],[55,8,51,4],[55,9,51,5],[55,15,51,11],[56,10,52,6],[56,17,52,13],[56,21,52,13,"_classPrivateFieldLooseBase2"],[56,49,52,13],[56,50,52,13,"default"],[56,57,52,13],[56,63,52,17],[56,65,52,17,"_entries"],[56,73,52,17],[56,75,52,17,"_entries"],[56,83,52,17],[56,85,52,27,"filter"],[56,91,52,33],[56,92,53,8,"entry"],[56,97,53,13],[56,101,53,17,"entry"],[56,106,53,22],[56,107,53,23,"name"],[56,111,53,27],[56,116,53,32,"name"],[56,120,53,36],[56,124,53,40,"entry"],[56,129,53,45],[56,130,53,46,"entryType"],[56,139,53,55],[56,144,53,60,"type"],[56,148,54,6],[56,149,54,7],[57,8,55,4],[58,6,56,2],[59,4,56,3],[60,2,56,3],[61,2,81,0],[61,6,81,6,"observerCountPerEntryType"],[61,31,81,66],[61,34,81,69],[61,38,81,73,"Map"],[61,41,81,76],[61,42,81,77],[61,43,81,78],[62,2,82,0],[62,6,82,6,"registeredObservers"],[62,25,82,78],[62,28,83,2],[62,32,83,6,"Map"],[62,35,83,9],[62,36,83,10],[62,37,83,11],[63,2,84,0],[63,6,84,4,"isOnPerformanceEntryCallbackSet"],[63,37,84,44],[63,40,84,47],[63,45,84,52],[64,2,87,0],[64,6,87,6,"onPerformanceEntry"],[64,24,87,24],[64,27,87,27,"onPerformanceEntry"],[64,28,87,27],[64,33,87,33],[65,4,88,2],[65,8,88,6],[65,9,88,7,"NativePerformanceObserver"],[65,43,88,32],[65,45,88,34],[66,6,89,4],[67,4,90,2],[68,4,91,2],[68,8,91,8,"entryResult"],[68,19,91,19],[68,22,91,22,"NativePerformanceObserver"],[68,56,91,47],[68,57,91,48,"popPendingEntries"],[68,74,91,65],[68,75,91,66],[68,76,91,67],[69,4,92,2],[69,8,92,8,"rawEntries"],[69,18,92,18],[69,21,92,21,"entryResult"],[69,32,92,32],[69,34,92,34,"entries"],[69,41,92,41],[69,45,92,45],[69,47,92,47],[70,4,93,2],[70,8,93,8,"droppedEntriesCount"],[70,27,93,27],[70,30,93,30,"entryResult"],[70,41,93,41],[70,43,93,43,"droppedEntriesCount"],[70,62,93,62],[71,4,94,2],[71,8,94,6,"rawEntries"],[71,18,94,16],[71,19,94,17,"length"],[71,25,94,23],[71,30,94,28],[71,31,94,29],[71,33,94,31],[72,6,95,4],[73,4,96,2],[74,4,97,2],[74,8,97,8,"entries"],[74,15,97,15],[74,18,97,18,"rawEntries"],[74,28,97,28],[74,29,97,29,"map"],[74,32,97,32],[74,33,97,33,"rawToPerformanceEntry"],[74,75,97,54],[74,76,97,55],[75,4,97,56],[75,8,97,56,"_loop"],[75,13,97,56],[75,25,97,56,"_loop"],[75,26,97,56,"observerConfig"],[75,40,97,56],[75,42,98,74],[76,6,99,4],[76,10,99,10,"entriesForObserver"],[76,28,99,50],[76,31,99,53,"entries"],[76,38,99,60],[76,39,99,61,"filter"],[76,45,99,67],[76,46,99,68,"entry"],[76,51,99,73],[76,55,99,77],[77,8,100,6],[77,12,100,10],[77,13,100,11,"observerConfig"],[77,27,100,25],[77,28,100,26,"entryTypes"],[77,38,100,36],[77,39,100,37,"has"],[77,42,100,40],[77,43,100,41,"entry"],[77,48,100,46],[77,49,100,47,"entryType"],[77,58,100,56],[77,59,100,57],[77,61,100,59],[78,10,101,8],[78,17,101,15],[78,22,101,20],[79,8,102,6],[80,8,104,6],[80,12,105,8,"entry"],[80,17,105,13],[80,18,105,14,"entryType"],[80,27,105,23],[80,32,105,28],[80,39,105,35],[80,43,106,8,"observerConfig"],[80,57,106,22],[80,58,106,23,"durationThreshold"],[80,75,106,40],[80,79,106,44],[80,83,106,48],[80,85,107,8],[81,10,108,8],[81,17,108,15,"entry"],[81,22,108,20],[81,23,108,21,"duration"],[81,31,108,29],[81,35,108,33,"observerConfig"],[81,49,108,47],[81,50,108,48,"durationThreshold"],[81,67,108,65],[82,8,109,6],[83,8,111,6],[83,15,111,13],[83,19,111,17],[84,6,112,4],[84,7,112,5],[84,8,112,6],[85,6,113,4],[85,10,113,8,"entriesForObserver"],[85,28,113,26],[85,29,113,27,"length"],[85,35,113,33],[85,40,113,38],[85,41,113,39],[85,43,113,41],[86,8,114,6],[86,12,114,10],[87,10,115,8,"observerConfig"],[87,24,115,22],[87,25,115,23,"callback"],[87,33,115,31],[87,34,116,10],[87,38,116,14,"PerformanceObserverEntryList"],[87,66,116,42],[87,67,116,43,"entriesForObserver"],[87,85,116,61],[87,86,116,62],[87,88,117,10,"observer"],[87,97,117,18],[87,99,118,10,"droppedEntriesCount"],[87,118,119,8],[87,119,119,9],[88,8,120,6],[88,9,120,7],[88,10,120,8],[88,17,120,15,"error"],[88,22,120,20],[88,24,120,22],[89,10,121,8,"console"],[89,17,121,15],[89,18,121,16,"error"],[89,23,121,21],[89,24,121,22,"error"],[89,29,121,27],[89,30,121,28],[90,8,122,6],[91,6,123,4],[92,4,124,2],[92,5,124,3],[93,4,98,2],[93,13,98,2,"_ref"],[93,17,98,2],[93,21,98,43,"registeredObservers"],[93,40,98,62],[93,41,98,63,"entries"],[93,48,98,70],[93,49,98,71],[93,50,98,72],[94,6,98,72],[94,10,98,72,"_ref2"],[94,15,98,72],[94,22,98,72,"_slicedToArray2"],[94,37,98,72],[94,38,98,72,"default"],[94,45,98,72],[94,47,98,72,"_ref"],[94,51,98,72],[95,6,98,72],[95,10,98,14,"observer"],[95,19,98,22],[95,22,98,22,"_ref2"],[95,27,98,22],[96,6,98,22],[96,10,98,24,"observerConfig"],[96,24,98,38],[96,27,98,38,"_ref2"],[96,32,98,38],[97,6,98,38,"_loop"],[97,11,98,38],[97,12,98,38,"observerConfig"],[97,26,98,38],[98,4,98,38],[99,2,125,0],[99,3,125,1],[100,2,127,7],[100,11,127,16,"warnNoNativePerformanceObserver"],[100,42,127,47,"warnNoNativePerformanceObserver"],[100,43,127,47],[100,45,127,50],[101,4,128,2],[101,8,128,2,"warnOnce"],[101,25,128,10],[101,27,129,4],[101,64,129,41],[101,66,130,4],[101,120,131,2],[101,121,131,3],[102,2,132,0],[103,2,134,0],[103,11,134,9,"applyDurationThresholds"],[103,34,134,32,"applyDurationThresholds"],[103,35,134,32],[103,37,134,35],[104,4,135,2],[104,8,135,8,"durationThresholds"],[104,26,135,26],[104,29,135,29,"Array"],[104,34,135,34],[104,35,135,35,"from"],[104,39,135,39],[104,40,135,40,"registeredObservers"],[104,59,135,59],[104,60,135,60,"values"],[104,66,135,66],[104,67,135,67],[104,68,135,68],[104,69,135,69],[104,70,136,5,"map"],[104,73,136,8],[104,74,136,9,"observerConfig"],[104,88,136,23],[104,92,136,27,"observerConfig"],[104,106,136,41],[104,107,136,42,"durationThreshold"],[104,124,136,59],[104,125,136,60],[104,126,137,5,"filter"],[104,132,137,11],[104,133,137,12,"Boolean"],[104,140,137,19],[104,141,137,20],[105,4,139,2],[105,11,139,9,"Math"],[105,15,139,13],[105,16,139,14,"min"],[105,19,139,17],[105,20,139,18],[105,23,139,21,"durationThresholds"],[105,41,139,39],[105,42,139,40],[106,2,140,0],[107,2,142,0],[107,11,142,9,"getSupportedPerformanceEntryTypes"],[107,44,142,42,"getSupportedPerformanceEntryTypes"],[107,45,142,42],[107,47,142,83],[108,4,143,2],[108,8,143,6],[108,9,143,7,"NativePerformanceObserver"],[108,43,143,32],[108,45,143,34],[109,6,144,4],[109,13,144,11,"Object"],[109,19,144,17],[109,20,144,18,"freeze"],[109,26,144,24],[109,27,144,25],[109,29,144,27],[109,30,144,28],[110,4,145,2],[111,4,146,2],[111,8,146,6],[111,9,146,7,"NativePerformanceObserver"],[111,43,146,32],[111,44,146,33,"getSupportedPerformanceEntryTypes"],[111,77,146,66],[111,79,146,68],[112,6,148,4],[112,13,148,11,"Object"],[112,19,148,17],[112,20,148,18,"freeze"],[112,26,148,24],[112,27,148,25],[112,28,148,26],[112,34,148,32],[112,36,148,34],[112,45,148,43],[112,47,148,45],[112,54,148,52],[112,55,148,53],[112,56,148,54],[113,4,149,2],[114,4,150,2],[114,11,150,9,"Object"],[114,17,150,15],[114,18,150,16,"freeze"],[114,24,150,22],[114,25,151,4,"NativePerformanceObserver"],[114,59,151,29],[114,60,151,30,"getSupportedPerformanceEntryTypes"],[114,93,151,63],[114,94,151,64],[114,95,151,65],[114,96,151,66,"map"],[114,99,151,69],[114,100,152,6,"rawToPerformanceEntryType"],[114,146,153,4],[114,147,154,2],[114,148,154,3],[115,2,155,0],[116,2,155,1],[116,6,155,1,"_callback"],[116,15,155,1],[116,35,155,1,"_classPrivateFieldLooseKey2"],[116,62,155,1],[116,63,155,1,"default"],[116,70,155,1],[117,2,155,1],[117,6,155,1,"_type"],[117,11,155,1],[117,31,155,1,"_classPrivateFieldLooseKey2"],[117,58,155,1],[117,59,155,1,"default"],[117,66,155,1],[118,2,155,1],[118,6,155,1,"_validateObserveOptions"],[118,29,155,1],[118,49,155,1,"_classPrivateFieldLooseKey2"],[118,76,155,1],[118,77,155,1,"default"],[118,84,155,1],[119,2,155,1],[119,6,177,13,"PerformanceObserver"],[119,25,177,32],[119,28,177,32,"exports"],[119,35,177,32],[119,36,177,32,"PerformanceObserver"],[119,55,177,32],[120,4,181,2],[120,13,181,2,"PerformanceObserver"],[120,33,181,14,"callback"],[120,41,181,51],[120,43,181,53],[121,6,181,53],[121,10,181,53,"_classCallCheck2"],[121,26,181,53],[121,27,181,53,"default"],[121,34,181,53],[121,42,181,53,"PerformanceObserver"],[121,61,181,53],[122,6,181,53,"Object"],[122,12,181,53],[122,13,181,53,"defineProperty"],[122,27,181,53],[122,34,181,53,"_validateObserveOptions"],[122,57,181,53],[123,8,181,53,"value"],[123,13,181,53],[123,15,181,53,"_validateObserveOptions2"],[124,6,181,53],[125,6,181,53,"Object"],[125,12,181,53],[125,13,181,53,"defineProperty"],[125,27,181,53],[125,34,181,53,"_callback"],[125,43,181,53],[126,8,181,53,"writable"],[126,16,181,53],[127,8,181,53,"value"],[127,13,181,53],[128,6,181,53],[129,6,181,53,"Object"],[129,12,181,53],[129,13,181,53,"defineProperty"],[129,27,181,53],[129,34,181,53,"_type"],[129,39,181,53],[130,8,181,53,"writable"],[130,16,181,53],[131,8,181,53,"value"],[131,13,181,53],[132,6,181,53],[133,6,182,4],[133,10,182,4,"_classPrivateFieldLooseBase2"],[133,38,182,4],[133,39,182,4,"default"],[133,46,182,4],[133,52,182,8],[133,54,182,8,"_callback"],[133,63,182,8],[133,65,182,8,"_callback"],[133,74,182,8],[133,78,182,21,"callback"],[133,86,182,29],[134,4,183,2],[135,4,183,3],[135,15,183,3,"_createClass2"],[135,28,183,3],[135,29,183,3,"default"],[135,36,183,3],[135,38,183,3,"PerformanceObserver"],[135,57,183,3],[136,6,183,3,"key"],[136,9,183,3],[137,6,183,3,"value"],[137,11,183,3],[137,13,185,2],[137,22,185,2,"observe"],[137,29,185,9,"observe"],[137,30,185,10,"options"],[137,37,185,42],[137,39,185,50],[138,8,186,4],[138,12,186,8],[138,13,186,9,"NativePerformanceObserver"],[138,47,186,34],[138,49,186,36],[139,10,187,6,"warnNoNativePerformanceObserver"],[139,41,187,37],[139,42,187,38],[139,43,187,39],[140,10,188,6],[141,8,189,4],[142,8,191,4],[142,12,191,4,"_classPrivateFieldLooseBase2"],[142,40,191,4],[142,41,191,4,"default"],[142,48,191,4],[142,54,191,8],[142,56,191,8,"_validateObserveOptions"],[142,79,191,8],[142,81,191,8,"_validateObserveOptions"],[142,104,191,8],[142,106,191,33,"options"],[142,113,191,40],[143,8,193,4],[143,12,193,8,"requestedEntryTypes"],[143,31,193,27],[144,8,195,4],[144,12,195,8,"options"],[144,19,195,15],[144,20,195,16,"entryTypes"],[144,30,195,26],[144,32,195,28],[145,10,196,6],[145,14,196,6,"_classPrivateFieldLooseBase2"],[145,42,196,6],[145,43,196,6,"default"],[145,50,196,6],[145,56,196,10],[145,58,196,10,"_type"],[145,63,196,10],[145,65,196,10,"_type"],[145,70,196,10],[145,74,196,19],[145,84,196,29],[146,10,197,6,"requestedEntryTypes"],[146,29,197,25],[146,32,197,28],[146,36,197,32,"Set"],[146,39,197,35],[146,40,197,36,"options"],[146,47,197,43],[146,48,197,44,"entryTypes"],[146,58,197,54],[146,59,197,55],[147,8,198,4],[147,9,198,5],[147,15,198,11],[148,10,199,6],[148,14,199,6,"_classPrivateFieldLooseBase2"],[148,42,199,6],[148,43,199,6,"default"],[148,50,199,6],[148,56,199,10],[148,58,199,10,"_type"],[148,63,199,10],[148,65,199,10,"_type"],[148,70,199,10],[148,74,199,19],[148,82,199,27],[149,10,200,6,"requestedEntryTypes"],[149,29,200,25],[149,32,200,28],[149,36,200,32,"Set"],[149,39,200,35],[149,40,200,36],[149,41,200,37,"options"],[149,48,200,44],[149,49,200,45,"type"],[149,53,200,49],[149,54,200,50],[149,55,200,51],[150,8,201,4],[151,8,205,4],[151,12,205,10,"currentEntryTypes"],[151,29,205,27],[151,32,205,30,"registeredObservers"],[151,51,205,49],[151,52,205,50,"get"],[151,55,205,53],[151,56,205,54],[151,60,205,58],[151,61,205,59],[151,63,205,61,"entryTypes"],[151,73,205,71],[152,8,206,4],[152,12,206,10,"nextEntryTypes"],[152,26,206,24],[152,29,206,27,"currentEntryTypes"],[152,46,206,44],[152,49,207,8,"union"],[152,54,207,13],[152,55,207,14,"requestedEntryTypes"],[152,74,207,33],[152,76,207,35,"currentEntryTypes"],[152,93,207,52],[152,94,207,53],[152,97,208,8,"requestedEntryTypes"],[152,116,208,27],[153,8,211,4],[153,12,211,8,"currentEntryTypes"],[153,29,211,25],[153,33,211,29,"currentEntryTypes"],[153,50,211,46],[153,51,211,47,"size"],[153,55,211,51],[153,60,211,56,"nextEntryTypes"],[153,74,211,70],[153,75,211,71,"size"],[153,79,211,75],[153,81,211,77],[154,10,212,6],[155,8,213,4],[156,8,215,4,"registeredObservers"],[156,27,215,23],[156,28,215,24,"set"],[156,31,215,27],[156,32,215,28],[156,36,215,32],[156,38,215,34],[157,10,216,6,"callback"],[157,18,216,14],[157,24,216,14,"_classPrivateFieldLooseBase2"],[157,52,216,14],[157,53,216,14,"default"],[157,60,216,14],[157,62,216,16],[157,66,216,20],[157,68,216,20,"_callback"],[157,77,216,20],[157,79,216,20,"_callback"],[157,88,216,20],[157,89,216,30],[158,10,217,6,"durationThreshold"],[158,27,217,23],[158,29,218,8,"options"],[158,36,218,15],[158,37,218,16,"type"],[158,41,218,20],[158,46,218,25],[158,53,218,32],[158,56,218,35,"options"],[158,63,218,42],[158,64,218,43,"durationThreshold"],[158,81,218,60],[158,84,218,63,"undefined"],[158,93,218,72],[159,10,219,6,"entryTypes"],[159,20,219,16],[159,22,219,18,"nextEntryTypes"],[160,8,220,4],[160,9,220,5],[160,10,220,6],[161,8,222,4],[161,12,222,8],[161,13,222,9,"isOnPerformanceEntryCallbackSet"],[161,44,222,40],[161,46,222,42],[162,10,223,6,"NativePerformanceObserver"],[162,44,223,31],[162,45,223,32,"setOnPerformanceEntryCallback"],[162,74,223,61],[162,75,224,8,"onPerformanceEntry"],[162,93,225,6],[162,94,225,7],[163,10,226,6,"isOnPerformanceEntryCallbackSet"],[163,41,226,37],[163,44,226,40],[163,48,226,44],[164,8,227,4],[165,8,231,4],[165,12,231,10,"newEntryTypes"],[165,25,231,23],[165,28,231,26,"currentEntryTypes"],[165,45,231,43],[165,48,232,8,"difference"],[165,58,232,18],[165,59,233,10],[165,63,233,14,"Set"],[165,66,233,17],[165,67,233,18,"requestedEntryTypes"],[165,86,233,37],[165,87,233,38,"keys"],[165,91,233,42],[165,92,233,43],[165,93,233,44],[165,94,233,45],[165,96,234,10],[165,100,234,14,"Set"],[165,103,234,17],[165,104,234,18,"currentEntryTypes"],[165,121,234,35],[165,122,234,36,"keys"],[165,126,234,40],[165,127,234,41],[165,128,234,42],[165,129,235,8],[165,130,235,9],[165,133,236,8],[165,137,236,12,"Set"],[165,140,236,15],[165,141,236,16,"requestedEntryTypes"],[165,160,236,35],[165,161,236,36,"keys"],[165,165,236,40],[165,166,236,41],[165,167,236,42],[165,168,236,43],[166,8,237,4],[166,13,237,9],[166,17,237,15,"type"],[166,21,237,19],[166,25,237,23,"newEntryTypes"],[166,38,237,36],[166,40,237,38],[167,10,238,6],[167,14,238,10],[167,15,238,11,"observerCountPerEntryType"],[167,40,238,36],[167,41,238,37,"has"],[167,44,238,40],[167,45,238,41,"type"],[167,49,238,45],[167,50,238,46],[167,52,238,48],[168,12,239,8],[168,16,239,14,"rawType"],[168,23,239,21],[168,26,239,24],[168,30,239,24,"performanceEntryTypeToRaw"],[168,76,239,49],[168,78,239,50,"type"],[168,82,239,54],[168,83,239,55],[169,12,240,8,"NativePerformanceObserver"],[169,46,240,33],[169,47,240,34,"startReporting"],[169,61,240,48],[169,62,240,49,"rawType"],[169,69,240,56],[169,70,240,57],[170,10,241,6],[171,10,242,6,"observerCountPerEntryType"],[171,35,242,31],[171,36,242,32,"set"],[171,39,242,35],[171,40,243,8,"type"],[171,44,243,12],[171,46,244,8],[171,47,244,9,"observerCountPerEntryType"],[171,72,244,34],[171,73,244,35,"get"],[171,76,244,38],[171,77,244,39,"type"],[171,81,244,43],[171,82,244,44],[171,86,244,48],[171,87,244,49],[171,91,244,53],[171,92,245,6],[171,93,245,7],[172,8,246,4],[173,8,247,4,"applyDurationThresholds"],[173,31,247,27],[173,32,247,28],[173,33,247,29],[174,6,248,2],[175,4,248,3],[176,6,248,3,"key"],[176,9,248,3],[177,6,248,3,"value"],[177,11,248,3],[177,13,250,2],[177,22,250,2,"disconnect"],[177,32,250,12,"disconnect"],[177,33,250,12],[177,35,250,21],[178,8,251,4],[178,12,251,8],[178,13,251,9,"NativePerformanceObserver"],[178,47,251,34],[178,49,251,36],[179,10,252,6,"warnNoNativePerformanceObserver"],[179,41,252,37],[179,42,252,38],[179,43,252,39],[180,10,253,6],[181,8,254,4],[182,8,256,4],[182,12,256,10,"observerConfig"],[182,26,256,24],[182,29,256,27,"registeredObservers"],[182,48,256,46],[182,49,256,47,"get"],[182,52,256,50],[182,53,256,51],[182,57,256,55],[182,58,256,56],[183,8,257,4],[183,12,257,8],[183,13,257,9,"observerConfig"],[183,27,257,23],[183,29,257,25],[184,10,258,6],[185,8,259,4],[186,8,262,4],[186,13,262,9],[186,17,262,15,"type"],[186,21,262,19],[186,25,262,23,"observerConfig"],[186,39,262,37],[186,40,262,38,"entryTypes"],[186,50,262,48],[186,51,262,49,"keys"],[186,55,262,53],[186,56,262,54],[186,57,262,55],[186,59,262,57],[187,10,263,6],[187,14,263,12,"numberOfObserversForThisType"],[187,42,263,40],[187,45,264,8,"observerCountPerEntryType"],[187,70,264,33],[187,71,264,34,"get"],[187,74,264,37],[187,75,264,38,"type"],[187,79,264,42],[187,80,264,43],[187,84,264,47],[187,85,264,48],[188,10,265,6],[188,14,265,10,"numberOfObserversForThisType"],[188,42,265,38],[188,47,265,43],[188,48,265,44],[188,50,265,46],[189,12,266,8,"observerCountPerEntryType"],[189,37,266,33],[189,38,266,34,"delete"],[189,44,266,40],[189,45,266,41,"type"],[189,49,266,45],[189,50,266,46],[190,12,267,8,"NativePerformanceObserver"],[190,46,267,33],[190,47,267,34,"stopReporting"],[190,60,267,47],[190,61,268,10],[190,65,268,10,"performanceEntryTypeToRaw"],[190,111,268,35],[190,113,268,36,"type"],[190,117,268,40],[190,118,269,8],[190,119,269,9],[191,10,270,6],[191,11,270,7],[191,17,270,13],[191,21,270,17,"numberOfObserversForThisType"],[191,49,270,45],[191,54,270,50],[191,55,270,51],[191,57,270,53],[192,12,271,8,"observerCountPerEntryType"],[192,37,271,33],[192,38,271,34,"set"],[192,41,271,37],[192,42,271,38,"type"],[192,46,271,42],[192,48,271,44,"numberOfObserversForThisType"],[192,76,271,72],[192,79,271,75],[192,80,271,76],[192,81,271,77],[193,10,272,6],[194,8,273,4],[195,8,276,4,"registeredObservers"],[195,27,276,23],[195,28,276,24,"delete"],[195,34,276,30],[195,35,276,31],[195,39,276,35],[195,40,276,36],[196,8,277,4],[196,12,277,8,"registeredObservers"],[196,31,277,27],[196,32,277,28,"size"],[196,36,277,32],[196,41,277,37],[196,42,277,38],[196,44,277,40],[197,10,278,6,"NativePerformanceObserver"],[197,44,278,31],[197,45,278,32,"setOnPerformanceEntryCallback"],[197,74,278,61],[197,75,278,62,"undefined"],[197,84,278,71],[197,85,278,72],[198,10,279,6,"isOnPerformanceEntryCallbackSet"],[198,41,279,37],[198,44,279,40],[198,49,279,45],[199,8,280,4],[200,8,282,4,"applyDurationThresholds"],[200,31,282,27],[200,32,282,28],[200,33,282,29],[201,6,283,2],[202,4,283,3],[203,2,283,3],[204,2,283,3],[204,11,283,3,"_validateObserveOptions2"],[204,36,285,26,"options"],[204,43,285,58],[204,45,285,66],[205,4,286,4],[205,8,286,11,"type"],[205,12,286,15],[205,15,286,50,"options"],[205,22,286,57],[205,23,286,11,"type"],[205,27,286,15],[206,6,286,17,"entryTypes"],[206,16,286,27],[206,19,286,50,"options"],[206,26,286,57],[206,27,286,17,"entryTypes"],[206,37,286,27],[207,6,286,29,"durationThreshold"],[207,23,286,46],[207,26,286,50,"options"],[207,33,286,57],[207,34,286,29,"durationThreshold"],[207,51,286,46],[208,4,288,4],[208,8,288,8],[208,9,288,9,"type"],[208,13,288,13],[208,17,288,17],[208,18,288,18,"entryTypes"],[208,28,288,28],[208,30,288,30],[209,6,289,6],[209,12,289,12],[209,16,289,16,"TypeError"],[209,25,289,25],[209,26,290,8],[209,152,291,6],[209,153,291,7],[210,4,292,4],[211,4,294,4],[211,8,294,8,"entryTypes"],[211,18,294,18],[211,22,294,22,"type"],[211,26,294,26],[211,28,294,28],[212,6,295,6],[212,12,295,12],[212,16,295,16,"TypeError"],[212,25,295,25],[212,26,296,8],[212,149,297,6],[212,150,297,7],[213,4,298,4],[214,4,300,4],[214,8,300,8],[214,12,300,8,"_classPrivateFieldLooseBase2"],[214,40,300,8],[214,41,300,8,"default"],[214,48,300,8],[214,54,300,12],[214,56,300,12,"_type"],[214,61,300,12],[214,63,300,12,"_type"],[214,68,300,12],[214,74,300,23],[214,84,300,33],[214,88,300,37,"type"],[214,92,300,41],[214,94,300,43],[215,6,301,6],[215,12,301,12],[215,16,301,16,"Error"],[215,21,301,21],[215,22,302,8],[215,179,303,6],[215,180,303,7],[216,4,304,4],[217,4,306,4],[217,8,306,8],[217,12,306,8,"_classPrivateFieldLooseBase2"],[217,40,306,8],[217,41,306,8,"default"],[217,48,306,8],[217,54,306,12],[217,56,306,12,"_type"],[217,61,306,12],[217,63,306,12,"_type"],[217,68,306,12],[217,74,306,23],[217,82,306,31],[217,86,306,35,"entryTypes"],[217,96,306,45],[217,98,306,47],[218,6,307,6],[218,12,307,12],[218,16,307,16,"Error"],[218,21,307,21],[218,22,308,8],[218,190,309,6],[218,191,309,7],[219,4,310,4],[220,4,312,4],[220,8,312,8,"entryTypes"],[220,18,312,18],[220,22,312,22,"durationThreshold"],[220,39,312,39],[220,44,312,44,"undefined"],[220,53,312,53],[220,55,312,55],[221,6,313,6],[221,12,313,12],[221,16,313,16,"TypeError"],[221,25,313,25],[221,26,314,8],[221,165,315,6],[221,166,315,7],[222,4,316,4],[223,2,317,2],[224,2,177,13,"PerformanceObserver"],[224,21,177,32],[224,22,319,9,"supportedEntryTypes"],[224,41,319,28],[224,44,320,4,"getSupportedPerformanceEntryTypes"],[224,77,320,37],[224,78,320,38],[224,79,320,39],[225,2,323,0],[225,11,323,9,"union"],[225,16,323,14,"union"],[225,17,323,18,"a"],[225,18,323,36],[225,20,323,38,"b"],[225,21,323,56],[225,23,323,66],[226,4,324,2],[226,11,324,9],[226,15,324,13,"Set"],[226,18,324,16],[226,19,324,17],[226,20,324,18],[226,23,324,21,"a"],[226,24,324,22],[226,26,324,24],[226,29,324,27,"b"],[226,30,324,28],[226,31,324,29],[226,32,324,30],[227,2,325,0],[228,2,327,0],[228,11,327,9,"difference"],[228,21,327,19,"difference"],[228,22,327,23,"a"],[228,23,327,41],[228,25,327,43,"b"],[228,26,327,61],[228,28,327,71],[229,4,328,2],[229,11,328,9],[229,15,328,13,"Set"],[229,18,328,16],[229,19,328,17],[229,20,328,18],[229,23,328,21,"a"],[229,24,328,22],[229,25,328,23],[229,26,328,24,"filter"],[229,32,328,30],[229,33,328,31,"x"],[229,34,328,32],[229,38,328,36],[229,39,328,37,"b"],[229,40,328,38],[229,41,328,39,"has"],[229,44,328,42],[229,45,328,43,"x"],[229,46,328,44],[229,47,328,45],[229,48,328,46],[229,49,328,47],[230,2,329,0],[231,0,329,1],[231,3]],"functionMap":{"names":["<global>","PerformanceObserverEntryList","PerformanceObserverEntryList#constructor","PerformanceObserverEntryList#getEntries","PerformanceObserverEntryList#getEntriesByType","filter$argument_0","PerformanceObserverEntryList#getEntriesByName","onPerformanceEntry","entries.filter$argument_0","warnNoNativePerformanceObserver","applyDurationThresholds","Array.from.map$argument_0","getSupportedPerformanceEntryTypes","PerformanceObserver","constructor","observe","disconnect","<anonymous>","union","difference"],"mappings":"AAA;OC6B;ECG;GDE;EEE;GFE;EGE;gCCC,iCD;GHC;EKE;kCDK,4BC;QDG,wDC;GLG;CDC;2BO8B;oECY;KDa;CPa;OSE;CTK;AUE;SCE,kDD;CVI;AYE;CZa;OasB;ECI;GDE;EEE;GF+D;EGE;GHiC;EIE;GJgC;CbI;AkBE;ClBE;AmBE;+BdC,cc;CnBC"}},"type":"js/module"}]}