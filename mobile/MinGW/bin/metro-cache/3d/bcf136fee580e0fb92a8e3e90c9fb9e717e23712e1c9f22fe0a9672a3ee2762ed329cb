{"dependencies":[{"name":"./LogBoxSymbolication","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"FRYs8b/TcYb52f7GsizAy66txAY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LogBoxLog = void 0;\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[0], \"./LogBoxSymbolication\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  class LogBoxLog {\n    symbolicated = {\n      stack: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      },\n      component: {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      }\n    };\n    callbacks = new Map();\n    constructor(data) {\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    incrementCount() {\n      this.count += 1;\n    }\n    getAvailableStack(type) {\n      if (this.symbolicated[type].status === 'COMPLETE') {\n        return this.symbolicated[type].stack;\n      }\n      return this.getStack(type);\n    }\n    flushCallbacks(type) {\n      const callbacks = this.callbacks.get(type);\n      const status = this.symbolicated[type].status;\n      if (callbacks) {\n        for (const callback of callbacks) {\n          callback(status);\n        }\n        callbacks.clear();\n      }\n    }\n    pushCallback(type, callback) {\n      let callbacks = this.callbacks.get(type);\n      if (!callbacks) {\n        callbacks = new Set();\n        this.callbacks.set(type, callbacks);\n      }\n      callbacks.add(callback);\n    }\n    retrySymbolicate(type, callback) {\n      this._symbolicate(type, true, callback);\n    }\n    symbolicate(type, callback) {\n      this._symbolicate(type, false, callback);\n    }\n    _symbolicate(type, retry, callback) {\n      if (callback) {\n        this.pushCallback(type, callback);\n      }\n      const status = this.symbolicated[type].status;\n      if (status === 'COMPLETE') {\n        return this.flushCallbacks(type);\n      }\n      if (retry) {\n        LogBoxSymbolication.deleteStack(this.getStack(type));\n        this.handleSymbolicate(type);\n      } else {\n        if (status === 'NONE') {\n          this.handleSymbolicate(type);\n        }\n      }\n    }\n    componentStackCache = null;\n    getStack(type) {\n      if (type === 'component') {\n        if (this.componentStackCache == null) {\n          this.componentStackCache = componentStackToStack(this.componentStack);\n        }\n        return this.componentStackCache;\n      }\n      return this.stack;\n    }\n    handleSymbolicate(type) {\n      if (type === 'component' && !this.componentStack?.length) {\n        return;\n      }\n      if (this.symbolicated[type].status !== 'PENDING') {\n        this.updateStatus(type, null, null, null);\n        LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n          this.updateStatus(type, null, data?.stack, data?.codeFrame);\n        }, error => {\n          this.updateStatus(type, error, null, null);\n        });\n      }\n    }\n    updateStatus(type, error, stack, codeFrame) {\n      const lastStatus = this.symbolicated[type].status;\n      if (error != null) {\n        this.symbolicated[type] = {\n          error,\n          stack: null,\n          status: 'FAILED'\n        };\n      } else if (stack != null) {\n        if (codeFrame) {\n          this.codeFrame = codeFrame;\n        }\n        this.symbolicated[type] = {\n          error: null,\n          stack,\n          status: 'COMPLETE'\n        };\n      } else {\n        this.symbolicated[type] = {\n          error: null,\n          stack: null,\n          status: 'PENDING'\n        };\n      }\n      const status = this.symbolicated[type].status;\n      if (lastStatus !== status) {\n        if (['COMPLETE', 'FAILED'].includes(status)) {\n          this.flushCallbacks(type);\n        }\n      }\n    }\n  }\n\n  // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  exports.LogBoxLog = LogBoxLog;\n  function ensureStackFilesHaveParams(stack) {\n    const currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    const currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      const url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":185,"map":[[6,2,9,0],[6,6,9,0,"LogBoxSymbolication"],[6,25,9,0],[6,28,9,0,"_interopRequireWildcard"],[6,51,9,0],[6,52,9,0,"require"],[6,59,9,0],[6,60,9,0,"_dependencyMap"],[6,74,9,0],[7,2,9,61],[7,11,9,61,"_getRequireWildcardCache"],[7,36,9,61,"e"],[7,37,9,61],[7,66,9,61,"WeakMap"],[7,73,9,61],[7,92,9,61,"r"],[7,93,9,61],[7,100,9,61,"WeakMap"],[7,107,9,61],[7,111,9,61,"t"],[7,112,9,61],[7,119,9,61,"WeakMap"],[7,126,9,61],[7,138,9,61,"_getRequireWildcardCache"],[7,162,9,61],[7,174,9,61,"_getRequireWildcardCache"],[7,175,9,61,"e"],[7,176,9,61],[7,187,9,61,"e"],[7,188,9,61],[7,191,9,61,"t"],[7,192,9,61],[7,195,9,61,"r"],[7,196,9,61],[7,201,9,61,"e"],[7,202,9,61],[8,2,9,61],[8,11,9,61,"_interopRequireWildcard"],[8,35,9,61,"e"],[8,36,9,61],[8,38,9,61,"r"],[8,39,9,61],[8,48,9,61,"r"],[8,49,9,61],[8,53,9,61,"e"],[8,54,9,61],[8,58,9,61,"e"],[8,59,9,61],[8,60,9,61,"__esModule"],[8,70,9,61],[8,79,9,61,"e"],[8,80,9,61],[8,95,9,61,"e"],[8,96,9,61],[8,119,9,61,"e"],[8,120,9,61],[8,145,9,61,"e"],[8,146,9,61],[8,157,9,61,"default"],[8,164,9,61],[8,166,9,61,"e"],[8,167,9,61],[8,175,9,61,"t"],[8,176,9,61],[8,179,9,61,"_getRequireWildcardCache"],[8,203,9,61],[8,204,9,61,"r"],[8,205,9,61],[8,212,9,61,"t"],[8,213,9,61],[8,217,9,61,"t"],[8,218,9,61],[8,219,9,61,"has"],[8,222,9,61],[8,223,9,61,"e"],[8,224,9,61],[8,234,9,61,"t"],[8,235,9,61],[8,236,9,61,"get"],[8,239,9,61],[8,240,9,61,"e"],[8,241,9,61],[8,248,9,61,"n"],[8,249,9,61],[8,254,9,61,"__proto__"],[8,263,9,61],[8,273,9,61,"a"],[8,274,9,61],[8,277,9,61,"Object"],[8,283,9,61],[8,284,9,61,"defineProperty"],[8,298,9,61],[8,302,9,61,"Object"],[8,308,9,61],[8,309,9,61,"getOwnPropertyDescriptor"],[8,333,9,61],[8,344,9,61,"u"],[8,345,9,61],[8,349,9,61,"e"],[8,350,9,61],[8,370,9,61,"u"],[8,371,9,61],[8,378,9,61,"hasOwnProperty"],[8,392,9,61],[8,393,9,61,"call"],[8,397,9,61],[8,398,9,61,"e"],[8,399,9,61],[8,401,9,61,"u"],[8,402,9,61],[8,411,9,61,"i"],[8,412,9,61],[8,415,9,61,"a"],[8,416,9,61],[8,419,9,61,"Object"],[8,425,9,61],[8,426,9,61,"getOwnPropertyDescriptor"],[8,450,9,61],[8,451,9,61,"e"],[8,452,9,61],[8,454,9,61,"u"],[8,455,9,61],[8,465,9,61,"i"],[8,466,9,61],[8,471,9,61,"i"],[8,472,9,61],[8,473,9,61,"get"],[8,476,9,61],[8,480,9,61,"i"],[8,481,9,61],[8,482,9,61,"set"],[8,485,9,61],[8,489,9,61,"Object"],[8,495,9,61],[8,496,9,61,"defineProperty"],[8,510,9,61],[8,511,9,61,"n"],[8,512,9,61],[8,514,9,61,"u"],[8,515,9,61],[8,517,9,61,"i"],[8,518,9,61],[8,522,9,61,"n"],[8,523,9,61],[8,524,9,61,"u"],[8,525,9,61],[8,529,9,61,"e"],[8,530,9,61],[8,531,9,61,"u"],[8,532,9,61],[8,544,9,61,"n"],[8,545,9,61],[8,546,9,61,"default"],[8,553,9,61],[8,556,9,61,"e"],[8,557,9,61],[8,559,9,61,"t"],[8,560,9,61],[8,564,9,61,"t"],[8,565,9,61],[8,566,9,61,"set"],[8,569,9,61],[8,570,9,61,"e"],[8,571,9,61],[8,573,9,61,"n"],[8,574,9,61],[8,577,9,61,"n"],[8,578,9,61],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[17,2,30,0],[17,11,30,9,"componentStackToStack"],[17,32,30,30,"componentStackToStack"],[17,33,30,31,"componentStack"],[17,47,30,61],[17,49,30,70],[18,4,31,2],[18,11,31,9,"componentStack"],[18,25,31,23],[18,26,31,24,"map"],[18,29,31,27],[18,30,31,29,"stack"],[18,35,31,34],[18,40,31,40],[19,6,32,4,"file"],[19,10,32,8],[19,12,32,10,"stack"],[19,17,32,15],[19,18,32,16,"fileName"],[19,26,32,24],[20,6,33,4,"methodName"],[20,16,33,14],[20,18,33,16,"stack"],[20,23,33,21],[20,24,33,22,"content"],[20,31,33,29],[21,6,34,4,"lineNumber"],[21,16,34,14],[21,18,34,16,"stack"],[21,23,34,21],[21,24,34,22,"location"],[21,32,34,30],[21,34,34,32,"row"],[21,37,34,35],[21,41,34,39],[21,42,34,40],[22,6,35,4,"column"],[22,12,35,10],[22,14,35,12,"stack"],[22,19,35,17],[22,20,35,18,"location"],[22,28,35,26],[22,30,35,28,"column"],[22,36,35,34],[22,40,35,38],[22,41,35,39],[23,6,36,4,"arguments"],[23,15,36,13],[23,17,36,15],[24,4,37,2],[24,5,37,3],[24,6,37,4],[24,7,37,5],[25,2,38,0],[26,2,48,7],[26,8,48,13,"LogBoxLog"],[26,17,48,22],[26,18,48,23],[27,4,58,2,"symbolicated"],[27,16,58,14],[27,19,58,57],[28,6,59,4,"stack"],[28,11,59,9],[28,13,59,11],[29,8,60,6,"error"],[29,13,60,11],[29,15,60,13],[29,19,60,17],[30,8,61,6,"stack"],[30,13,61,11],[30,15,61,13],[30,19,61,17],[31,8,62,6,"status"],[31,14,62,12],[31,16,62,14],[32,6,63,4],[32,7,63,5],[33,6,64,4,"component"],[33,15,64,13],[33,17,64,15],[34,8,65,6,"error"],[34,13,65,11],[34,15,65,13],[34,19,65,17],[35,8,66,6,"stack"],[35,13,66,11],[35,15,66,13],[35,19,66,17],[36,8,67,6,"status"],[36,14,67,12],[36,16,67,14],[37,6,68,4],[38,4,69,2],[38,5,69,3],[39,4,71,10,"callbacks"],[39,13,71,19],[39,16,71,66],[39,20,71,70,"Map"],[39,23,71,73],[39,24,71,74],[39,25,71,75],[40,4,73,2,"constructor"],[40,15,73,13,"constructor"],[40,16,74,4,"data"],[40,20,76,5],[40,22,77,4],[41,6,78,4],[41,10,78,8],[41,11,78,9,"level"],[41,16,78,14],[41,19,78,17,"data"],[41,23,78,21],[41,24,78,22,"level"],[41,29,78,27],[42,6,79,4],[42,10,79,8],[42,11,79,9,"type"],[42,15,79,13],[42,18,79,16,"data"],[42,22,79,20],[42,23,79,21,"type"],[42,27,79,25],[42,31,79,29],[42,38,79,36],[43,6,80,4],[43,10,80,8],[43,11,80,9,"message"],[43,18,80,16],[43,21,80,19,"data"],[43,25,80,23],[43,26,80,24,"message"],[43,33,80,31],[44,6,81,4],[44,10,81,8],[44,11,81,9,"stack"],[44,16,81,14],[44,19,81,17,"data"],[44,23,81,21],[44,24,81,22,"stack"],[44,29,81,27],[45,6,82,4],[45,10,82,8],[45,11,82,9,"category"],[45,19,82,17],[45,22,82,20,"data"],[45,26,82,24],[45,27,82,25,"category"],[45,35,82,33],[46,6,83,4],[46,10,83,8],[46,11,83,9,"componentStack"],[46,25,83,23],[46,28,83,26,"data"],[46,32,83,30],[46,33,83,31,"componentStack"],[46,47,83,45],[47,6,84,4],[47,10,84,8],[47,11,84,9,"codeFrame"],[47,20,84,18],[47,23,84,21,"data"],[47,27,84,25],[47,28,84,26,"codeFrame"],[47,37,84,35],[48,6,85,4],[48,10,85,8],[48,11,85,9,"isComponentError"],[48,27,85,25],[48,30,85,28,"data"],[48,34,85,32],[48,35,85,33,"isComponentError"],[48,51,85,49],[49,6,86,4],[49,10,86,8],[49,11,86,9,"count"],[49,16,86,14],[49,19,86,17],[49,20,86,18],[50,6,87,4],[50,10,87,8],[50,11,87,9,"symbolicated"],[50,23,87,21],[50,26,87,24,"data"],[50,30,87,28],[50,31,87,29,"symbolicated"],[50,43,87,41],[50,47,87,45],[50,51,87,49],[50,52,87,50,"symbolicated"],[50,64,87,62],[51,4,88,2],[52,4,90,2,"incrementCount"],[52,18,90,16,"incrementCount"],[52,19,90,16],[52,21,90,25],[53,6,91,4],[53,10,91,8],[53,11,91,9,"count"],[53,16,91,14],[53,20,91,18],[53,21,91,19],[54,4,92,2],[55,4,94,2,"getAvailableStack"],[55,21,94,19,"getAvailableStack"],[55,22,94,20,"type"],[55,26,94,35],[55,28,94,51],[56,6,95,4],[56,10,95,8],[56,14,95,12],[56,15,95,13,"symbolicated"],[56,27,95,25],[56,28,95,26,"type"],[56,32,95,30],[56,33,95,31],[56,34,95,32,"status"],[56,40,95,38],[56,45,95,43],[56,55,95,53],[56,57,95,55],[57,8,96,6],[57,15,96,13],[57,19,96,17],[57,20,96,18,"symbolicated"],[57,32,96,30],[57,33,96,31,"type"],[57,37,96,35],[57,38,96,36],[57,39,96,37,"stack"],[57,44,96,42],[58,6,97,4],[59,6,98,4],[59,13,98,11],[59,17,98,15],[59,18,98,16,"getStack"],[59,26,98,24],[59,27,98,25,"type"],[59,31,98,29],[59,32,98,30],[60,4,99,2],[61,4,101,10,"flushCallbacks"],[61,18,101,24,"flushCallbacks"],[61,19,101,25,"type"],[61,23,101,40],[61,25,101,48],[62,6,102,4],[62,12,102,10,"callbacks"],[62,21,102,19],[62,24,102,22],[62,28,102,26],[62,29,102,27,"callbacks"],[62,38,102,36],[62,39,102,37,"get"],[62,42,102,40],[62,43,102,41,"type"],[62,47,102,45],[62,48,102,46],[63,6,103,4],[63,12,103,10,"status"],[63,18,103,16],[63,21,103,19],[63,25,103,23],[63,26,103,24,"symbolicated"],[63,38,103,36],[63,39,103,37,"type"],[63,43,103,41],[63,44,103,42],[63,45,103,43,"status"],[63,51,103,49],[64,6,104,4],[64,10,104,8,"callbacks"],[64,19,104,17],[64,21,104,19],[65,8,105,6],[65,13,105,11],[65,19,105,17,"callback"],[65,27,105,25],[65,31,105,29,"callbacks"],[65,40,105,38],[65,42,105,40],[66,10,106,8,"callback"],[66,18,106,16],[66,19,106,17,"status"],[66,25,106,23],[66,26,106,24],[67,8,107,6],[68,8,108,6,"callbacks"],[68,17,108,15],[68,18,108,16,"clear"],[68,23,108,21],[68,24,108,22],[68,25,108,23],[69,6,109,4],[70,4,110,2],[71,4,112,10,"pushCallback"],[71,16,112,22,"pushCallback"],[71,17,112,23,"type"],[71,21,112,38],[71,23,112,40,"callback"],[71,31,112,71],[71,33,112,79],[72,6,113,4],[72,10,113,8,"callbacks"],[72,19,113,17],[72,22,113,20],[72,26,113,24],[72,27,113,25,"callbacks"],[72,36,113,34],[72,37,113,35,"get"],[72,40,113,38],[72,41,113,39,"type"],[72,45,113,43],[72,46,113,44],[73,6,114,4],[73,10,114,8],[73,11,114,9,"callbacks"],[73,20,114,18],[73,22,114,20],[74,8,115,6,"callbacks"],[74,17,115,15],[74,20,115,18],[74,24,115,22,"Set"],[74,27,115,25],[74,28,115,26],[74,29,115,27],[75,8,116,6],[75,12,116,10],[75,13,116,11,"callbacks"],[75,22,116,20],[75,23,116,21,"set"],[75,26,116,24],[75,27,116,25,"type"],[75,31,116,29],[75,33,116,31,"callbacks"],[75,42,116,40],[75,43,116,41],[76,6,117,4],[77,6,118,4,"callbacks"],[77,15,118,13],[77,16,118,14,"add"],[77,19,118,17],[77,20,118,18,"callback"],[77,28,118,26],[77,29,118,27],[78,4,119,2],[79,4,121,2,"retrySymbolicate"],[79,20,121,18,"retrySymbolicate"],[79,21,121,19,"type"],[79,25,121,34],[79,27,121,36,"callback"],[79,35,121,84],[79,37,121,92],[80,6,122,4],[80,10,122,8],[80,11,122,9,"_symbolicate"],[80,23,122,21],[80,24,122,22,"type"],[80,28,122,26],[80,30,122,28],[80,34,122,32],[80,36,122,34,"callback"],[80,44,122,42],[80,45,122,43],[81,4,123,2],[82,4,125,2,"symbolicate"],[82,15,125,13,"symbolicate"],[82,16,125,14,"type"],[82,20,125,29],[82,22,125,31,"callback"],[82,30,125,79],[82,32,125,87],[83,6,126,4],[83,10,126,8],[83,11,126,9,"_symbolicate"],[83,23,126,21],[83,24,126,22,"type"],[83,28,126,26],[83,30,126,28],[83,35,126,33],[83,37,126,35,"callback"],[83,45,126,43],[83,46,126,44],[84,4,127,2],[85,4,129,10,"_symbolicate"],[85,16,129,22,"_symbolicate"],[85,17,130,4,"type"],[85,21,130,19],[85,23,131,4,"retry"],[85,28,131,18],[85,30,132,4,"callback"],[85,38,132,52],[85,40,133,10],[86,6,134,4],[86,10,134,8,"callback"],[86,18,134,16],[86,20,134,18],[87,8,135,6],[87,12,135,10],[87,13,135,11,"pushCallback"],[87,25,135,23],[87,26,135,24,"type"],[87,30,135,28],[87,32,135,30,"callback"],[87,40,135,38],[87,41,135,39],[88,6,136,4],[89,6,137,4],[89,12,137,10,"status"],[89,18,137,16],[89,21,137,19],[89,25,137,23],[89,26,137,24,"symbolicated"],[89,38,137,36],[89,39,137,37,"type"],[89,43,137,41],[89,44,137,42],[89,45,137,43,"status"],[89,51,137,49],[90,6,139,4],[90,10,139,8,"status"],[90,16,139,14],[90,21,139,19],[90,31,139,29],[90,33,139,31],[91,8,140,6],[91,15,140,13],[91,19,140,17],[91,20,140,18,"flushCallbacks"],[91,34,140,32],[91,35,140,33,"type"],[91,39,140,37],[91,40,140,38],[92,6,141,4],[93,6,143,4],[93,10,143,8,"retry"],[93,15,143,13],[93,17,143,15],[94,8,144,6,"LogBoxSymbolication"],[94,27,144,25],[94,28,144,26,"deleteStack"],[94,39,144,37],[94,40,144,38],[94,44,144,42],[94,45,144,43,"getStack"],[94,53,144,51],[94,54,144,52,"type"],[94,58,144,56],[94,59,144,57],[94,60,144,58],[95,8,145,6],[95,12,145,10],[95,13,145,11,"handleSymbolicate"],[95,30,145,28],[95,31,145,29,"type"],[95,35,145,33],[95,36,145,34],[96,6,146,4],[96,7,146,5],[96,13,146,11],[97,8,147,6],[97,12,147,10,"status"],[97,18,147,16],[97,23,147,21],[97,29,147,27],[97,31,147,29],[98,10,148,8],[98,14,148,12],[98,15,148,13,"handleSymbolicate"],[98,32,148,30],[98,33,148,31,"type"],[98,37,148,35],[98,38,148,36],[99,8,149,6],[100,6,150,4],[101,4,151,2],[102,4,153,10,"componentStackCache"],[102,23,153,29],[102,26,153,46],[102,30,153,50],[103,4,155,10,"getStack"],[103,12,155,18,"getStack"],[103,13,155,19,"type"],[103,17,155,34],[103,19,155,43],[104,6,156,4],[104,10,156,8,"type"],[104,14,156,12],[104,19,156,17],[104,30,156,28],[104,32,156,30],[105,8,157,6],[105,12,157,10],[105,16,157,14],[105,17,157,15,"componentStackCache"],[105,36,157,34],[105,40,157,38],[105,44,157,42],[105,46,157,44],[106,10,158,8],[106,14,158,12],[106,15,158,13,"componentStackCache"],[106,34,158,32],[106,37,158,35,"componentStackToStack"],[106,58,158,56],[106,59,158,57],[106,63,158,61],[106,64,158,62,"componentStack"],[106,78,158,76],[106,79,158,77],[107,8,159,6],[108,8,160,6],[108,15,160,13],[108,19,160,17],[108,20,160,18,"componentStackCache"],[108,39,160,37],[109,6,161,4],[110,6,162,4],[110,13,162,11],[110,17,162,15],[110,18,162,16,"stack"],[110,23,162,21],[111,4,163,2],[112,4,165,10,"handleSymbolicate"],[112,21,165,27,"handleSymbolicate"],[112,22,165,28,"type"],[112,26,165,43],[112,28,165,51],[113,6,166,4],[113,10,166,8,"type"],[113,14,166,12],[113,19,166,17],[113,30,166,28],[113,34,166,32],[113,35,166,33],[113,39,166,37],[113,40,166,38,"componentStack"],[113,54,166,52],[113,56,166,54,"length"],[113,62,166,60],[113,64,166,62],[114,8,167,6],[115,6,168,4],[116,6,170,4],[116,10,170,8],[116,14,170,12],[116,15,170,13,"symbolicated"],[116,27,170,25],[116,28,170,26,"type"],[116,32,170,30],[116,33,170,31],[116,34,170,32,"status"],[116,40,170,38],[116,45,170,43],[116,54,170,52],[116,56,170,54],[117,8,171,6],[117,12,171,10],[117,13,171,11,"updateStatus"],[117,25,171,23],[117,26,171,24,"type"],[117,30,171,28],[117,32,171,30],[117,36,171,34],[117,38,171,36],[117,42,171,40],[117,44,171,42],[117,48,171,46],[117,49,171,47],[118,8,172,6,"LogBoxSymbolication"],[118,27,172,25],[118,28,172,26,"symbolicate"],[118,39,172,37],[118,40,172,38,"ensureStackFilesHaveParams"],[118,66,172,64],[118,67,172,65],[118,71,172,69],[118,72,172,70,"getStack"],[118,80,172,78],[118,81,172,79,"type"],[118,85,172,83],[118,86,172,84],[118,87,172,85],[118,88,172,86],[118,89,172,87,"then"],[118,93,172,91],[118,94,173,9,"data"],[118,98,173,13],[118,102,173,18],[119,10,174,10],[119,14,174,14],[119,15,174,15,"updateStatus"],[119,27,174,27],[119,28,174,28,"type"],[119,32,174,32],[119,34,174,34],[119,38,174,38],[119,40,174,40,"data"],[119,44,174,44],[119,46,174,46,"stack"],[119,51,174,51],[119,53,174,53,"data"],[119,57,174,57],[119,59,174,59,"codeFrame"],[119,68,174,68],[119,69,174,69],[120,8,175,8],[120,9,175,9],[120,11,176,9,"error"],[120,16,176,14],[120,20,176,19],[121,10,177,10],[121,14,177,14],[121,15,177,15,"updateStatus"],[121,27,177,27],[121,28,177,28,"type"],[121,32,177,32],[121,34,177,34,"error"],[121,39,177,39],[121,41,177,41],[121,45,177,45],[121,47,177,47],[121,51,177,51],[121,52,177,52],[122,8,178,8],[122,9,179,6],[122,10,179,7],[123,6,180,4],[124,4,181,2],[125,4,183,10,"updateStatus"],[125,16,183,22,"updateStatus"],[125,17,184,4,"type"],[125,21,184,19],[125,23,185,4,"error"],[125,28,185,24],[125,30,186,4,"stack"],[125,35,186,24],[125,37,187,4,"codeFrame"],[125,46,187,32],[125,48,188,10],[126,6,189,4],[126,12,189,10,"lastStatus"],[126,22,189,20],[126,25,189,23],[126,29,189,27],[126,30,189,28,"symbolicated"],[126,42,189,40],[126,43,189,41,"type"],[126,47,189,45],[126,48,189,46],[126,49,189,47,"status"],[126,55,189,53],[127,6,190,4],[127,10,190,8,"error"],[127,15,190,13],[127,19,190,17],[127,23,190,21],[127,25,190,23],[128,8,191,6],[128,12,191,10],[128,13,191,11,"symbolicated"],[128,25,191,23],[128,26,191,24,"type"],[128,30,191,28],[128,31,191,29],[128,34,191,32],[129,10,192,8,"error"],[129,15,192,13],[130,10,193,8,"stack"],[130,15,193,13],[130,17,193,15],[130,21,193,19],[131,10,194,8,"status"],[131,16,194,14],[131,18,194,16],[132,8,195,6],[132,9,195,7],[133,6,196,4],[133,7,196,5],[133,13,196,11],[133,17,196,15,"stack"],[133,22,196,20],[133,26,196,24],[133,30,196,28],[133,32,196,30],[134,8,197,6],[134,12,197,10,"codeFrame"],[134,21,197,19],[134,23,197,21],[135,10,198,8],[135,14,198,12],[135,15,198,13,"codeFrame"],[135,24,198,22],[135,27,198,25,"codeFrame"],[135,36,198,34],[136,8,199,6],[137,8,201,6],[137,12,201,10],[137,13,201,11,"symbolicated"],[137,25,201,23],[137,26,201,24,"type"],[137,30,201,28],[137,31,201,29],[137,34,201,32],[138,10,202,8,"error"],[138,15,202,13],[138,17,202,15],[138,21,202,19],[139,10,203,8,"stack"],[139,15,203,13],[140,10,204,8,"status"],[140,16,204,14],[140,18,204,16],[141,8,205,6],[141,9,205,7],[142,6,206,4],[142,7,206,5],[142,13,206,11],[143,8,207,6],[143,12,207,10],[143,13,207,11,"symbolicated"],[143,25,207,23],[143,26,207,24,"type"],[143,30,207,28],[143,31,207,29],[143,34,207,32],[144,10,208,8,"error"],[144,15,208,13],[144,17,208,15],[144,21,208,19],[145,10,209,8,"stack"],[145,15,209,13],[145,17,209,15],[145,21,209,19],[146,10,210,8,"status"],[146,16,210,14],[146,18,210,16],[147,8,211,6],[147,9,211,7],[148,6,212,4],[149,6,214,4],[149,12,214,10,"status"],[149,18,214,16],[149,21,214,19],[149,25,214,23],[149,26,214,24,"symbolicated"],[149,38,214,36],[149,39,214,37,"type"],[149,43,214,41],[149,44,214,42],[149,45,214,43,"status"],[149,51,214,49],[150,6,215,4],[150,10,215,8,"lastStatus"],[150,20,215,18],[150,25,215,23,"status"],[150,31,215,29],[150,33,215,31],[151,8,216,6],[151,12,216,10],[151,13,216,11],[151,23,216,21],[151,25,216,23],[151,33,216,31],[151,34,216,32],[151,35,216,33,"includes"],[151,43,216,41],[151,44,216,42,"status"],[151,50,216,48],[151,51,216,49],[151,53,216,51],[152,10,217,8],[152,14,217,12],[152,15,217,13,"flushCallbacks"],[152,29,217,27],[152,30,217,28,"type"],[152,34,217,32],[152,35,217,33],[153,8,218,6],[154,6,219,4],[155,4,220,2],[156,2,221,0],[158,2,223,0],[159,2,224,0],[160,2,224,0,"exports"],[160,9,224,0],[160,10,224,0,"LogBoxLog"],[160,19,224,0],[160,22,224,0,"LogBoxLog"],[160,31,224,0],[161,2,225,0],[161,11,225,9,"ensureStackFilesHaveParams"],[161,37,225,35,"ensureStackFilesHaveParams"],[161,38,225,36,"stack"],[161,43,225,48],[161,45,225,57],[162,4,226,2],[162,10,226,8,"currentSrc"],[162,20,226,18],[162,23,227,4],[162,30,227,11,"document"],[162,38,227,19],[162,43,227,24],[162,54,227,35],[162,58,227,39,"document"],[162,66,227,47],[162,67,227,48,"currentScript"],[162,80,227,61],[162,83,228,9],[162,88,228,14],[162,92,228,18,"document"],[162,100,228,26],[162,101,228,27,"currentScript"],[162,114,228,40],[162,118,228,44,"document"],[162,126,228,52],[162,127,228,53,"currentScript"],[162,140,228,66],[162,141,228,67,"src"],[162,144,228,70],[162,148,228,75],[162,152,228,79],[162,155,229,8],[162,159,229,12],[163,4,231,2],[163,10,231,8,"currentParams"],[163,23,231,21],[163,26,231,24,"currentSrc"],[163,36,231,34],[163,39,232,6],[163,43,232,10,"URLSearchParams"],[163,58,232,25],[163,59,232,26,"currentSrc"],[163,69,232,36],[163,70,232,37],[163,73,233,6],[163,77,233,10,"URLSearchParams"],[163,92,233,25],[163,93,233,26],[164,6,234,8,"platform"],[164,14,234,16],[164,16,234,18],[164,21,234,23],[165,6,235,8,"dev"],[165,9,235,11],[165,11,235,13,"String"],[165,17,235,19],[165,18,235,20,"__DEV__"],[165,25,235,27],[166,4,236,6],[166,5,236,7],[166,6,236,8],[167,4,238,2],[167,11,238,9,"stack"],[167,16,238,14],[167,17,238,15,"map"],[167,20,238,18],[167,21,238,20,"frame"],[167,26,238,25],[167,30,238,30],[168,6,239,4],[168,10,240,6],[168,11,240,7,"frame"],[168,16,240,12],[168,17,240,13,"file"],[168,21,240,17],[168,23,240,19,"startsWith"],[168,33,240,29],[168,34,240,30],[168,40,240,36],[168,41,240,37],[169,6,241,6],[170,6,242,6,"frame"],[170,11,242,11],[170,12,242,12,"file"],[170,16,242,16],[170,17,242,17,"includes"],[170,25,242,25],[170,26,242,26],[170,38,242,38],[170,39,242,39],[170,41,244,6],[170,48,244,13,"frame"],[170,53,244,18],[171,6,246,4],[171,12,246,10,"url"],[171,15,246,13],[171,18,246,16],[171,22,246,20,"URL"],[171,25,246,23],[171,26,246,24,"frame"],[171,31,246,29],[171,32,246,30,"file"],[171,36,246,34],[171,37,246,35],[172,6,247,4],[172,10,247,8,"url"],[172,13,247,11],[172,14,247,12,"searchParams"],[172,26,247,24],[172,27,247,25,"has"],[172,30,247,28],[172,31,247,29],[172,41,247,39],[172,42,247,40],[172,44,247,42],[173,8,248,6],[173,15,248,13,"frame"],[173,20,248,18],[174,6,249,4],[175,6,251,4,"currentParams"],[175,19,251,17],[175,20,251,18,"forEach"],[175,27,251,25],[175,28,251,26],[175,29,251,27,"value"],[175,34,251,32],[175,36,251,34,"key"],[175,39,251,37],[175,44,251,42],[176,8,252,6],[176,12,252,10,"url"],[176,15,252,13],[176,16,252,14,"searchParams"],[176,28,252,26],[176,29,252,27,"has"],[176,32,252,30],[176,33,252,31,"key"],[176,36,252,34],[176,37,252,35],[176,39,252,37],[177,8,253,6,"url"],[177,11,253,9],[177,12,253,10,"searchParams"],[177,24,253,22],[177,25,253,23,"set"],[177,28,253,26],[177,29,253,27,"key"],[177,32,253,30],[177,34,253,32,"value"],[177,39,253,37],[177,40,253,38],[178,6,254,4],[178,7,254,5],[178,8,254,6],[179,6,256,4],[179,13,256,11],[180,8,256,13],[180,11,256,16,"frame"],[180,16,256,21],[181,8,256,23,"file"],[181,12,256,27],[181,14,256,29,"url"],[181,17,256,32],[181,18,256,33,"toString"],[181,26,256,41],[181,27,256,42],[182,6,256,44],[182,7,256,45],[183,4,257,2],[183,5,257,3],[183,6,257,4],[184,2,258,0],[185,0,258,1],[185,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"}},"type":"js/module"}]}