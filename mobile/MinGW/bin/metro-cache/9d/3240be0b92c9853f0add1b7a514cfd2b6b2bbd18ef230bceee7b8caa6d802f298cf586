{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":17,"index":159},"end":{"line":4,"column":52,"index":194}}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}},{"name":"expo-modules-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":28,"index":224},"end":{"line":5,"column":56,"index":252}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":35,"index":289},"end":{"line":6,"column":72,"index":326}}],"key":"LF4arccvrvx2h7gjlFGN9GGMwEE="}},{"name":"./link/linking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}}],"key":"qAkeFDg1XiLn62LRw0bLpv/nYbc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getLinkingConfig = exports.getNavigationConfig = void 0;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const expo_modules_core_1 = require(_dependencyMap[1], \"expo-modules-core\");\n  const getReactNavigationConfig_1 = require(_dependencyMap[2], \"./getReactNavigationConfig\");\n  const linking_1 = require(_dependencyMap[3], \"./link/linking\");\n  function getNavigationConfig(routes, metaOnly = true) {\n    return (0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly);\n  }\n  exports.getNavigationConfig = getNavigationConfig;\n  function getLinkingConfig(store, routes, context, {\n    metaOnly = true,\n    serverUrl\n  } = {}) {\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    let hasCachedInitialUrl = false;\n    let initialUrl;\n    const nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    const nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    const config = getNavigationConfig(routes, metaOnly);\n    const boundGetStateFromPath = linking_1.getStateFromPath.bind(store);\n    return {\n      prefixes: [],\n      config,\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              if (typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.addEventListener)(nativeLinking),\n      getStateFromPath: boundGetStateFromPath,\n      getPathFromState(state, options) {\n        return (0, linking_1.getPathFromState)(state, Object.assign({}, config, options, {\n          screens: config.screens ?? options?.screens ?? {}\n        })) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n  exports.getLinkingConfig = getLinkingConfig;\n});","lineCount":79,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getLinkingConfig"],[7,26,3,24],[7,29,3,27,"exports"],[7,36,3,34],[7,37,3,35,"getNavigationConfig"],[7,56,3,54],[7,59,3,57],[7,64,3,62],[7,65,3,63],[8,2,4,0],[8,8,4,6,"native_1"],[8,16,4,14],[8,19,4,17,"require"],[8,26,4,24],[8,27,4,24,"_dependencyMap"],[8,41,4,24],[8,72,4,51],[8,73,4,52],[9,2,5,0],[9,8,5,6,"expo_modules_core_1"],[9,27,5,25],[9,30,5,28,"require"],[9,37,5,35],[9,38,5,35,"_dependencyMap"],[9,52,5,35],[9,76,5,55],[9,77,5,56],[10,2,6,0],[10,8,6,6,"getReactNavigationConfig_1"],[10,34,6,32],[10,37,6,35,"require"],[10,44,6,42],[10,45,6,42,"_dependencyMap"],[10,59,6,42],[10,92,6,71],[10,93,6,72],[11,2,7,0],[11,8,7,6,"linking_1"],[11,17,7,15],[11,20,7,18,"require"],[11,27,7,25],[11,28,7,25,"_dependencyMap"],[11,42,7,25],[11,63,7,42],[11,64,7,43],[12,2,8,0],[12,11,8,9,"getNavigationConfig"],[12,30,8,28,"getNavigationConfig"],[12,31,8,29,"routes"],[12,37,8,35],[12,39,8,37,"metaOnly"],[12,47,8,45],[12,50,8,48],[12,54,8,52],[12,56,8,54],[13,4,9,4],[13,11,9,11],[13,12,9,12],[13,13,9,13],[13,15,9,15,"getReactNavigationConfig_1"],[13,41,9,41],[13,42,9,42,"getReactNavigationConfig"],[13,66,9,66],[13,68,9,68,"routes"],[13,74,9,74],[13,76,9,76,"metaOnly"],[13,84,9,84],[13,85,9,85],[14,2,10,0],[15,2,11,0,"exports"],[15,9,11,7],[15,10,11,8,"getNavigationConfig"],[15,29,11,27],[15,32,11,30,"getNavigationConfig"],[15,51,11,49],[16,2,12,0],[16,11,12,9,"getLinkingConfig"],[16,27,12,25,"getLinkingConfig"],[16,28,12,26,"store"],[16,33,12,31],[16,35,12,33,"routes"],[16,41,12,39],[16,43,12,41,"context"],[16,50,12,48],[16,52,12,50],[17,4,12,52,"metaOnly"],[17,12,12,60],[17,15,12,63],[17,19,12,67],[18,4,12,69,"serverUrl"],[19,2,12,79],[19,3,12,80],[19,6,12,83],[19,7,12,84],[19,8,12,85],[19,10,12,87],[20,4,13,4],[21,4,14,4],[21,8,14,8,"hasCachedInitialUrl"],[21,27,14,27],[21,30,14,30],[21,35,14,35],[22,4,15,4],[22,8,15,8,"initialUrl"],[22,18,15,18],[23,4,16,4],[23,10,16,10,"nativeLinkingKey"],[23,26,16,26],[23,29,16,29,"context"],[23,36,16,36],[23,37,17,9,"keys"],[23,41,17,13],[23,42,17,14],[23,43,17,15],[23,44,18,9,"find"],[23,48,18,13],[23,49,18,15,"key"],[23,52,18,18],[23,56,18,23,"key"],[23,59,18,26],[23,60,18,27,"match"],[23,65,18,32],[23,66,18,33],[23,98,18,65],[23,99,18,66],[23,100,18,67],[24,4,19,4],[24,10,19,10,"nativeLinking"],[24,23,19,23],[24,26,19,26,"nativeLinkingKey"],[24,42,19,42],[24,45,20,10,"context"],[24,52,20,17],[24,53,20,18,"nativeLinkingKey"],[24,69,20,34],[24,70,20,35],[24,73,21,10,"undefined"],[24,82,21,19],[25,4,22,4],[25,10,22,10,"config"],[25,16,22,16],[25,19,22,19,"getNavigationConfig"],[25,38,22,38],[25,39,22,39,"routes"],[25,45,22,45],[25,47,22,47,"metaOnly"],[25,55,22,55],[25,56,22,56],[26,4,23,4],[26,10,23,10,"boundGetStateFromPath"],[26,31,23,31],[26,34,23,34,"linking_1"],[26,43,23,43],[26,44,23,44,"getStateFromPath"],[26,60,23,60],[26,61,23,61,"bind"],[26,65,23,65],[26,66,23,66,"store"],[26,71,23,71],[26,72,23,72],[27,4,24,4],[27,11,24,11],[28,6,25,8,"prefixes"],[28,14,25,16],[28,16,25,18],[28,18,25,20],[29,6,26,8,"config"],[29,12,26,14],[30,6,27,8],[31,6,28,8],[32,6,29,8],[33,6,30,8],[34,6,31,8],[35,6,32,8,"getInitialURL"],[35,19,32,21,"getInitialURL"],[35,20,32,21],[35,22,32,24],[36,8,33,12],[37,8,34,12],[38,8,35,12],[38,12,35,16],[38,13,35,17,"hasCachedInitialUrl"],[38,32,35,36],[38,34,35,38],[39,10,36,16],[39,14,36,20,"expo_modules_core_1"],[39,33,36,39],[39,34,36,40,"Platform"],[39,42,36,48],[39,43,36,49,"OS"],[39,45,36,51],[39,50,36,56],[39,55,36,61],[39,57,36,63],[40,12,37,20,"initialUrl"],[40,22,37,30],[40,25,37,33,"serverUrl"],[40,34,37,42],[40,38,37,46],[40,39,37,47],[40,40,37,48],[40,42,37,50,"linking_1"],[40,51,37,59],[40,52,37,60,"getInitialURL"],[40,65,37,73],[40,67,37,75],[40,68,37,76],[41,10,38,16],[41,11,38,17],[41,17,39,21],[42,12,40,20,"initialUrl"],[42,22,40,30],[42,25,40,33,"serverUrl"],[42,34,40,42],[42,38,40,46],[42,39,40,47],[42,40,40,48],[42,42,40,50,"linking_1"],[42,51,40,59],[42,52,40,60,"getInitialURL"],[42,65,40,73],[42,67,40,75],[42,68,40,76],[43,12,41,20],[43,16,41,24],[43,23,41,31,"initialUrl"],[43,33,41,41],[43,38,41,46],[43,46,41,54],[43,48,41,56],[44,14,42,24],[44,18,42,28],[44,25,42,35,"nativeLinking"],[44,38,42,48],[44,40,42,50,"redirectSystemPath"],[44,58,42,68],[44,63,42,73],[44,73,42,83],[44,75,42,85],[45,16,43,28,"initialUrl"],[45,26,43,38],[45,29,43,41,"nativeLinking"],[45,42,43,54],[45,43,43,55,"redirectSystemPath"],[45,61,43,73],[45,62,43,74],[46,18,43,76,"path"],[46,22,43,80],[46,24,43,82,"initialUrl"],[46,34,43,92],[47,18,43,94,"initial"],[47,25,43,101],[47,27,43,103],[48,16,43,108],[48,17,43,109],[48,18,43,110],[49,14,44,24],[50,12,45,20],[50,13,45,21],[50,19,46,25],[50,23,46,29,"initialUrl"],[50,33,46,39],[50,35,46,41],[51,14,47,24,"initialUrl"],[51,24,47,34],[51,27,47,37,"initialUrl"],[51,37,47,47],[51,38,47,48,"then"],[51,42,47,52],[51,43,47,54,"url"],[51,46,47,57],[51,50,47,62],[52,16,48,28],[52,20,48,32,"url"],[52,23,48,35],[52,27,48,39],[52,34,48,46,"nativeLinking"],[52,47,48,59],[52,49,48,61,"redirectSystemPath"],[52,67,48,79],[52,72,48,84],[52,82,48,94],[52,84,48,96],[53,18,49,32],[53,25,49,39,"nativeLinking"],[53,38,49,52],[53,39,49,53,"redirectSystemPath"],[53,57,49,71],[53,58,49,72],[54,20,49,74,"path"],[54,24,49,78],[54,26,49,80,"url"],[54,29,49,83],[55,20,49,85,"initial"],[55,27,49,92],[55,29,49,94],[56,18,49,99],[56,19,49,100],[56,20,49,101],[57,16,50,28],[58,16,51,28],[58,23,51,35,"url"],[58,26,51,38],[59,14,52,24],[59,15,52,25],[59,16,52,26],[60,12,53,20],[61,10,54,16],[62,10,55,16,"hasCachedInitialUrl"],[62,29,55,35],[62,32,55,38],[62,36,55,42],[63,8,56,12],[64,8,57,12],[64,15,57,19,"initialUrl"],[64,25,57,29],[65,6,58,8],[65,7,58,9],[66,6,59,8,"subscribe"],[66,15,59,17],[66,17,59,19],[66,18,59,20],[66,19,59,21],[66,21,59,23,"linking_1"],[66,30,59,32],[66,31,59,33,"addEventListener"],[66,47,59,49],[66,49,59,51,"nativeLinking"],[66,62,59,64],[66,63,59,65],[67,6,60,8,"getStateFromPath"],[67,22,60,24],[67,24,60,26,"boundGetStateFromPath"],[67,45,60,47],[68,6,61,8,"getPathFromState"],[68,22,61,24,"getPathFromState"],[68,23,61,25,"state"],[68,28,61,30],[68,30,61,32,"options"],[68,37,61,39],[68,39,61,41],[69,8,62,12],[69,15,62,20],[69,16,62,21],[69,17,62,22],[69,19,62,24,"linking_1"],[69,28,62,33],[69,29,62,34,"getPathFromState"],[69,45,62,50],[69,47,62,52,"state"],[69,52,62,57],[69,54,62,57,"Object"],[69,60,62,57],[69,61,62,57,"assign"],[69,67,62,57],[69,72,63,19,"config"],[69,78,63,25],[69,80,64,19,"options"],[69,87,64,26],[70,10,65,16,"screens"],[70,17,65,23],[70,19,65,25,"config"],[70,25,65,31],[70,26,65,32,"screens"],[70,33,65,39],[70,37,65,43,"options"],[70,44,65,50],[70,46,65,52,"screens"],[70,53,65,59],[70,57,65,63],[70,58,65,64],[71,8,65,65],[71,10,66,13],[71,11,66,14],[71,15,66,18],[71,18,66,21],[72,6,67,8],[72,7,67,9],[73,6,68,8],[74,6,69,8],[75,6,70,8,"getActionFromState"],[75,24,70,26],[75,26,70,28,"native_1"],[75,34,70,36],[75,35,70,37,"getActionFromState"],[76,4,71,4],[76,5,71,5],[77,2,72,0],[78,2,73,0,"exports"],[78,9,73,7],[78,10,73,8,"getLinkingConfig"],[78,26,73,24],[78,29,73,27,"getLinkingConfig"],[78,45,73,43],[79,0,73,44],[79,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getPathFromState"],"mappings":"AAA;ACO;CDE;AEE;cCM,oDD;QEc;qDCe;yBDK;SFM;QIG;SJM;CFK"}},"type":"js/module"}]}