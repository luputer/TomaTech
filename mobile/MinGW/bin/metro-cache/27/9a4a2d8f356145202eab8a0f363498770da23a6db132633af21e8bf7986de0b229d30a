{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":52,"column":0,"index":2205}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":52,"column":0,"index":2205}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"expo-modules-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"./ExpoHaptics","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":58},"end":{"line":3,"column":40,"index":98}}],"key":"XcwESbKUXugtEcRLVerUdWZ8cO0="}},{"name":"./Haptics.types","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":99},"end":{"line":4,"column":80,"index":179}}],"key":"W6gGpdO547EuzJ/ssb7+efMU+DU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"ImpactFeedbackStyle\", {\n    enumerable: true,\n    get: function () {\n      return _Haptics.ImpactFeedbackStyle;\n    }\n  });\n  Object.defineProperty(exports, \"NotificationFeedbackType\", {\n    enumerable: true,\n    get: function () {\n      return _Haptics.NotificationFeedbackType;\n    }\n  });\n  exports.impactAsync = impactAsync;\n  exports.notificationAsync = notificationAsync;\n  exports.selectionAsync = selectionAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = require(_dependencyMap[2], \"expo-modules-core\");\n  var _ExpoHaptics = _interopRequireDefault(require(_dependencyMap[3], \"./ExpoHaptics\"));\n  var _Haptics = require(_dependencyMap[4], \"./Haptics.types\");\n  // @needsAudit\n  /**\n   * The kind of notification response used in the feedback.\n   * @param type A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\n   * while on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\n   * You can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  function notificationAsync() {\n    return _notificationAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * @param style A collision indicator that on iOS is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\n   * while on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\n   * You can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  function _notificationAsync() {\n    _notificationAsync = (0, _asyncToGenerator2.default)(function* () {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Haptics.NotificationFeedbackType.Success;\n      if (!_ExpoHaptics.default?.notificationAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptics', 'notificationAsync');\n      }\n      yield _ExpoHaptics.default.notificationAsync(type);\n    });\n    return _notificationAsync.apply(this, arguments);\n  }\n  function impactAsync() {\n    return _impactAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Used to let a user know when a selection change has been registered.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  function _impactAsync() {\n    _impactAsync = (0, _asyncToGenerator2.default)(function* () {\n      var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Haptics.ImpactFeedbackStyle.Medium;\n      if (!_ExpoHaptics.default?.impactAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptic', 'impactAsync');\n      }\n      yield _ExpoHaptics.default.impactAsync(style);\n    });\n    return _impactAsync.apply(this, arguments);\n  }\n  function selectionAsync() {\n    return _selectionAsync.apply(this, arguments);\n  }\n  function _selectionAsync() {\n    _selectionAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (!_ExpoHaptics.default?.selectionAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Haptic', 'selectionAsync');\n      }\n      yield _ExpoHaptics.default.selectionAsync();\n    });\n    return _selectionAsync.apply(this, arguments);\n  }\n});","lineCount":81,"map":[[22,2,1,0],[22,6,1,0,"_expoModulesCore"],[22,22,1,0],[22,25,1,0,"require"],[22,32,1,0],[22,33,1,0,"_dependencyMap"],[22,47,1,0],[23,2,3,0],[23,6,3,0,"_ExpoHaptics"],[23,18,3,0],[23,21,3,0,"_interopRequireDefault"],[23,43,3,0],[23,44,3,0,"require"],[23,51,3,0],[23,52,3,0,"_dependencyMap"],[23,66,3,0],[24,2,4,0],[24,6,4,0,"_Haptics"],[24,14,4,0],[24,17,4,0,"require"],[24,24,4,0],[24,25,4,0,"_dependencyMap"],[24,39,4,0],[25,2,6,0],[26,2,7,0],[27,0,8,0],[28,0,9,0],[29,0,10,0],[30,0,11,0],[31,0,12,0],[32,0,13,0],[33,2,7,0],[33,11,14,22,"notificationAsync"],[33,28,14,39,"notificationAsync"],[33,29,14,39],[34,4,14,39],[34,11,14,39,"_notificationAsync"],[34,29,14,39],[34,30,14,39,"apply"],[34,35,14,39],[34,42,14,39,"arguments"],[34,51,14,39],[35,2,14,39],[35,4,23,0],[36,2,24,0],[37,0,25,0],[38,0,26,0],[39,0,27,0],[40,0,28,0],[41,0,29,0],[42,2,24,0],[42,11,24,0,"_notificationAsync"],[42,30,24,0],[43,4,24,0,"_notificationAsync"],[43,22,24,0],[43,29,24,0,"_asyncToGenerator2"],[43,47,24,0],[43,48,24,0,"default"],[43,55,24,0],[43,57,14,7],[43,70,16,17],[44,6,16,17],[44,10,15,2,"type"],[44,14,15,32],[44,17,15,32,"arguments"],[44,26,15,32],[44,27,15,32,"length"],[44,33,15,32],[44,41,15,32,"arguments"],[44,50,15,32],[44,58,15,32,"undefined"],[44,67,15,32],[44,70,15,32,"arguments"],[44,79,15,32],[44,85,15,35,"NotificationFeedbackType"],[44,118,15,59],[44,119,15,60,"Success"],[44,126,15,67],[45,6,17,2],[45,10,17,6],[45,11,17,7,"ExpoHaptics"],[45,31,17,18],[45,33,17,20,"notificationAsync"],[45,50,17,37],[45,52,17,39],[46,8,18,4],[46,14,18,10],[46,18,18,14,"UnavailabilityError"],[46,54,18,33],[46,55,18,34],[46,64,18,43],[46,66,18,45],[46,85,18,64],[46,86,18,65],[47,6,19,2],[48,6,20,2],[48,12,20,8,"ExpoHaptics"],[48,32,20,19],[48,33,20,20,"notificationAsync"],[48,50,20,37],[48,51,20,38,"type"],[48,55,20,42],[48,56,20,43],[49,4,21,0],[49,5,21,1],[50,4,21,1],[50,11,21,1,"_notificationAsync"],[50,29,21,1],[50,30,21,1,"apply"],[50,35,21,1],[50,42,21,1,"arguments"],[50,51,21,1],[51,2,21,1],[52,2,21,1],[52,11,30,22,"impactAsync"],[52,22,30,33,"impactAsync"],[52,23,30,33],[53,4,30,33],[53,11,30,33,"_impactAsync"],[53,23,30,33],[53,24,30,33,"apply"],[53,29,30,33],[53,36,30,33,"arguments"],[53,45,30,33],[54,2,30,33],[54,4,39,0],[55,2,40,0],[56,0,41,0],[57,0,42,0],[58,0,43,0],[59,2,40,0],[59,11,40,0,"_impactAsync"],[59,24,40,0],[60,4,40,0,"_impactAsync"],[60,16,40,0],[60,23,40,0,"_asyncToGenerator2"],[60,41,40,0],[60,42,40,0,"default"],[60,49,40,0],[60,51,30,7],[60,64,32,17],[61,6,32,17],[61,10,31,2,"style"],[61,15,31,28],[61,18,31,28,"arguments"],[61,27,31,28],[61,28,31,28,"length"],[61,34,31,28],[61,42,31,28,"arguments"],[61,51,31,28],[61,59,31,28,"undefined"],[61,68,31,28],[61,71,31,28,"arguments"],[61,80,31,28],[61,86,31,31,"ImpactFeedbackStyle"],[61,114,31,50],[61,115,31,51,"Medium"],[61,121,31,57],[62,6,33,2],[62,10,33,6],[62,11,33,7,"ExpoHaptics"],[62,31,33,18],[62,33,33,20,"impactAsync"],[62,44,33,31],[62,46,33,33],[63,8,34,4],[63,14,34,10],[63,18,34,14,"UnavailabilityError"],[63,54,34,33],[63,55,34,34],[63,63,34,42],[63,65,34,44],[63,78,34,57],[63,79,34,58],[64,6,35,2],[65,6,36,2],[65,12,36,8,"ExpoHaptics"],[65,32,36,19],[65,33,36,20,"impactAsync"],[65,44,36,31],[65,45,36,32,"style"],[65,50,36,37],[65,51,36,38],[66,4,37,0],[66,5,37,1],[67,4,37,1],[67,11,37,1,"_impactAsync"],[67,23,37,1],[67,24,37,1,"apply"],[67,29,37,1],[67,36,37,1,"arguments"],[67,45,37,1],[68,2,37,1],[69,2,37,1],[69,11,44,22,"selectionAsync"],[69,25,44,36,"selectionAsync"],[69,26,44,36],[70,4,44,36],[70,11,44,36,"_selectionAsync"],[70,26,44,36],[70,27,44,36,"apply"],[70,32,44,36],[70,39,44,36,"arguments"],[70,48,44,36],[71,2,44,36],[72,2,44,36],[72,11,44,36,"_selectionAsync"],[72,27,44,36],[73,4,44,36,"_selectionAsync"],[73,19,44,36],[73,26,44,36,"_asyncToGenerator2"],[73,44,44,36],[73,45,44,36,"default"],[73,52,44,36],[73,54,44,7],[73,67,44,54],[74,6,45,2],[74,10,45,6],[74,11,45,7,"ExpoHaptics"],[74,31,45,18],[74,33,45,20,"selectionAsync"],[74,47,45,34],[74,49,45,36],[75,8,46,4],[75,14,46,10],[75,18,46,14,"UnavailabilityError"],[75,54,46,33],[75,55,46,34],[75,63,46,42],[75,65,46,44],[75,81,46,60],[75,82,46,61],[76,6,47,2],[77,6,48,2],[77,12,48,8,"ExpoHaptics"],[77,32,48,19],[77,33,48,20,"selectionAsync"],[77,47,48,34],[77,48,48,35],[77,49,48,36],[78,4,49,0],[78,5,49,1],[79,4,49,1],[79,11,49,1,"_selectionAsync"],[79,26,49,1],[79,27,49,1,"apply"],[79,32,49,1],[79,39,49,1,"arguments"],[79,48,49,1],[80,2,49,1],[81,0,49,1],[81,3]],"functionMap":{"names":["<global>","notificationAsync","impactAsync","selectionAsync"],"mappings":"AAA;OCa;CDO;OES;CFO;OGO;CHK"}},"type":"js/module"}]}