{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":83,"column":32,"index":2937}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveHrefStringWithSegments = exports.resolveHref = void 0;\n  /** Resolve an href object into a fully qualified, relative href. */\n  var resolveHref = href => {\n    if (typeof href === 'string') {\n      return (0, exports.resolveHref)({\n        pathname: href\n      });\n    }\n    var path = href.pathname ?? '';\n    if (!href?.params) {\n      return path;\n    }\n    var _createQualifiedPathn = createQualifiedPathname(path, {\n        ...href.params\n      }),\n      pathname = _createQualifiedPathn.pathname,\n      params = _createQualifiedPathn.params;\n    var paramsString = createQueryParams(params);\n    return pathname + (paramsString ? `?${paramsString}` : '');\n  };\n  exports.resolveHref = resolveHref;\n  function resolveHrefStringWithSegments(href) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$segments = _ref.segments,\n      segments = _ref$segments === void 0 ? [] : _ref$segments,\n      _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params;\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      relativeToDirectory = _ref2.relativeToDirectory;\n    if (href.startsWith('.')) {\n      // Resolve base path by merging the current segments with the params\n      var base = segments?.map(segment => {\n        if (!segment.startsWith('[')) return segment;\n        if (segment.startsWith('[...')) {\n          segment = segment.slice(4, -1);\n          var param = params[segment];\n          if (Array.isArray(param)) {\n            return param.join('/');\n          } else {\n            return param?.split(',')?.join('/') ?? '';\n          }\n        } else {\n          segment = segment.slice(1, -1);\n          return params[segment];\n        }\n      }).filter(Boolean).join('/') ?? '/';\n      if (relativeToDirectory) {\n        base = `${base}/`;\n      }\n      var url = new URL(href, `http://hostname/${base}`);\n      href = `${url.pathname}${url.search}`;\n    }\n    return href;\n  }\n  exports.resolveHrefStringWithSegments = resolveHrefStringWithSegments;\n  function createQualifiedPathname(pathname, params) {\n    for (var _ref3 of Object.entries(params)) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var key = _ref4[0];\n      var _ref4$ = _ref4[1];\n      var value = _ref4$ === void 0 ? '' : _ref4$;\n      var dynamicKey = `[${key}]`;\n      var deepDynamicKey = `[...${key}]`;\n      if (pathname.includes(dynamicKey)) {\n        pathname = pathname.replace(dynamicKey, encodeParam(value));\n      } else if (pathname.includes(deepDynamicKey)) {\n        pathname = pathname.replace(deepDynamicKey, encodeParam(value));\n      } else {\n        continue;\n      }\n      delete params[key];\n    }\n    return {\n      pathname,\n      params\n    };\n  }\n  function encodeParam(param) {\n    if (Array.isArray(param)) {\n      return param.map(p => encodeParam(p)).join('/');\n    }\n    return encodeURIComponent(param.toString());\n  }\n  function createQueryParams(params) {\n    return Object.entries(params)\n    // Allow nullish params\n    .filter(_ref5 => {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        value = _ref6[1];\n      return value != null;\n    }).map(_ref7 => {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n      return `${key}=${encodeURIComponent(value.toString())}`;\n    }).join('&');\n  }\n});","lineCount":105,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"resolveHrefStringWithSegments"],[8,39,3,37],[8,42,3,40,"exports"],[8,49,3,47],[8,50,3,48,"resolveHref"],[8,61,3,59],[8,64,3,62],[8,69,3,67],[8,70,3,68],[9,2,4,0],[10,2,5,0],[10,6,5,6,"resolveHref"],[10,17,5,17],[10,20,5,21,"href"],[10,24,5,25],[10,28,5,30],[11,4,6,4],[11,8,6,8],[11,15,6,15,"href"],[11,19,6,19],[11,24,6,24],[11,32,6,32],[11,34,6,34],[12,6,7,8],[12,13,7,15],[12,14,7,16],[12,15,7,17],[12,17,7,19,"exports"],[12,24,7,26],[12,25,7,27,"resolveHref"],[12,36,7,38],[12,38,7,40],[13,8,7,42,"pathname"],[13,16,7,50],[13,18,7,52,"href"],[14,6,7,57],[14,7,7,58],[14,8,7,59],[15,4,8,4],[16,4,9,4],[16,8,9,10,"path"],[16,12,9,14],[16,15,9,17,"href"],[16,19,9,21],[16,20,9,22,"pathname"],[16,28,9,30],[16,32,9,34],[16,34,9,36],[17,4,10,4],[17,8,10,8],[17,9,10,9,"href"],[17,13,10,13],[17,15,10,15,"params"],[17,21,10,21],[17,23,10,23],[18,6,11,8],[18,13,11,15,"path"],[18,17,11,19],[19,4,12,4],[20,4,13,4],[20,8,13,4,"_createQualifiedPathn"],[20,29,13,4],[20,32,13,33,"createQualifiedPathname"],[20,55,13,56],[20,56,13,57,"path"],[20,60,13,61],[20,62,13,63],[21,8,14,8],[21,11,14,11,"href"],[21,15,14,15],[21,16,14,16,"params"],[22,6,15,4],[22,7,15,5],[22,8,15,6],[23,6,13,12,"pathname"],[23,14,13,20],[23,17,13,20,"_createQualifiedPathn"],[23,38,13,20],[23,39,13,12,"pathname"],[23,47,13,20],[24,6,13,22,"params"],[24,12,13,28],[24,15,13,28,"_createQualifiedPathn"],[24,36,13,28],[24,37,13,22,"params"],[24,43,13,28],[25,4,16,4],[25,8,16,10,"paramsString"],[25,20,16,22],[25,23,16,25,"createQueryParams"],[25,40,16,42],[25,41,16,43,"params"],[25,47,16,49],[25,48,16,50],[26,4,17,4],[26,11,17,11,"pathname"],[26,19,17,19],[26,23,17,23,"paramsString"],[26,35,17,35],[26,38,17,38],[26,42,17,42,"paramsString"],[26,54,17,54],[26,56,17,56],[26,59,17,59],[26,61,17,61],[26,62,17,62],[27,2,18,0],[27,3,18,1],[28,2,19,0,"exports"],[28,9,19,7],[28,10,19,8,"resolveHref"],[28,21,19,19],[28,24,19,22,"resolveHref"],[28,35,19,33],[29,2,20,0],[29,11,20,9,"resolveHrefStringWithSegments"],[29,40,20,38,"resolveHrefStringWithSegments"],[29,41,20,39,"href"],[29,45,20,43],[29,47,20,112],[30,4,20,112],[30,8,20,112,"_ref"],[30,12,20,112],[30,15,20,112,"arguments"],[30,24,20,112],[30,25,20,112,"length"],[30,31,20,112],[30,39,20,112,"arguments"],[30,48,20,112],[30,56,20,112,"undefined"],[30,65,20,112],[30,68,20,112,"arguments"],[30,77,20,112],[30,83,20,78],[30,84,20,79],[30,85,20,80],[31,6,20,80,"_ref$segments"],[31,19,20,80],[31,22,20,80,"_ref"],[31,26,20,80],[31,27,20,47,"segments"],[31,35,20,55],[32,6,20,47,"segments"],[32,14,20,55],[32,17,20,55,"_ref$segments"],[32,30,20,55],[32,44,20,58],[32,46,20,60],[32,49,20,60,"_ref$segments"],[32,62,20,60],[33,6,20,60,"_ref$params"],[33,17,20,60],[33,20,20,60,"_ref"],[33,24,20,60],[33,25,20,62,"params"],[33,31,20,68],[34,6,20,62,"params"],[34,12,20,68],[34,15,20,68,"_ref$params"],[34,26,20,68],[34,40,20,71],[34,41,20,72],[34,42,20,73],[34,45,20,73,"_ref$params"],[34,56,20,73],[35,4,20,73],[35,8,20,73,"_ref2"],[35,13,20,73],[35,16,20,73,"arguments"],[35,25,20,73],[35,26,20,73,"length"],[35,32,20,73],[35,40,20,73,"arguments"],[35,49,20,73],[35,57,20,73,"undefined"],[35,66,20,73],[35,69,20,73,"arguments"],[35,78,20,73],[35,84,20,108],[35,85,20,109],[35,86,20,110],[36,6,20,84,"relativeToDirectory"],[36,25,20,103],[36,28,20,103,"_ref2"],[36,33,20,103],[36,34,20,84,"relativeToDirectory"],[36,53,20,103],[37,4,21,4],[37,8,21,8,"href"],[37,12,21,12],[37,13,21,13,"startsWith"],[37,23,21,23],[37,24,21,24],[37,27,21,27],[37,28,21,28],[37,30,21,30],[38,6,22,8],[39,6,23,8],[39,10,23,12,"base"],[39,14,23,16],[39,17,23,19,"segments"],[39,25,23,27],[39,27,24,14,"map"],[39,30,24,17],[39,31,24,19,"segment"],[39,38,24,26],[39,42,24,31],[40,8,25,12],[40,12,25,16],[40,13,25,17,"segment"],[40,20,25,24],[40,21,25,25,"startsWith"],[40,31,25,35],[40,32,25,36],[40,35,25,39],[40,36,25,40],[40,38,26,16],[40,45,26,23,"segment"],[40,52,26,30],[41,8,27,12],[41,12,27,16,"segment"],[41,19,27,23],[41,20,27,24,"startsWith"],[41,30,27,34],[41,31,27,35],[41,37,27,41],[41,38,27,42],[41,40,27,44],[42,10,28,16,"segment"],[42,17,28,23],[42,20,28,26,"segment"],[42,27,28,33],[42,28,28,34,"slice"],[42,33,28,39],[42,34,28,40],[42,35,28,41],[42,37,28,43],[42,38,28,44],[42,39,28,45],[42,40,28,46],[43,10,29,16],[43,14,29,22,"param"],[43,19,29,27],[43,22,29,30,"params"],[43,28,29,36],[43,29,29,37,"segment"],[43,36,29,44],[43,37,29,45],[44,10,30,16],[44,14,30,20,"Array"],[44,19,30,25],[44,20,30,26,"isArray"],[44,27,30,33],[44,28,30,34,"param"],[44,33,30,39],[44,34,30,40],[44,36,30,42],[45,12,31,20],[45,19,31,27,"param"],[45,24,31,32],[45,25,31,33,"join"],[45,29,31,37],[45,30,31,38],[45,33,31,41],[45,34,31,42],[46,10,32,16],[46,11,32,17],[46,17,33,21],[47,12,34,20],[47,19,34,27,"param"],[47,24,34,32],[47,26,34,34,"split"],[47,31,34,39],[47,32,34,40],[47,35,34,43],[47,36,34,44],[47,38,34,46,"join"],[47,42,34,50],[47,43,34,51],[47,46,34,54],[47,47,34,55],[47,51,34,59],[47,53,34,61],[48,10,35,16],[49,8,36,12],[49,9,36,13],[49,15,37,17],[50,10,38,16,"segment"],[50,17,38,23],[50,20,38,26,"segment"],[50,27,38,33],[50,28,38,34,"slice"],[50,33,38,39],[50,34,38,40],[50,35,38,41],[50,37,38,43],[50,38,38,44],[50,39,38,45],[50,40,38,46],[51,10,39,16],[51,17,39,23,"params"],[51,23,39,29],[51,24,39,30,"segment"],[51,31,39,37],[51,32,39,38],[52,8,40,12],[53,6,41,8],[53,7,41,9],[53,8,41,10],[53,9,42,13,"filter"],[53,15,42,19],[53,16,42,20,"Boolean"],[53,23,42,27],[53,24,42,28],[53,25,43,13,"join"],[53,29,43,17],[53,30,43,18],[53,33,43,21],[53,34,43,22],[53,38,43,26],[53,41,43,29],[54,6,44,8],[54,10,44,12,"relativeToDirectory"],[54,29,44,31],[54,31,44,33],[55,8,45,12,"base"],[55,12,45,16],[55,15,45,19],[55,18,45,22,"base"],[55,22,45,26],[55,25,45,29],[56,6,46,8],[57,6,47,8],[57,10,47,14,"url"],[57,13,47,17],[57,16,47,20],[57,20,47,24,"URL"],[57,23,47,27],[57,24,47,28,"href"],[57,28,47,32],[57,30,47,34],[57,49,47,53,"base"],[57,53,47,57],[57,55,47,59],[57,56,47,60],[58,6,48,8,"href"],[58,10,48,12],[58,13,48,15],[58,16,48,18,"url"],[58,19,48,21],[58,20,48,22,"pathname"],[58,28,48,30],[58,31,48,33,"url"],[58,34,48,36],[58,35,48,37,"search"],[58,41,48,43],[58,43,48,45],[59,4,49,4],[60,4,50,4],[60,11,50,11,"href"],[60,15,50,15],[61,2,51,0],[62,2,52,0,"exports"],[62,9,52,7],[62,10,52,8,"resolveHrefStringWithSegments"],[62,39,52,37],[62,42,52,40,"resolveHrefStringWithSegments"],[62,71,52,69],[63,2,53,0],[63,11,53,9,"createQualifiedPathname"],[63,34,53,32,"createQualifiedPathname"],[63,35,53,33,"pathname"],[63,43,53,41],[63,45,53,43,"params"],[63,51,53,49],[63,53,53,51],[64,4,54,4],[64,13,54,4,"_ref3"],[64,18,54,4],[64,22,54,36,"Object"],[64,28,54,42],[64,29,54,43,"entries"],[64,36,54,50],[64,37,54,51,"params"],[64,43,54,57],[64,44,54,58],[64,46,54,60],[65,6,54,60],[65,10,54,60,"_ref4"],[65,15,54,60],[65,18,54,60,"_slicedToArray"],[65,32,54,60],[65,33,54,60,"_ref3"],[65,38,54,60],[66,6,54,60],[66,10,54,16,"key"],[66,13,54,19],[66,16,54,19,"_ref4"],[66,21,54,19],[67,6,54,19],[67,10,54,19,"_ref4$"],[67,16,54,19],[67,19,54,19,"_ref4"],[67,24,54,19],[68,6,54,19],[68,10,54,21,"value"],[68,15,54,26],[68,18,54,26,"_ref4$"],[68,24,54,26],[68,38,54,29],[68,40,54,31],[68,43,54,31,"_ref4$"],[68,49,54,31],[69,6,55,8],[69,10,55,14,"dynamicKey"],[69,20,55,24],[69,23,55,27],[69,27,55,31,"key"],[69,30,55,34],[69,33,55,37],[70,6,56,8],[70,10,56,14,"deepDynamicKey"],[70,24,56,28],[70,27,56,31],[70,34,56,38,"key"],[70,37,56,41],[70,40,56,44],[71,6,57,8],[71,10,57,12,"pathname"],[71,18,57,20],[71,19,57,21,"includes"],[71,27,57,29],[71,28,57,30,"dynamicKey"],[71,38,57,40],[71,39,57,41],[71,41,57,43],[72,8,58,12,"pathname"],[72,16,58,20],[72,19,58,23,"pathname"],[72,27,58,31],[72,28,58,32,"replace"],[72,35,58,39],[72,36,58,40,"dynamicKey"],[72,46,58,50],[72,48,58,52,"encodeParam"],[72,59,58,63],[72,60,58,64,"value"],[72,65,58,69],[72,66,58,70],[72,67,58,71],[73,6,59,8],[73,7,59,9],[73,13,60,13],[73,17,60,17,"pathname"],[73,25,60,25],[73,26,60,26,"includes"],[73,34,60,34],[73,35,60,35,"deepDynamicKey"],[73,49,60,49],[73,50,60,50],[73,52,60,52],[74,8,61,12,"pathname"],[74,16,61,20],[74,19,61,23,"pathname"],[74,27,61,31],[74,28,61,32,"replace"],[74,35,61,39],[74,36,61,40,"deepDynamicKey"],[74,50,61,54],[74,52,61,56,"encodeParam"],[74,63,61,67],[74,64,61,68,"value"],[74,69,61,73],[74,70,61,74],[74,71,61,75],[75,6,62,8],[75,7,62,9],[75,13,63,13],[76,8,64,12],[77,6,65,8],[78,6,66,8],[78,13,66,15,"params"],[78,19,66,21],[78,20,66,22,"key"],[78,23,66,25],[78,24,66,26],[79,4,67,4],[80,4,68,4],[80,11,68,11],[81,6,68,13,"pathname"],[81,14,68,21],[82,6,68,23,"params"],[83,4,68,30],[83,5,68,31],[84,2,69,0],[85,2,70,0],[85,11,70,9,"encodeParam"],[85,22,70,20,"encodeParam"],[85,23,70,21,"param"],[85,28,70,26],[85,30,70,28],[86,4,71,4],[86,8,71,8,"Array"],[86,13,71,13],[86,14,71,14,"isArray"],[86,21,71,21],[86,22,71,22,"param"],[86,27,71,27],[86,28,71,28],[86,30,71,30],[87,6,72,8],[87,13,72,15,"param"],[87,18,72,20],[87,19,72,21,"map"],[87,22,72,24],[87,23,72,26,"p"],[87,24,72,27],[87,28,72,32,"encodeParam"],[87,39,72,43],[87,40,72,44,"p"],[87,41,72,45],[87,42,72,46],[87,43,72,47],[87,44,72,48,"join"],[87,48,72,52],[87,49,72,53],[87,52,72,56],[87,53,72,57],[88,4,73,4],[89,4,74,4],[89,11,74,11,"encodeURIComponent"],[89,29,74,29],[89,30,74,30,"param"],[89,35,74,35],[89,36,74,36,"toString"],[89,44,74,44],[89,45,74,45],[89,46,74,46],[89,47,74,47],[90,2,75,0],[91,2,76,0],[91,11,76,9,"createQueryParams"],[91,28,76,26,"createQueryParams"],[91,29,76,27,"params"],[91,35,76,33],[91,37,76,35],[92,4,77,4],[92,11,77,12,"Object"],[92,17,77,18],[92,18,77,19,"entries"],[92,25,77,26],[92,26,77,27,"params"],[92,32,77,33],[93,4,78,8],[94,4,78,8],[94,5,79,9,"filter"],[94,11,79,15],[94,12,79,16,"_ref5"],[94,17,79,16],[95,6,79,16],[95,10,79,16,"_ref6"],[95,15,79,16],[95,18,79,16,"_slicedToArray"],[95,32,79,16],[95,33,79,16,"_ref5"],[95,38,79,16],[96,8,79,20,"value"],[96,13,79,25],[96,16,79,25,"_ref6"],[96,21,79,25],[97,6,79,25],[97,13,79,31,"value"],[97,18,79,36],[97,22,79,40],[97,26,79,44],[98,4,79,44],[98,6,79,45],[98,7,80,9,"map"],[98,10,80,12],[98,11,80,13,"_ref7"],[98,16,80,13],[99,6,80,13],[99,10,80,13,"_ref8"],[99,15,80,13],[99,18,80,13,"_slicedToArray"],[99,32,80,13],[99,33,80,13,"_ref7"],[99,38,80,13],[100,8,80,15,"key"],[100,11,80,18],[100,14,80,18,"_ref8"],[100,19,80,18],[101,8,80,20,"value"],[101,13,80,25],[101,16,80,25,"_ref8"],[101,21,80,25],[102,6,80,25],[102,13,80,31],[102,16,80,34,"key"],[102,19,80,37],[102,23,80,41,"encodeURIComponent"],[102,41,80,59],[102,42,80,60,"value"],[102,47,80,65],[102,48,80,66,"toString"],[102,56,80,74],[102,57,80,75],[102,58,80,76],[102,59,80,77],[102,61,80,79],[103,4,80,79],[103,6,80,80],[103,7,81,9,"join"],[103,11,81,13],[103,12,81,14],[103,15,81,17],[103,16,81,18],[104,2,82,0],[105,0,82,1],[105,3]],"functionMap":{"names":["<global>","resolveHref","resolveHrefStringWithSegments","segments.map$argument_0","createQualifiedPathname","encodeParam","param.map$argument_0","createQueryParams","Object.entries.filter$argument_0","Object.entries.filter.map$argument_0"],"mappings":"AAA;oBCI;CDa;AEE;kBCI;SDiB;CFU;AIE;CJgB;AKC;yBCE,qBD;CLG;AOC;gBCG,4BD;aEC,kEF;CPE"}},"type":"js/module"}]}