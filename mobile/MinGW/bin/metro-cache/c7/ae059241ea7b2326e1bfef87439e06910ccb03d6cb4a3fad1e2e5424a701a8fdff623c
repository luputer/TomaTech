{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":303,"column":1}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":303,"column":1}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":303,"column":1}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./VirtualizeUtils","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":70}}],"key":"Wl6GyPbjTp2tYGf7EdH/3upwFzg="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _VirtualizeUtils = require(_dependencyMap[3], \"./VirtualizeUtils\");\n  var _invariant = _interopRequireDefault(require(_dependencyMap[4], \"invariant\"));\n  var ListMetricsAggregator = exports.default = /*#__PURE__*/function () {\n    function ListMetricsAggregator() {\n      (0, _classCallCheck2.default)(this, ListMetricsAggregator);\n      this._averageCellLength = 0;\n      this._cellMetrics = new Map();\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n      this._orientation = {\n        horizontal: false,\n        rtl: false\n      };\n    }\n    return (0, _createClass2.default)(ListMetricsAggregator, [{\n      key: \"notifyCellLayout\",\n      value: function notifyCellLayout(_ref) {\n        var cellIndex = _ref.cellIndex,\n          cellKey = _ref.cellKey,\n          orientation = _ref.orientation,\n          layout = _ref.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        var next = {\n          index: cellIndex,\n          length: this._selectLength(layout),\n          isMounted: true,\n          offset: this.flowRelativeOffset(layout)\n        };\n        var curr = this._cellMetrics.get(cellKey);\n        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n          if (curr) {\n            var dLength = next.length - curr.length;\n            this._measuredCellsLength += dLength;\n          } else {\n            this._measuredCellsLength += next.length;\n            this._measuredCellsCount += 1;\n          }\n          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;\n          this._cellMetrics.set(cellKey, next);\n          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);\n          return true;\n        } else {\n          curr.isMounted = true;\n          return false;\n        }\n      }\n    }, {\n      key: \"notifyCellUnmounted\",\n      value: function notifyCellUnmounted(cellKey) {\n        var curr = this._cellMetrics.get(cellKey);\n        if (curr) {\n          curr.isMounted = false;\n        }\n      }\n    }, {\n      key: \"notifyListContentLayout\",\n      value: function notifyListContentLayout(_ref2) {\n        var orientation = _ref2.orientation,\n          layout = _ref2.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        this._contentLength = this._selectLength(layout);\n      }\n    }, {\n      key: \"getAverageCellLength\",\n      value: function getAverageCellLength() {\n        return this._averageCellLength;\n      }\n    }, {\n      key: \"getHighestMeasuredCellIndex\",\n      value: function getHighestMeasuredCellIndex() {\n        return this._highestMeasuredCellIndex;\n      }\n    }, {\n      key: \"getCellMetricsApprox\",\n      value: function getCellMetricsApprox(index, props) {\n        var frame = this.getCellMetrics(index, props);\n        if (frame && frame.index === index) {\n          return frame;\n        } else {\n          var data = props.data,\n            getItemCount = props.getItemCount;\n          (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n          return {\n            length: this._averageCellLength,\n            offset: this._averageCellLength * index,\n            index,\n            isMounted: false\n          };\n        }\n      }\n    }, {\n      key: \"getCellMetrics\",\n      value: function getCellMetrics(index, props) {\n        var data = props.data,\n          getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);\n        var keyExtractor = props.keyExtractor ?? _VirtualizeUtils.keyExtractor;\n        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));\n        if (frame && frame.index === index) {\n          return frame;\n        }\n        if (getItemLayout) {\n          var _getItemLayout = getItemLayout(data, index),\n            length = _getItemLayout.length,\n            offset = _getItemLayout.offset;\n          return {\n            index,\n            length,\n            offset,\n            isMounted: true\n          };\n        }\n        return null;\n      }\n    }, {\n      key: \"getCellOffsetApprox\",\n      value: function getCellOffsetApprox(index, props) {\n        if (Number.isInteger(index)) {\n          return this.getCellMetricsApprox(index, props).offset;\n        } else {\n          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n          var remainder = index - Math.floor(index);\n          return frameMetrics.offset + remainder * frameMetrics.length;\n        }\n      }\n    }, {\n      key: \"getContentLength\",\n      value: function getContentLength() {\n        return this._contentLength ?? 0;\n      }\n    }, {\n      key: \"hasContentLength\",\n      value: function hasContentLength() {\n        return this._contentLength != null;\n      }\n    }, {\n      key: \"flowRelativeOffset\",\n      value: function flowRelativeOffset(layout, referenceContentLength) {\n        var _this$_orientation = this._orientation,\n          horizontal = _this$_orientation.horizontal,\n          rtl = _this$_orientation.rtl;\n        if (horizontal && rtl) {\n          var contentLength = referenceContentLength ?? this._contentLength;\n          (0, _invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));\n        } else {\n          return this._selectOffset(layout);\n        }\n      }\n    }, {\n      key: \"cartesianOffset\",\n      value: function cartesianOffset(flowRelativeOffset) {\n        var _this$_orientation2 = this._orientation,\n          horizontal = _this$_orientation2.horizontal,\n          rtl = _this$_orientation2.rtl;\n        if (horizontal && rtl) {\n          (0, _invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return this._contentLength - flowRelativeOffset;\n        } else {\n          return flowRelativeOffset;\n        }\n      }\n    }, {\n      key: \"_invalidateIfOrientationChanged\",\n      value: function _invalidateIfOrientationChanged(orientation) {\n        if (orientation.rtl !== this._orientation.rtl) {\n          this._cellMetrics.clear();\n        }\n        if (orientation.horizontal !== this._orientation.horizontal) {\n          this._averageCellLength = 0;\n          this._highestMeasuredCellIndex = 0;\n          this._measuredCellsLength = 0;\n          this._measuredCellsCount = 0;\n        }\n        this._orientation = orientation;\n      }\n    }, {\n      key: \"_selectLength\",\n      value: function _selectLength(_ref3) {\n        var width = _ref3.width,\n          height = _ref3.height;\n        return this._orientation.horizontal ? width : height;\n      }\n    }, {\n      key: \"_selectOffset\",\n      value: function _selectOffset(_ref4) {\n        var x = _ref4.x,\n          y = _ref4.y;\n        return this._orientation.horizontal ? x : y;\n      }\n    }]);\n  }();\n});","lineCount":204,"map":[[9,2,14,0],[9,6,14,0,"_VirtualizeUtils"],[9,22,14,0],[9,25,14,0,"require"],[9,32,14,0],[9,33,14,0,"_dependencyMap"],[9,47,14,0],[10,2,15,0],[10,6,15,0,"_invariant"],[10,16,15,0],[10,19,15,0,"_interopRequireDefault"],[10,41,15,0],[10,42,15,0,"require"],[10,49,15,0],[10,50,15,0,"_dependencyMap"],[10,64,15,0],[11,2,15,34],[11,6,59,21,"ListMetricsAggregator"],[11,27,59,42],[11,30,59,42,"exports"],[11,37,59,42],[11,38,59,42,"default"],[11,45,59,42],[12,4,59,42],[12,13,59,42,"ListMetricsAggregator"],[12,35,59,42],[13,6,59,42],[13,10,59,42,"_classCallCheck2"],[13,26,59,42],[13,27,59,42,"default"],[13,34,59,42],[13,42,59,42,"ListMetricsAggregator"],[13,63,59,42],[14,6,59,42],[14,11,60,2,"_averageCellLength"],[14,29,60,20],[14,32,60,23],[14,33,60,24],[15,6,60,24],[15,11,61,2,"_cellMetrics"],[15,23,61,14],[15,26,61,43],[15,30,61,47,"Map"],[15,33,61,50],[15,34,61,51],[15,35,61,52],[16,6,61,52],[16,11,63,2,"_highestMeasuredCellIndex"],[16,36,63,27],[16,39,63,30],[16,40,63,31],[17,6,63,31],[17,11,64,2,"_measuredCellsLength"],[17,31,64,22],[17,34,64,25],[17,35,64,26],[18,6,64,26],[18,11,65,2,"_measuredCellsCount"],[18,30,65,21],[18,33,65,24],[18,34,65,25],[19,6,65,25],[19,11,66,2,"_orientation"],[19,23,66,14],[19,26,66,34],[20,8,67,4,"horizontal"],[20,18,67,14],[20,20,67,16],[20,25,67,21],[21,8,68,4,"rtl"],[21,11,68,7],[21,13,68,9],[22,6,69,2],[22,7,69,3],[23,4,69,3],[24,4,69,3],[24,15,69,3,"_createClass2"],[24,28,69,3],[24,29,69,3,"default"],[24,36,69,3],[24,38,69,3,"ListMetricsAggregator"],[24,59,69,3],[25,6,69,3,"key"],[25,9,69,3],[26,6,69,3,"value"],[26,11,69,3],[26,13,76,2],[26,22,76,2,"notifyCellLayout"],[26,38,76,18,"notifyCellLayout"],[26,39,76,18,"_ref"],[26,43,76,18],[26,45,86,14],[27,8,86,14],[27,12,77,4,"cellIndex"],[27,21,77,13],[27,24,77,13,"_ref"],[27,28,77,13],[27,29,77,4,"cellIndex"],[27,38,77,13],[28,10,78,4,"cellKey"],[28,17,78,11],[28,20,78,11,"_ref"],[28,24,78,11],[28,25,78,4,"cellKey"],[28,32,78,11],[29,10,79,4,"orientation"],[29,21,79,15],[29,24,79,15,"_ref"],[29,28,79,15],[29,29,79,4,"orientation"],[29,40,79,15],[30,10,80,4,"layout"],[30,16,80,10],[30,19,80,10,"_ref"],[30,23,80,10],[30,24,80,4,"layout"],[30,30,80,10],[31,8,87,4],[31,12,87,8],[31,13,87,9,"_invalidateIfOrientationChanged"],[31,44,87,40],[31,45,87,41,"orientation"],[31,56,87,52],[31,57,87,53],[32,8,89,4],[32,12,89,10,"next"],[32,16,89,27],[32,19,89,30],[33,10,90,6,"index"],[33,15,90,11],[33,17,90,13,"cellIndex"],[33,26,90,22],[34,10,91,6,"length"],[34,16,91,12],[34,18,91,14],[34,22,91,18],[34,23,91,19,"_selectLength"],[34,36,91,32],[34,37,91,33,"layout"],[34,43,91,39],[34,44,91,40],[35,10,92,6,"isMounted"],[35,19,92,15],[35,21,92,17],[35,25,92,21],[36,10,93,6,"offset"],[36,16,93,12],[36,18,93,14],[36,22,93,18],[36,23,93,19,"flowRelativeOffset"],[36,41,93,37],[36,42,93,38,"layout"],[36,48,93,44],[37,8,94,4],[37,9,94,5],[38,8,95,4],[38,12,95,10,"curr"],[38,16,95,14],[38,19,95,17],[38,23,95,21],[38,24,95,22,"_cellMetrics"],[38,36,95,34],[38,37,95,35,"get"],[38,40,95,38],[38,41,95,39,"cellKey"],[38,48,95,46],[38,49,95,47],[39,8,97,4],[39,12,97,8],[39,13,97,9,"curr"],[39,17,97,13],[39,21,97,17,"next"],[39,25,97,21],[39,26,97,22,"offset"],[39,32,97,28],[39,37,97,33,"curr"],[39,41,97,37],[39,42,97,38,"offset"],[39,48,97,44],[39,52,97,48,"next"],[39,56,97,52],[39,57,97,53,"length"],[39,63,97,59],[39,68,97,64,"curr"],[39,72,97,68],[39,73,97,69,"length"],[39,79,97,75],[39,81,97,77],[40,10,98,6],[40,14,98,10,"curr"],[40,18,98,14],[40,20,98,16],[41,12,99,8],[41,16,99,14,"dLength"],[41,23,99,21],[41,26,99,24,"next"],[41,30,99,28],[41,31,99,29,"length"],[41,37,99,35],[41,40,99,38,"curr"],[41,44,99,42],[41,45,99,43,"length"],[41,51,99,49],[42,12,100,8],[42,16,100,12],[42,17,100,13,"_measuredCellsLength"],[42,37,100,33],[42,41,100,37,"dLength"],[42,48,100,44],[43,10,101,6],[43,11,101,7],[43,17,101,13],[44,12,102,8],[44,16,102,12],[44,17,102,13,"_measuredCellsLength"],[44,37,102,33],[44,41,102,37,"next"],[44,45,102,41],[44,46,102,42,"length"],[44,52,102,48],[45,12,103,8],[45,16,103,12],[45,17,103,13,"_measuredCellsCount"],[45,36,103,32],[45,40,103,36],[45,41,103,37],[46,10,104,6],[47,10,106,6],[47,14,106,10],[47,15,106,11,"_averageCellLength"],[47,33,106,29],[47,36,107,8],[47,40,107,12],[47,41,107,13,"_measuredCellsLength"],[47,61,107,33],[47,64,107,36],[47,68,107,40],[47,69,107,41,"_measuredCellsCount"],[47,88,107,60],[48,10,108,6],[48,14,108,10],[48,15,108,11,"_cellMetrics"],[48,27,108,23],[48,28,108,24,"set"],[48,31,108,27],[48,32,108,28,"cellKey"],[48,39,108,35],[48,41,108,37,"next"],[48,45,108,41],[48,46,108,42],[49,10,109,6],[49,14,109,10],[49,15,109,11,"_highestMeasuredCellIndex"],[49,40,109,36],[49,43,109,39,"Math"],[49,47,109,43],[49,48,109,44,"max"],[49,51,109,47],[49,52,110,8],[49,56,110,12],[49,57,110,13,"_highestMeasuredCellIndex"],[49,82,110,38],[49,84,111,8,"cellIndex"],[49,93,112,6],[49,94,112,7],[50,10,113,6],[50,17,113,13],[50,21,113,17],[51,8,114,4],[51,9,114,5],[51,15,114,11],[52,10,115,6,"curr"],[52,14,115,10],[52,15,115,11,"isMounted"],[52,24,115,20],[52,27,115,23],[52,31,115,27],[53,10,116,6],[53,17,116,13],[53,22,116,18],[54,8,117,4],[55,6,118,2],[56,4,118,3],[57,6,118,3,"key"],[57,9,118,3],[58,6,118,3,"value"],[58,11,118,3],[58,13,123,2],[58,22,123,2,"notifyCellUnmounted"],[58,41,123,21,"notifyCellUnmounted"],[58,42,123,22,"cellKey"],[58,49,123,37],[58,51,123,45],[59,8,124,4],[59,12,124,10,"curr"],[59,16,124,14],[59,19,124,17],[59,23,124,21],[59,24,124,22,"_cellMetrics"],[59,36,124,34],[59,37,124,35,"get"],[59,40,124,38],[59,41,124,39,"cellKey"],[59,48,124,46],[59,49,124,47],[60,8,125,4],[60,12,125,8,"curr"],[60,16,125,12],[60,18,125,14],[61,10,126,6,"curr"],[61,14,126,10],[61,15,126,11,"isMounted"],[61,24,126,20],[61,27,126,23],[61,32,126,28],[62,8,127,4],[63,6,128,2],[64,4,128,3],[65,6,128,3,"key"],[65,9,128,3],[66,6,128,3,"value"],[66,11,128,3],[66,13,133,2],[66,22,133,2,"notifyListContentLayout"],[66,45,133,25,"notifyListContentLayout"],[66,46,133,25,"_ref2"],[66,51,133,25],[66,53,139,11],[67,8,139,11],[67,12,134,4,"orientation"],[67,23,134,15],[67,26,134,15,"_ref2"],[67,31,134,15],[67,32,134,4,"orientation"],[67,43,134,15],[68,10,135,4,"layout"],[68,16,135,10],[68,19,135,10,"_ref2"],[68,24,135,10],[68,25,135,4,"layout"],[68,31,135,10],[69,8,140,4],[69,12,140,8],[69,13,140,9,"_invalidateIfOrientationChanged"],[69,44,140,40],[69,45,140,41,"orientation"],[69,56,140,52],[69,57,140,53],[70,8,141,4],[70,12,141,8],[70,13,141,9,"_contentLength"],[70,27,141,23],[70,30,141,26],[70,34,141,30],[70,35,141,31,"_selectLength"],[70,48,141,44],[70,49,141,45,"layout"],[70,55,141,51],[70,56,141,52],[71,6,142,2],[72,4,142,3],[73,6,142,3,"key"],[73,9,142,3],[74,6,142,3,"value"],[74,11,142,3],[74,13,147,2],[74,22,147,2,"getAverageCellLength"],[74,42,147,22,"getAverageCellLength"],[74,43,147,22],[74,45,147,33],[75,8,148,4],[75,15,148,11],[75,19,148,15],[75,20,148,16,"_averageCellLength"],[75,38,148,34],[76,6,149,2],[77,4,149,3],[78,6,149,3,"key"],[78,9,149,3],[79,6,149,3,"value"],[79,11,149,3],[79,13,155,2],[79,22,155,2,"getHighestMeasuredCellIndex"],[79,49,155,29,"getHighestMeasuredCellIndex"],[79,50,155,29],[79,52,155,40],[80,8,156,4],[80,15,156,11],[80,19,156,15],[80,20,156,16,"_highestMeasuredCellIndex"],[80,45,156,41],[81,6,157,2],[82,4,157,3],[83,6,157,3,"key"],[83,9,157,3],[84,6,157,3,"value"],[84,11,157,3],[84,13,164,2],[84,22,164,2,"getCellMetricsApprox"],[84,42,164,22,"getCellMetricsApprox"],[84,43,164,23,"index"],[84,48,164,36],[84,50,164,38,"props"],[84,55,164,60],[84,57,164,75],[85,8,165,4],[85,12,165,10,"frame"],[85,17,165,15],[85,20,165,18],[85,24,165,22],[85,25,165,23,"getCellMetrics"],[85,39,165,37],[85,40,165,38,"index"],[85,45,165,43],[85,47,165,45,"props"],[85,52,165,50],[85,53,165,51],[86,8,166,4],[86,12,166,8,"frame"],[86,17,166,13],[86,21,166,17,"frame"],[86,26,166,22],[86,27,166,23,"index"],[86,32,166,28],[86,37,166,33,"index"],[86,42,166,38],[86,44,166,40],[87,10,168,6],[87,17,168,13,"frame"],[87,22,168,18],[88,8,169,4],[88,9,169,5],[88,15,169,11],[89,10,170,6],[89,14,170,13,"data"],[89,18,170,17],[89,21,170,35,"props"],[89,26,170,40],[89,27,170,13,"data"],[89,31,170,17],[90,12,170,19,"getItemCount"],[90,24,170,31],[90,27,170,35,"props"],[90,32,170,40],[90,33,170,19,"getItemCount"],[90,45,170,31],[91,10,171,6],[91,14,171,6,"invariant"],[91,32,171,15],[91,34,172,8,"index"],[91,39,172,13],[91,43,172,17],[91,44,172,18],[91,48,172,22,"index"],[91,53,172,27],[91,56,172,30,"getItemCount"],[91,68,172,42],[91,69,172,43,"data"],[91,73,172,47],[91,74,172,48],[91,76,173,8],[91,120,173,52],[91,123,173,55,"index"],[91,128,174,6],[91,129,174,7],[92,10,175,6],[92,17,175,13],[93,12,176,8,"length"],[93,18,176,14],[93,20,176,16],[93,24,176,20],[93,25,176,21,"_averageCellLength"],[93,43,176,39],[94,12,177,8,"offset"],[94,18,177,14],[94,20,177,16],[94,24,177,20],[94,25,177,21,"_averageCellLength"],[94,43,177,39],[94,46,177,42,"index"],[94,51,177,47],[95,12,178,8,"index"],[95,17,178,13],[96,12,179,8,"isMounted"],[96,21,179,17],[96,23,179,19],[97,10,180,6],[97,11,180,7],[98,8,181,4],[99,6,182,2],[100,4,182,3],[101,6,182,3,"key"],[101,9,182,3],[102,6,182,3,"value"],[102,11,182,3],[102,13,187,2],[102,22,187,2,"getCellMetrics"],[102,36,187,16,"getCellMetrics"],[102,37,187,17,"index"],[102,42,187,30],[102,44,187,32,"props"],[102,49,187,54],[102,51,187,70],[103,8,188,4],[103,12,188,11,"data"],[103,16,188,15],[103,19,188,57,"props"],[103,24,188,62],[103,25,188,11,"data"],[103,29,188,15],[104,10,188,17,"getItem"],[104,17,188,24],[104,20,188,57,"props"],[104,25,188,62],[104,26,188,17,"getItem"],[104,33,188,24],[105,10,188,26,"getItemCount"],[105,22,188,38],[105,25,188,57,"props"],[105,30,188,62],[105,31,188,26,"getItemCount"],[105,43,188,38],[106,10,188,40,"getItemLayout"],[106,23,188,53],[106,26,188,57,"props"],[106,31,188,62],[106,32,188,40,"getItemLayout"],[106,45,188,53],[107,8,189,4],[107,12,189,4,"invariant"],[107,30,189,13],[107,32,190,6,"index"],[107,37,190,11],[107,41,190,15],[107,42,190,16],[107,46,190,20,"index"],[107,51,190,25],[107,54,190,28,"getItemCount"],[107,66,190,40],[107,67,190,41,"data"],[107,71,190,45],[107,72,190,46],[107,74,191,6],[107,125,191,57],[107,128,191,60,"index"],[107,133,192,4],[107,134,192,5],[108,8,193,4],[108,12,193,10,"keyExtractor"],[108,24,193,22],[108,27,193,25,"props"],[108,32,193,30],[108,33,193,31,"keyExtractor"],[108,45,193,43],[108,49,193,47,"defaultKeyExtractor"],[108,78,193,66],[109,8,194,4],[109,12,194,10,"frame"],[109,17,194,15],[109,20,194,18],[109,24,194,22],[109,25,194,23,"_cellMetrics"],[109,37,194,35],[109,38,194,36,"get"],[109,41,194,39],[109,42,195,6,"keyExtractor"],[109,54,195,18],[109,55,195,19,"getItem"],[109,62,195,26],[109,63,195,27,"data"],[109,67,195,31],[109,69,195,33,"index"],[109,74,195,38],[109,75,195,39],[109,77,195,41,"index"],[109,82,195,46],[109,83,196,4],[109,84,196,5],[110,8,197,4],[110,12,197,8,"frame"],[110,17,197,13],[110,21,197,17,"frame"],[110,26,197,22],[110,27,197,23,"index"],[110,32,197,28],[110,37,197,33,"index"],[110,42,197,38],[110,44,197,40],[111,10,198,6],[111,17,198,13,"frame"],[111,22,198,18],[112,8,199,4],[113,8,201,4],[113,12,201,8,"getItemLayout"],[113,25,201,21],[113,27,201,23],[114,10,202,6],[114,14,202,6,"_getItemLayout"],[114,28,202,6],[114,31,202,31,"getItemLayout"],[114,44,202,44],[114,45,202,45,"data"],[114,49,202,49],[114,51,202,51,"index"],[114,56,202,56],[114,57,202,57],[115,12,202,13,"length"],[115,18,202,19],[115,21,202,19,"_getItemLayout"],[115,35,202,19],[115,36,202,13,"length"],[115,42,202,19],[116,12,202,21,"offset"],[116,18,202,27],[116,21,202,27,"_getItemLayout"],[116,35,202,27],[116,36,202,21,"offset"],[116,42,202,27],[117,10,205,6],[117,17,205,13],[118,12,205,14,"index"],[118,17,205,19],[119,12,205,21,"length"],[119,18,205,27],[120,12,205,29,"offset"],[120,18,205,35],[121,12,205,37,"isMounted"],[121,21,205,46],[121,23,205,48],[122,10,205,52],[122,11,205,53],[123,8,206,4],[124,8,208,4],[124,15,208,11],[124,19,208,15],[125,6,209,2],[126,4,209,3],[127,6,209,3,"key"],[127,9,209,3],[128,6,209,3,"value"],[128,11,209,3],[128,13,215,2],[128,22,215,2,"getCellOffsetApprox"],[128,41,215,21,"getCellOffsetApprox"],[128,42,215,22,"index"],[128,47,215,35],[128,49,215,37,"props"],[128,54,215,59],[128,56,215,69],[129,8,216,4],[129,12,216,8,"Number"],[129,18,216,14],[129,19,216,15,"isInteger"],[129,28,216,24],[129,29,216,25,"index"],[129,34,216,30],[129,35,216,31],[129,37,216,33],[130,10,217,6],[130,17,217,13],[130,21,217,17],[130,22,217,18,"getCellMetricsApprox"],[130,42,217,38],[130,43,217,39,"index"],[130,48,217,44],[130,50,217,46,"props"],[130,55,217,51],[130,56,217,52],[130,57,217,53,"offset"],[130,63,217,59],[131,8,218,4],[131,9,218,5],[131,15,218,11],[132,10,219,6],[132,14,219,12,"frameMetrics"],[132,26,219,24],[132,29,219,27],[132,33,219,31],[132,34,219,32,"getCellMetricsApprox"],[132,54,219,52],[132,55,219,53,"Math"],[132,59,219,57],[132,60,219,58,"floor"],[132,65,219,63],[132,66,219,64,"index"],[132,71,219,69],[132,72,219,70],[132,74,219,72,"props"],[132,79,219,77],[132,80,219,78],[133,10,220,6],[133,14,220,12,"remainder"],[133,23,220,21],[133,26,220,24,"index"],[133,31,220,29],[133,34,220,32,"Math"],[133,38,220,36],[133,39,220,37,"floor"],[133,44,220,42],[133,45,220,43,"index"],[133,50,220,48],[133,51,220,49],[134,10,221,6],[134,17,221,13,"frameMetrics"],[134,29,221,25],[134,30,221,26,"offset"],[134,36,221,32],[134,39,221,35,"remainder"],[134,48,221,44],[134,51,221,47,"frameMetrics"],[134,63,221,59],[134,64,221,60,"length"],[134,70,221,66],[135,8,222,4],[136,6,223,2],[137,4,223,3],[138,6,223,3,"key"],[138,9,223,3],[139,6,223,3,"value"],[139,11,223,3],[139,13,228,2],[139,22,228,2,"getContentLength"],[139,38,228,18,"getContentLength"],[139,39,228,18],[139,41,228,29],[140,8,229,4],[140,15,229,11],[140,19,229,15],[140,20,229,16,"_contentLength"],[140,34,229,30],[140,38,229,34],[140,39,229,35],[141,6,230,2],[142,4,230,3],[143,6,230,3,"key"],[143,9,230,3],[144,6,230,3,"value"],[144,11,230,3],[144,13,235,2],[144,22,235,2,"hasContentLength"],[144,38,235,18,"hasContentLength"],[144,39,235,18],[144,41,235,30],[145,8,236,4],[145,15,236,11],[145,19,236,15],[145,20,236,16,"_contentLength"],[145,34,236,30],[145,38,236,34],[145,42,236,38],[146,6,237,2],[147,4,237,3],[148,6,237,3,"key"],[148,9,237,3],[149,6,237,3,"value"],[149,11,237,3],[149,13,243,2],[149,22,243,2,"flowRelativeOffset"],[149,40,243,20,"flowRelativeOffset"],[149,41,243,21,"layout"],[149,47,243,35],[149,49,243,37,"referenceContentLength"],[149,71,243,69],[149,73,243,79],[150,8,244,4],[150,12,244,4,"_this$_orientation"],[150,30,244,4],[150,33,244,30],[150,37,244,34],[150,38,244,35,"_orientation"],[150,50,244,47],[151,10,244,11,"horizontal"],[151,20,244,21],[151,23,244,21,"_this$_orientation"],[151,41,244,21],[151,42,244,11,"horizontal"],[151,52,244,21],[152,10,244,23,"rtl"],[152,13,244,26],[152,16,244,26,"_this$_orientation"],[152,34,244,26],[152,35,244,23,"rtl"],[152,38,244,26],[153,8,246,4],[153,12,246,8,"horizontal"],[153,22,246,18],[153,26,246,22,"rtl"],[153,29,246,25],[153,31,246,27],[154,10,247,6],[154,14,247,12,"contentLength"],[154,27,247,25],[154,30,247,28,"referenceContentLength"],[154,52,247,50],[154,56,247,54],[154,60,247,58],[154,61,247,59,"_contentLength"],[154,75,247,73],[155,10,248,6],[155,14,248,6,"invariant"],[155,32,248,15],[155,34,249,8,"contentLength"],[155,47,249,21],[155,51,249,25],[155,55,249,29],[155,57,250,8],[155,145,251,6],[155,146,251,7],[156,10,252,6],[156,17,253,8,"contentLength"],[156,30,253,21],[156,34,254,9],[156,38,254,13],[156,39,254,14,"_selectOffset"],[156,52,254,27],[156,53,254,28,"layout"],[156,59,254,34],[156,60,254,35],[156,63,254,38],[156,67,254,42],[156,68,254,43,"_selectLength"],[156,81,254,56],[156,82,254,57,"layout"],[156,88,254,63],[156,89,254,64],[156,90,254,65],[157,8,256,4],[157,9,256,5],[157,15,256,11],[158,10,257,6],[158,17,257,13],[158,21,257,17],[158,22,257,18,"_selectOffset"],[158,35,257,31],[158,36,257,32,"layout"],[158,42,257,38],[158,43,257,39],[159,8,258,4],[160,6,259,2],[161,4,259,3],[162,6,259,3,"key"],[162,9,259,3],[163,6,259,3,"value"],[163,11,259,3],[163,13,264,2],[163,22,264,2,"cartesianOffset"],[163,37,264,17,"cartesianOffset"],[163,38,264,18,"flowRelativeOffset"],[163,56,264,44],[163,58,264,54],[164,8,265,4],[164,12,265,4,"_this$_orientation2"],[164,31,265,4],[164,34,265,30],[164,38,265,34],[164,39,265,35,"_orientation"],[164,51,265,47],[165,10,265,11,"horizontal"],[165,20,265,21],[165,23,265,21,"_this$_orientation2"],[165,42,265,21],[165,43,265,11,"horizontal"],[165,53,265,21],[166,10,265,23,"rtl"],[166,13,265,26],[166,16,265,26,"_this$_orientation2"],[166,35,265,26],[166,36,265,23,"rtl"],[166,39,265,26],[167,8,267,4],[167,12,267,8,"horizontal"],[167,22,267,18],[167,26,267,22,"rtl"],[167,29,267,25],[167,31,267,27],[168,10,268,6],[168,14,268,6,"invariant"],[168,32,268,15],[168,34,269,8],[168,38,269,12],[168,39,269,13,"_contentLength"],[168,53,269,27],[168,57,269,31],[168,61,269,35],[168,63,270,8],[168,151,271,6],[168,152,271,7],[169,10,272,6],[169,17,272,13],[169,21,272,17],[169,22,272,18,"_contentLength"],[169,36,272,32],[169,39,272,35,"flowRelativeOffset"],[169,57,272,53],[170,8,273,4],[170,9,273,5],[170,15,273,11],[171,10,274,6],[171,17,274,13,"flowRelativeOffset"],[171,35,274,31],[172,8,275,4],[173,6,276,2],[174,4,276,3],[175,6,276,3,"key"],[175,9,276,3],[176,6,276,3,"value"],[176,11,276,3],[176,13,278,2],[176,22,278,2,"_invalidateIfOrientationChanged"],[176,53,278,33,"_invalidateIfOrientationChanged"],[176,54,278,34,"orientation"],[176,65,278,62],[176,67,278,70],[177,8,279,4],[177,12,279,8,"orientation"],[177,23,279,19],[177,24,279,20,"rtl"],[177,27,279,23],[177,32,279,28],[177,36,279,32],[177,37,279,33,"_orientation"],[177,49,279,45],[177,50,279,46,"rtl"],[177,53,279,49],[177,55,279,51],[178,10,280,6],[178,14,280,10],[178,15,280,11,"_cellMetrics"],[178,27,280,23],[178,28,280,24,"clear"],[178,33,280,29],[178,34,280,30],[178,35,280,31],[179,8,281,4],[180,8,283,4],[180,12,283,8,"orientation"],[180,23,283,19],[180,24,283,20,"horizontal"],[180,34,283,30],[180,39,283,35],[180,43,283,39],[180,44,283,40,"_orientation"],[180,56,283,52],[180,57,283,53,"horizontal"],[180,67,283,63],[180,69,283,65],[181,10,284,6],[181,14,284,10],[181,15,284,11,"_averageCellLength"],[181,33,284,29],[181,36,284,32],[181,37,284,33],[182,10,285,6],[182,14,285,10],[182,15,285,11,"_highestMeasuredCellIndex"],[182,40,285,36],[182,43,285,39],[182,44,285,40],[183,10,286,6],[183,14,286,10],[183,15,286,11,"_measuredCellsLength"],[183,35,286,31],[183,38,286,34],[183,39,286,35],[184,10,287,6],[184,14,287,10],[184,15,287,11,"_measuredCellsCount"],[184,34,287,30],[184,37,287,33],[184,38,287,34],[185,8,288,4],[186,8,290,4],[186,12,290,8],[186,13,290,9,"_orientation"],[186,25,290,21],[186,28,290,24,"orientation"],[186,39,290,35],[187,6,291,2],[188,4,291,3],[189,6,291,3,"key"],[189,9,291,3],[190,6,291,3,"value"],[190,11,291,3],[190,13,293,2],[190,22,293,2,"_selectLength"],[190,35,293,15,"_selectLength"],[190,36,293,15,"_ref3"],[190,41,293,15],[190,43,296,62],[191,8,296,62],[191,12,294,4,"width"],[191,17,294,9],[191,20,294,9,"_ref3"],[191,25,294,9],[191,26,294,4,"width"],[191,31,294,9],[192,10,295,4,"height"],[192,16,295,10],[192,19,295,10,"_ref3"],[192,24,295,10],[192,25,295,4,"height"],[192,31,295,10],[193,8,297,4],[193,15,297,11],[193,19,297,15],[193,20,297,16,"_orientation"],[193,32,297,28],[193,33,297,29,"horizontal"],[193,43,297,39],[193,46,297,42,"width"],[193,51,297,47],[193,54,297,50,"height"],[193,60,297,56],[194,6,298,2],[195,4,298,3],[196,6,298,3,"key"],[196,9,298,3],[197,6,298,3,"value"],[197,11,298,3],[197,13,300,2],[197,22,300,2,"_selectOffset"],[197,35,300,15,"_selectOffset"],[197,36,300,15,"_ref4"],[197,41,300,15],[197,43,300,72],[198,8,300,72],[198,12,300,17,"x"],[198,13,300,18],[198,16,300,18,"_ref4"],[198,21,300,18],[198,22,300,17,"x"],[198,23,300,18],[199,10,300,20,"y"],[199,11,300,21],[199,14,300,21,"_ref4"],[199,19,300,21],[199,20,300,20,"y"],[199,21,300,21],[200,8,301,4],[200,15,301,11],[200,19,301,15],[200,20,301,16,"_orientation"],[200,32,301,28],[200,33,301,29,"horizontal"],[200,43,301,39],[200,46,301,42,"x"],[200,47,301,43],[200,50,301,46,"y"],[200,51,301,47],[201,6,302,2],[202,4,302,3],[203,2,302,3],[204,0,302,3],[204,3]],"functionMap":{"names":["<global>","ListMetricsAggregator","notifyCellLayout","notifyCellUnmounted","notifyListContentLayout","getAverageCellLength","getHighestMeasuredCellIndex","getCellMetricsApprox","getCellMetrics","getCellOffsetApprox","getContentLength","hasContentLength","flowRelativeOffset","cartesianOffset","_invalidateIfOrientationChanged","_selectLength","_selectOffset"],"mappings":"AAA;eC0D;ECiB;GD0C;EEK;GFK;EGK;GHS;EIK;GJE;EKM;GLE;EMO;GNkB;EOK;GPsB;EQM;GRQ;ESK;GTE;EUK;GVE;EWM;GXgB;EYK;GZY;EaE;Gba;EcE;GdK;EeE;GfE"}},"type":"js/module"}]}