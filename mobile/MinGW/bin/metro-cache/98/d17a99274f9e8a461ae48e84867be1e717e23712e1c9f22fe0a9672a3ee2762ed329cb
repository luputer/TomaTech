{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":259,"column":0,"index":6999}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":259,"column":0,"index":6999}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":259,"column":0,"index":6999}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":225},"end":{"line":9,"column":61,"index":286}}],"key":"FRYs8b/TcYb52f7GsizAy66txAY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LogBoxLog = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[3], \"./LogBoxSymbolication\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  function componentStackToStack(componentStack) {\n    return componentStack.map(stack => ({\n      file: stack.fileName,\n      methodName: stack.content,\n      lineNumber: stack.location?.row ?? 0,\n      column: stack.location?.column ?? 0,\n      arguments: []\n    }));\n  }\n  var LogBoxLog = exports.LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        stack: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        },\n        component: {\n          error: null,\n          stack: null,\n          status: 'NONE'\n        }\n      };\n      this.callbacks = new Map();\n      this.componentStackCache = null;\n      this.level = data.level;\n      this.type = data.type ?? 'error';\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n      this.symbolicated = data.symbolicated ?? this.symbolicated;\n    }\n    return (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack(type) {\n        if (this.symbolicated[type].status === 'COMPLETE') {\n          return this.symbolicated[type].stack;\n        }\n        return this.getStack(type);\n      }\n    }, {\n      key: \"flushCallbacks\",\n      value: function flushCallbacks(type) {\n        var callbacks = this.callbacks.get(type);\n        var status = this.symbolicated[type].status;\n        if (callbacks) {\n          for (var callback of callbacks) {\n            callback(status);\n          }\n          callbacks.clear();\n        }\n      }\n    }, {\n      key: \"pushCallback\",\n      value: function pushCallback(type, callback) {\n        var callbacks = this.callbacks.get(type);\n        if (!callbacks) {\n          callbacks = new Set();\n          this.callbacks.set(type, callbacks);\n        }\n        callbacks.add(callback);\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(type, callback) {\n        this._symbolicate(type, true, callback);\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(type, callback) {\n        this._symbolicate(type, false, callback);\n      }\n    }, {\n      key: \"_symbolicate\",\n      value: function _symbolicate(type, retry, callback) {\n        if (callback) {\n          this.pushCallback(type, callback);\n        }\n        var status = this.symbolicated[type].status;\n        if (status === 'COMPLETE') {\n          return this.flushCallbacks(type);\n        }\n        if (retry) {\n          LogBoxSymbolication.deleteStack(this.getStack(type));\n          this.handleSymbolicate(type);\n        } else {\n          if (status === 'NONE') {\n            this.handleSymbolicate(type);\n          }\n        }\n      }\n    }, {\n      key: \"getStack\",\n      value: function getStack(type) {\n        if (type === 'component') {\n          if (this.componentStackCache == null) {\n            this.componentStackCache = componentStackToStack(this.componentStack);\n          }\n          return this.componentStackCache;\n        }\n        return this.stack;\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(type) {\n        if (type === 'component' && !this.componentStack?.length) {\n          return;\n        }\n        if (this.symbolicated[type].status !== 'PENDING') {\n          this.updateStatus(type, null, null, null);\n          LogBoxSymbolication.symbolicate(ensureStackFilesHaveParams(this.getStack(type))).then(data => {\n            this.updateStatus(type, null, data?.stack, data?.codeFrame);\n          }, error => {\n            this.updateStatus(type, error, null, null);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(type, error, stack, codeFrame) {\n        var lastStatus = this.symbolicated[type].status;\n        if (error != null) {\n          this.symbolicated[type] = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated[type] = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated[type] = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        var status = this.symbolicated[type].status;\n        if (lastStatus !== status) {\n          if (['COMPLETE', 'FAILED'].includes(status)) {\n            this.flushCallbacks(type);\n          }\n        }\n      }\n    }]);\n  }(); // Sometime the web stacks don't have correct query params, this can lead to Metro errors when it attempts to resolve without a platform.\n  // This will attempt to reconcile the issue by adding the current query params to the stack frames if they exist, or fallback to some common defaults.\n  function ensureStackFilesHaveParams(stack) {\n    var currentSrc = typeof document !== 'undefined' && document.currentScript ? 'src' in document.currentScript && document.currentScript.src || null : null;\n    var currentParams = currentSrc ? new URLSearchParams(currentSrc) : new URLSearchParams({\n      platform: 'web',\n      dev: String(__DEV__)\n    });\n    return stack.map(frame => {\n      if (!frame.file?.startsWith('http') ||\n      // Account for Metro malformed URLs\n      frame.file.includes('&platform=')) return frame;\n      var url = new URL(frame.file);\n      if (url.searchParams.has('platform')) {\n        return frame;\n      }\n      currentParams.forEach((value, key) => {\n        if (url.searchParams.has(key)) return;\n        url.searchParams.set(key, value);\n      });\n      return {\n        ...frame,\n        file: url.toString()\n      };\n    });\n  }\n});","lineCount":207,"map":[[9,2,9,0],[9,6,9,0,"LogBoxSymbolication"],[9,25,9,0],[9,28,9,0,"_interopRequireWildcard"],[9,51,9,0],[9,52,9,0,"require"],[9,59,9,0],[9,60,9,0,"_dependencyMap"],[9,74,9,0],[10,2,9,61],[10,11,9,61,"_getRequireWildcardCache"],[10,36,9,61,"e"],[10,37,9,61],[10,66,9,61,"WeakMap"],[10,73,9,61],[10,92,9,61,"r"],[10,93,9,61],[10,100,9,61,"WeakMap"],[10,107,9,61],[10,111,9,61,"t"],[10,112,9,61],[10,119,9,61,"WeakMap"],[10,126,9,61],[10,138,9,61,"_getRequireWildcardCache"],[10,162,9,61],[10,174,9,61,"_getRequireWildcardCache"],[10,175,9,61,"e"],[10,176,9,61],[10,187,9,61,"e"],[10,188,9,61],[10,191,9,61,"t"],[10,192,9,61],[10,195,9,61,"r"],[10,196,9,61],[10,201,9,61,"e"],[10,202,9,61],[11,2,9,61],[11,11,9,61,"_interopRequireWildcard"],[11,35,9,61,"e"],[11,36,9,61],[11,38,9,61,"r"],[11,39,9,61],[11,48,9,61,"r"],[11,49,9,61],[11,53,9,61,"e"],[11,54,9,61],[11,58,9,61,"e"],[11,59,9,61],[11,60,9,61,"__esModule"],[11,70,9,61],[11,79,9,61,"e"],[11,80,9,61],[11,95,9,61,"e"],[11,96,9,61],[11,119,9,61,"e"],[11,120,9,61],[11,145,9,61,"e"],[11,146,9,61],[11,157,9,61,"default"],[11,164,9,61],[11,166,9,61,"e"],[11,167,9,61],[11,175,9,61,"t"],[11,176,9,61],[11,179,9,61,"_getRequireWildcardCache"],[11,203,9,61],[11,204,9,61,"r"],[11,205,9,61],[11,212,9,61,"t"],[11,213,9,61],[11,217,9,61,"t"],[11,218,9,61],[11,219,9,61,"has"],[11,222,9,61],[11,223,9,61,"e"],[11,224,9,61],[11,234,9,61,"t"],[11,235,9,61],[11,236,9,61,"get"],[11,239,9,61],[11,240,9,61,"e"],[11,241,9,61],[11,248,9,61,"n"],[11,249,9,61],[11,254,9,61,"__proto__"],[11,263,9,61],[11,273,9,61,"a"],[11,274,9,61],[11,277,9,61,"Object"],[11,283,9,61],[11,284,9,61,"defineProperty"],[11,298,9,61],[11,302,9,61,"Object"],[11,308,9,61],[11,309,9,61,"getOwnPropertyDescriptor"],[11,333,9,61],[11,344,9,61,"u"],[11,345,9,61],[11,349,9,61,"e"],[11,350,9,61],[11,370,9,61,"u"],[11,371,9,61],[11,378,9,61,"hasOwnProperty"],[11,392,9,61],[11,393,9,61,"call"],[11,397,9,61],[11,398,9,61,"e"],[11,399,9,61],[11,401,9,61,"u"],[11,402,9,61],[11,411,9,61,"i"],[11,412,9,61],[11,415,9,61,"a"],[11,416,9,61],[11,419,9,61,"Object"],[11,425,9,61],[11,426,9,61,"getOwnPropertyDescriptor"],[11,450,9,61],[11,451,9,61,"e"],[11,452,9,61],[11,454,9,61,"u"],[11,455,9,61],[11,465,9,61,"i"],[11,466,9,61],[11,471,9,61,"i"],[11,472,9,61],[11,473,9,61,"get"],[11,476,9,61],[11,480,9,61,"i"],[11,481,9,61],[11,482,9,61,"set"],[11,485,9,61],[11,489,9,61,"Object"],[11,495,9,61],[11,496,9,61,"defineProperty"],[11,510,9,61],[11,511,9,61,"n"],[11,512,9,61],[11,514,9,61,"u"],[11,515,9,61],[11,517,9,61,"i"],[11,518,9,61],[11,522,9,61,"n"],[11,523,9,61],[11,524,9,61,"u"],[11,525,9,61],[11,529,9,61,"e"],[11,530,9,61],[11,531,9,61,"u"],[11,532,9,61],[11,544,9,61,"n"],[11,545,9,61],[11,546,9,61,"default"],[11,553,9,61],[11,556,9,61,"e"],[11,557,9,61],[11,559,9,61,"t"],[11,560,9,61],[11,564,9,61,"t"],[11,565,9,61],[11,566,9,61,"set"],[11,569,9,61],[11,570,9,61,"e"],[11,571,9,61],[11,573,9,61,"n"],[11,574,9,61],[11,577,9,61,"n"],[11,578,9,61],[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[20,2,30,0],[20,11,30,9,"componentStackToStack"],[20,32,30,30,"componentStackToStack"],[20,33,30,31,"componentStack"],[20,47,30,61],[20,49,30,70],[21,4,31,2],[21,11,31,9,"componentStack"],[21,25,31,23],[21,26,31,24,"map"],[21,29,31,27],[21,30,31,29,"stack"],[21,35,31,34],[21,40,31,40],[22,6,32,4,"file"],[22,10,32,8],[22,12,32,10,"stack"],[22,17,32,15],[22,18,32,16,"fileName"],[22,26,32,24],[23,6,33,4,"methodName"],[23,16,33,14],[23,18,33,16,"stack"],[23,23,33,21],[23,24,33,22,"content"],[23,31,33,29],[24,6,34,4,"lineNumber"],[24,16,34,14],[24,18,34,16,"stack"],[24,23,34,21],[24,24,34,22,"location"],[24,32,34,30],[24,34,34,32,"row"],[24,37,34,35],[24,41,34,39],[24,42,34,40],[25,6,35,4,"column"],[25,12,35,10],[25,14,35,12,"stack"],[25,19,35,17],[25,20,35,18,"location"],[25,28,35,26],[25,30,35,28,"column"],[25,36,35,34],[25,40,35,38],[25,41,35,39],[26,6,36,4,"arguments"],[26,15,36,13],[26,17,36,15],[27,4,37,2],[27,5,37,3],[27,6,37,4],[27,7,37,5],[28,2,38,0],[29,2,38,1],[29,6,48,13,"LogBoxLog"],[29,15,48,22],[29,18,48,22,"exports"],[29,25,48,22],[29,26,48,22,"LogBoxLog"],[29,35,48,22],[30,4,73,2],[30,13,73,2,"LogBoxLog"],[30,23,74,4,"data"],[30,27,76,5],[30,29,77,4],[31,6,77,4],[31,10,77,4,"_classCallCheck2"],[31,26,77,4],[31,27,77,4,"default"],[31,34,77,4],[31,42,77,4,"LogBoxLog"],[31,51,77,4],[32,6,77,4],[32,11,58,2,"symbolicated"],[32,23,58,14],[32,26,58,57],[33,8,59,4,"stack"],[33,13,59,9],[33,15,59,11],[34,10,60,6,"error"],[34,15,60,11],[34,17,60,13],[34,21,60,17],[35,10,61,6,"stack"],[35,15,61,11],[35,17,61,13],[35,21,61,17],[36,10,62,6,"status"],[36,16,62,12],[36,18,62,14],[37,8,63,4],[37,9,63,5],[38,8,64,4,"component"],[38,17,64,13],[38,19,64,15],[39,10,65,6,"error"],[39,15,65,11],[39,17,65,13],[39,21,65,17],[40,10,66,6,"stack"],[40,15,66,11],[40,17,66,13],[40,21,66,17],[41,10,67,6,"status"],[41,16,67,12],[41,18,67,14],[42,8,68,4],[43,6,69,2],[43,7,69,3],[44,6,69,3],[44,11,71,10,"callbacks"],[44,20,71,19],[44,23,71,66],[44,27,71,70,"Map"],[44,30,71,73],[44,31,71,74],[44,32,71,75],[45,6,71,75],[45,11,153,10,"componentStackCache"],[45,30,153,29],[45,33,153,46],[45,37,153,50],[46,6,78,4],[46,10,78,8],[46,11,78,9,"level"],[46,16,78,14],[46,19,78,17,"data"],[46,23,78,21],[46,24,78,22,"level"],[46,29,78,27],[47,6,79,4],[47,10,79,8],[47,11,79,9,"type"],[47,15,79,13],[47,18,79,16,"data"],[47,22,79,20],[47,23,79,21,"type"],[47,27,79,25],[47,31,79,29],[47,38,79,36],[48,6,80,4],[48,10,80,8],[48,11,80,9,"message"],[48,18,80,16],[48,21,80,19,"data"],[48,25,80,23],[48,26,80,24,"message"],[48,33,80,31],[49,6,81,4],[49,10,81,8],[49,11,81,9,"stack"],[49,16,81,14],[49,19,81,17,"data"],[49,23,81,21],[49,24,81,22,"stack"],[49,29,81,27],[50,6,82,4],[50,10,82,8],[50,11,82,9,"category"],[50,19,82,17],[50,22,82,20,"data"],[50,26,82,24],[50,27,82,25,"category"],[50,35,82,33],[51,6,83,4],[51,10,83,8],[51,11,83,9,"componentStack"],[51,25,83,23],[51,28,83,26,"data"],[51,32,83,30],[51,33,83,31,"componentStack"],[51,47,83,45],[52,6,84,4],[52,10,84,8],[52,11,84,9,"codeFrame"],[52,20,84,18],[52,23,84,21,"data"],[52,27,84,25],[52,28,84,26,"codeFrame"],[52,37,84,35],[53,6,85,4],[53,10,85,8],[53,11,85,9,"isComponentError"],[53,27,85,25],[53,30,85,28,"data"],[53,34,85,32],[53,35,85,33,"isComponentError"],[53,51,85,49],[54,6,86,4],[54,10,86,8],[54,11,86,9,"count"],[54,16,86,14],[54,19,86,17],[54,20,86,18],[55,6,87,4],[55,10,87,8],[55,11,87,9,"symbolicated"],[55,23,87,21],[55,26,87,24,"data"],[55,30,87,28],[55,31,87,29,"symbolicated"],[55,43,87,41],[55,47,87,45],[55,51,87,49],[55,52,87,50,"symbolicated"],[55,64,87,62],[56,4,88,2],[57,4,88,3],[57,15,88,3,"_createClass2"],[57,28,88,3],[57,29,88,3,"default"],[57,36,88,3],[57,38,88,3,"LogBoxLog"],[57,47,88,3],[58,6,88,3,"key"],[58,9,88,3],[59,6,88,3,"value"],[59,11,88,3],[59,13,90,2],[59,22,90,2,"incrementCount"],[59,36,90,16,"incrementCount"],[59,37,90,16],[59,39,90,25],[60,8,91,4],[60,12,91,8],[60,13,91,9,"count"],[60,18,91,14],[60,22,91,18],[60,23,91,19],[61,6,92,2],[62,4,92,3],[63,6,92,3,"key"],[63,9,92,3],[64,6,92,3,"value"],[64,11,92,3],[64,13,94,2],[64,22,94,2,"getAvailableStack"],[64,39,94,19,"getAvailableStack"],[64,40,94,20,"type"],[64,44,94,35],[64,46,94,51],[65,8,95,4],[65,12,95,8],[65,16,95,12],[65,17,95,13,"symbolicated"],[65,29,95,25],[65,30,95,26,"type"],[65,34,95,30],[65,35,95,31],[65,36,95,32,"status"],[65,42,95,38],[65,47,95,43],[65,57,95,53],[65,59,95,55],[66,10,96,6],[66,17,96,13],[66,21,96,17],[66,22,96,18,"symbolicated"],[66,34,96,30],[66,35,96,31,"type"],[66,39,96,35],[66,40,96,36],[66,41,96,37,"stack"],[66,46,96,42],[67,8,97,4],[68,8,98,4],[68,15,98,11],[68,19,98,15],[68,20,98,16,"getStack"],[68,28,98,24],[68,29,98,25,"type"],[68,33,98,29],[68,34,98,30],[69,6,99,2],[70,4,99,3],[71,6,99,3,"key"],[71,9,99,3],[72,6,99,3,"value"],[72,11,99,3],[72,13,101,2],[72,22,101,10,"flushCallbacks"],[72,36,101,24,"flushCallbacks"],[72,37,101,25,"type"],[72,41,101,40],[72,43,101,48],[73,8,102,4],[73,12,102,10,"callbacks"],[73,21,102,19],[73,24,102,22],[73,28,102,26],[73,29,102,27,"callbacks"],[73,38,102,36],[73,39,102,37,"get"],[73,42,102,40],[73,43,102,41,"type"],[73,47,102,45],[73,48,102,46],[74,8,103,4],[74,12,103,10,"status"],[74,18,103,16],[74,21,103,19],[74,25,103,23],[74,26,103,24,"symbolicated"],[74,38,103,36],[74,39,103,37,"type"],[74,43,103,41],[74,44,103,42],[74,45,103,43,"status"],[74,51,103,49],[75,8,104,4],[75,12,104,8,"callbacks"],[75,21,104,17],[75,23,104,19],[76,10,105,6],[76,15,105,11],[76,19,105,17,"callback"],[76,27,105,25],[76,31,105,29,"callbacks"],[76,40,105,38],[76,42,105,40],[77,12,106,8,"callback"],[77,20,106,16],[77,21,106,17,"status"],[77,27,106,23],[77,28,106,24],[78,10,107,6],[79,10,108,6,"callbacks"],[79,19,108,15],[79,20,108,16,"clear"],[79,25,108,21],[79,26,108,22],[79,27,108,23],[80,8,109,4],[81,6,110,2],[82,4,110,3],[83,6,110,3,"key"],[83,9,110,3],[84,6,110,3,"value"],[84,11,110,3],[84,13,112,2],[84,22,112,10,"pushCallback"],[84,34,112,22,"pushCallback"],[84,35,112,23,"type"],[84,39,112,38],[84,41,112,40,"callback"],[84,49,112,71],[84,51,112,79],[85,8,113,4],[85,12,113,8,"callbacks"],[85,21,113,17],[85,24,113,20],[85,28,113,24],[85,29,113,25,"callbacks"],[85,38,113,34],[85,39,113,35,"get"],[85,42,113,38],[85,43,113,39,"type"],[85,47,113,43],[85,48,113,44],[86,8,114,4],[86,12,114,8],[86,13,114,9,"callbacks"],[86,22,114,18],[86,24,114,20],[87,10,115,6,"callbacks"],[87,19,115,15],[87,22,115,18],[87,26,115,22,"Set"],[87,29,115,25],[87,30,115,26],[87,31,115,27],[88,10,116,6],[88,14,116,10],[88,15,116,11,"callbacks"],[88,24,116,20],[88,25,116,21,"set"],[88,28,116,24],[88,29,116,25,"type"],[88,33,116,29],[88,35,116,31,"callbacks"],[88,44,116,40],[88,45,116,41],[89,8,117,4],[90,8,118,4,"callbacks"],[90,17,118,13],[90,18,118,14,"add"],[90,21,118,17],[90,22,118,18,"callback"],[90,30,118,26],[90,31,118,27],[91,6,119,2],[92,4,119,3],[93,6,119,3,"key"],[93,9,119,3],[94,6,119,3,"value"],[94,11,119,3],[94,13,121,2],[94,22,121,2,"retrySymbolicate"],[94,38,121,18,"retrySymbolicate"],[94,39,121,19,"type"],[94,43,121,34],[94,45,121,36,"callback"],[94,53,121,84],[94,55,121,92],[95,8,122,4],[95,12,122,8],[95,13,122,9,"_symbolicate"],[95,25,122,21],[95,26,122,22,"type"],[95,30,122,26],[95,32,122,28],[95,36,122,32],[95,38,122,34,"callback"],[95,46,122,42],[95,47,122,43],[96,6,123,2],[97,4,123,3],[98,6,123,3,"key"],[98,9,123,3],[99,6,123,3,"value"],[99,11,123,3],[99,13,125,2],[99,22,125,2,"symbolicate"],[99,33,125,13,"symbolicate"],[99,34,125,14,"type"],[99,38,125,29],[99,40,125,31,"callback"],[99,48,125,79],[99,50,125,87],[100,8,126,4],[100,12,126,8],[100,13,126,9,"_symbolicate"],[100,25,126,21],[100,26,126,22,"type"],[100,30,126,26],[100,32,126,28],[100,37,126,33],[100,39,126,35,"callback"],[100,47,126,43],[100,48,126,44],[101,6,127,2],[102,4,127,3],[103,6,127,3,"key"],[103,9,127,3],[104,6,127,3,"value"],[104,11,127,3],[104,13,129,2],[104,22,129,10,"_symbolicate"],[104,34,129,22,"_symbolicate"],[104,35,130,4,"type"],[104,39,130,19],[104,41,131,4,"retry"],[104,46,131,18],[104,48,132,4,"callback"],[104,56,132,52],[104,58,133,10],[105,8,134,4],[105,12,134,8,"callback"],[105,20,134,16],[105,22,134,18],[106,10,135,6],[106,14,135,10],[106,15,135,11,"pushCallback"],[106,27,135,23],[106,28,135,24,"type"],[106,32,135,28],[106,34,135,30,"callback"],[106,42,135,38],[106,43,135,39],[107,8,136,4],[108,8,137,4],[108,12,137,10,"status"],[108,18,137,16],[108,21,137,19],[108,25,137,23],[108,26,137,24,"symbolicated"],[108,38,137,36],[108,39,137,37,"type"],[108,43,137,41],[108,44,137,42],[108,45,137,43,"status"],[108,51,137,49],[109,8,139,4],[109,12,139,8,"status"],[109,18,139,14],[109,23,139,19],[109,33,139,29],[109,35,139,31],[110,10,140,6],[110,17,140,13],[110,21,140,17],[110,22,140,18,"flushCallbacks"],[110,36,140,32],[110,37,140,33,"type"],[110,41,140,37],[110,42,140,38],[111,8,141,4],[112,8,143,4],[112,12,143,8,"retry"],[112,17,143,13],[112,19,143,15],[113,10,144,6,"LogBoxSymbolication"],[113,29,144,25],[113,30,144,26,"deleteStack"],[113,41,144,37],[113,42,144,38],[113,46,144,42],[113,47,144,43,"getStack"],[113,55,144,51],[113,56,144,52,"type"],[113,60,144,56],[113,61,144,57],[113,62,144,58],[114,10,145,6],[114,14,145,10],[114,15,145,11,"handleSymbolicate"],[114,32,145,28],[114,33,145,29,"type"],[114,37,145,33],[114,38,145,34],[115,8,146,4],[115,9,146,5],[115,15,146,11],[116,10,147,6],[116,14,147,10,"status"],[116,20,147,16],[116,25,147,21],[116,31,147,27],[116,33,147,29],[117,12,148,8],[117,16,148,12],[117,17,148,13,"handleSymbolicate"],[117,34,148,30],[117,35,148,31,"type"],[117,39,148,35],[117,40,148,36],[118,10,149,6],[119,8,150,4],[120,6,151,2],[121,4,151,3],[122,6,151,3,"key"],[122,9,151,3],[123,6,151,3,"value"],[123,11,151,3],[123,13,155,2],[123,22,155,10,"getStack"],[123,30,155,18,"getStack"],[123,31,155,19,"type"],[123,35,155,34],[123,37,155,43],[124,8,156,4],[124,12,156,8,"type"],[124,16,156,12],[124,21,156,17],[124,32,156,28],[124,34,156,30],[125,10,157,6],[125,14,157,10],[125,18,157,14],[125,19,157,15,"componentStackCache"],[125,38,157,34],[125,42,157,38],[125,46,157,42],[125,48,157,44],[126,12,158,8],[126,16,158,12],[126,17,158,13,"componentStackCache"],[126,36,158,32],[126,39,158,35,"componentStackToStack"],[126,60,158,56],[126,61,158,57],[126,65,158,61],[126,66,158,62,"componentStack"],[126,80,158,76],[126,81,158,77],[127,10,159,6],[128,10,160,6],[128,17,160,13],[128,21,160,17],[128,22,160,18,"componentStackCache"],[128,41,160,37],[129,8,161,4],[130,8,162,4],[130,15,162,11],[130,19,162,15],[130,20,162,16,"stack"],[130,25,162,21],[131,6,163,2],[132,4,163,3],[133,6,163,3,"key"],[133,9,163,3],[134,6,163,3,"value"],[134,11,163,3],[134,13,165,2],[134,22,165,10,"handleSymbolicate"],[134,39,165,27,"handleSymbolicate"],[134,40,165,28,"type"],[134,44,165,43],[134,46,165,51],[135,8,166,4],[135,12,166,8,"type"],[135,16,166,12],[135,21,166,17],[135,32,166,28],[135,36,166,32],[135,37,166,33],[135,41,166,37],[135,42,166,38,"componentStack"],[135,56,166,52],[135,58,166,54,"length"],[135,64,166,60],[135,66,166,62],[136,10,167,6],[137,8,168,4],[138,8,170,4],[138,12,170,8],[138,16,170,12],[138,17,170,13,"symbolicated"],[138,29,170,25],[138,30,170,26,"type"],[138,34,170,30],[138,35,170,31],[138,36,170,32,"status"],[138,42,170,38],[138,47,170,43],[138,56,170,52],[138,58,170,54],[139,10,171,6],[139,14,171,10],[139,15,171,11,"updateStatus"],[139,27,171,23],[139,28,171,24,"type"],[139,32,171,28],[139,34,171,30],[139,38,171,34],[139,40,171,36],[139,44,171,40],[139,46,171,42],[139,50,171,46],[139,51,171,47],[140,10,172,6,"LogBoxSymbolication"],[140,29,172,25],[140,30,172,26,"symbolicate"],[140,41,172,37],[140,42,172,38,"ensureStackFilesHaveParams"],[140,68,172,64],[140,69,172,65],[140,73,172,69],[140,74,172,70,"getStack"],[140,82,172,78],[140,83,172,79,"type"],[140,87,172,83],[140,88,172,84],[140,89,172,85],[140,90,172,86],[140,91,172,87,"then"],[140,95,172,91],[140,96,173,9,"data"],[140,100,173,13],[140,104,173,18],[141,12,174,10],[141,16,174,14],[141,17,174,15,"updateStatus"],[141,29,174,27],[141,30,174,28,"type"],[141,34,174,32],[141,36,174,34],[141,40,174,38],[141,42,174,40,"data"],[141,46,174,44],[141,48,174,46,"stack"],[141,53,174,51],[141,55,174,53,"data"],[141,59,174,57],[141,61,174,59,"codeFrame"],[141,70,174,68],[141,71,174,69],[142,10,175,8],[142,11,175,9],[142,13,176,9,"error"],[142,18,176,14],[142,22,176,19],[143,12,177,10],[143,16,177,14],[143,17,177,15,"updateStatus"],[143,29,177,27],[143,30,177,28,"type"],[143,34,177,32],[143,36,177,34,"error"],[143,41,177,39],[143,43,177,41],[143,47,177,45],[143,49,177,47],[143,53,177,51],[143,54,177,52],[144,10,178,8],[144,11,179,6],[144,12,179,7],[145,8,180,4],[146,6,181,2],[147,4,181,3],[148,6,181,3,"key"],[148,9,181,3],[149,6,181,3,"value"],[149,11,181,3],[149,13,183,2],[149,22,183,10,"updateStatus"],[149,34,183,22,"updateStatus"],[149,35,184,4,"type"],[149,39,184,19],[149,41,185,4,"error"],[149,46,185,24],[149,48,186,4,"stack"],[149,53,186,24],[149,55,187,4,"codeFrame"],[149,64,187,32],[149,66,188,10],[150,8,189,4],[150,12,189,10,"lastStatus"],[150,22,189,20],[150,25,189,23],[150,29,189,27],[150,30,189,28,"symbolicated"],[150,42,189,40],[150,43,189,41,"type"],[150,47,189,45],[150,48,189,46],[150,49,189,47,"status"],[150,55,189,53],[151,8,190,4],[151,12,190,8,"error"],[151,17,190,13],[151,21,190,17],[151,25,190,21],[151,27,190,23],[152,10,191,6],[152,14,191,10],[152,15,191,11,"symbolicated"],[152,27,191,23],[152,28,191,24,"type"],[152,32,191,28],[152,33,191,29],[152,36,191,32],[153,12,192,8,"error"],[153,17,192,13],[154,12,193,8,"stack"],[154,17,193,13],[154,19,193,15],[154,23,193,19],[155,12,194,8,"status"],[155,18,194,14],[155,20,194,16],[156,10,195,6],[156,11,195,7],[157,8,196,4],[157,9,196,5],[157,15,196,11],[157,19,196,15,"stack"],[157,24,196,20],[157,28,196,24],[157,32,196,28],[157,34,196,30],[158,10,197,6],[158,14,197,10,"codeFrame"],[158,23,197,19],[158,25,197,21],[159,12,198,8],[159,16,198,12],[159,17,198,13,"codeFrame"],[159,26,198,22],[159,29,198,25,"codeFrame"],[159,38,198,34],[160,10,199,6],[161,10,201,6],[161,14,201,10],[161,15,201,11,"symbolicated"],[161,27,201,23],[161,28,201,24,"type"],[161,32,201,28],[161,33,201,29],[161,36,201,32],[162,12,202,8,"error"],[162,17,202,13],[162,19,202,15],[162,23,202,19],[163,12,203,8,"stack"],[163,17,203,13],[164,12,204,8,"status"],[164,18,204,14],[164,20,204,16],[165,10,205,6],[165,11,205,7],[166,8,206,4],[166,9,206,5],[166,15,206,11],[167,10,207,6],[167,14,207,10],[167,15,207,11,"symbolicated"],[167,27,207,23],[167,28,207,24,"type"],[167,32,207,28],[167,33,207,29],[167,36,207,32],[168,12,208,8,"error"],[168,17,208,13],[168,19,208,15],[168,23,208,19],[169,12,209,8,"stack"],[169,17,209,13],[169,19,209,15],[169,23,209,19],[170,12,210,8,"status"],[170,18,210,14],[170,20,210,16],[171,10,211,6],[171,11,211,7],[172,8,212,4],[173,8,214,4],[173,12,214,10,"status"],[173,18,214,16],[173,21,214,19],[173,25,214,23],[173,26,214,24,"symbolicated"],[173,38,214,36],[173,39,214,37,"type"],[173,43,214,41],[173,44,214,42],[173,45,214,43,"status"],[173,51,214,49],[174,8,215,4],[174,12,215,8,"lastStatus"],[174,22,215,18],[174,27,215,23,"status"],[174,33,215,29],[174,35,215,31],[175,10,216,6],[175,14,216,10],[175,15,216,11],[175,25,216,21],[175,27,216,23],[175,35,216,31],[175,36,216,32],[175,37,216,33,"includes"],[175,45,216,41],[175,46,216,42,"status"],[175,52,216,48],[175,53,216,49],[175,55,216,51],[176,12,217,8],[176,16,217,12],[176,17,217,13,"flushCallbacks"],[176,31,217,27],[176,32,217,28,"type"],[176,36,217,32],[176,37,217,33],[177,10,218,6],[178,8,219,4],[179,6,220,2],[180,4,220,3],[181,2,220,3],[181,7,223,0],[182,2,224,0],[183,2,225,0],[183,11,225,9,"ensureStackFilesHaveParams"],[183,37,225,35,"ensureStackFilesHaveParams"],[183,38,225,36,"stack"],[183,43,225,48],[183,45,225,57],[184,4,226,2],[184,8,226,8,"currentSrc"],[184,18,226,18],[184,21,227,4],[184,28,227,11,"document"],[184,36,227,19],[184,41,227,24],[184,52,227,35],[184,56,227,39,"document"],[184,64,227,47],[184,65,227,48,"currentScript"],[184,78,227,61],[184,81,228,9],[184,86,228,14],[184,90,228,18,"document"],[184,98,228,26],[184,99,228,27,"currentScript"],[184,112,228,40],[184,116,228,44,"document"],[184,124,228,52],[184,125,228,53,"currentScript"],[184,138,228,66],[184,139,228,67,"src"],[184,142,228,70],[184,146,228,75],[184,150,228,79],[184,153,229,8],[184,157,229,12],[185,4,231,2],[185,8,231,8,"currentParams"],[185,21,231,21],[185,24,231,24,"currentSrc"],[185,34,231,34],[185,37,232,6],[185,41,232,10,"URLSearchParams"],[185,56,232,25],[185,57,232,26,"currentSrc"],[185,67,232,36],[185,68,232,37],[185,71,233,6],[185,75,233,10,"URLSearchParams"],[185,90,233,25],[185,91,233,26],[186,6,234,8,"platform"],[186,14,234,16],[186,16,234,18],[186,21,234,23],[187,6,235,8,"dev"],[187,9,235,11],[187,11,235,13,"String"],[187,17,235,19],[187,18,235,20,"__DEV__"],[187,25,235,27],[188,4,236,6],[188,5,236,7],[188,6,236,8],[189,4,238,2],[189,11,238,9,"stack"],[189,16,238,14],[189,17,238,15,"map"],[189,20,238,18],[189,21,238,20,"frame"],[189,26,238,25],[189,30,238,30],[190,6,239,4],[190,10,240,6],[190,11,240,7,"frame"],[190,16,240,12],[190,17,240,13,"file"],[190,21,240,17],[190,23,240,19,"startsWith"],[190,33,240,29],[190,34,240,30],[190,40,240,36],[190,41,240,37],[191,6,241,6],[192,6,242,6,"frame"],[192,11,242,11],[192,12,242,12,"file"],[192,16,242,16],[192,17,242,17,"includes"],[192,25,242,25],[192,26,242,26],[192,38,242,38],[192,39,242,39],[192,41,244,6],[192,48,244,13,"frame"],[192,53,244,18],[193,6,246,4],[193,10,246,10,"url"],[193,13,246,13],[193,16,246,16],[193,20,246,20,"URL"],[193,23,246,23],[193,24,246,24,"frame"],[193,29,246,29],[193,30,246,30,"file"],[193,34,246,34],[193,35,246,35],[194,6,247,4],[194,10,247,8,"url"],[194,13,247,11],[194,14,247,12,"searchParams"],[194,26,247,24],[194,27,247,25,"has"],[194,30,247,28],[194,31,247,29],[194,41,247,39],[194,42,247,40],[194,44,247,42],[195,8,248,6],[195,15,248,13,"frame"],[195,20,248,18],[196,6,249,4],[197,6,251,4,"currentParams"],[197,19,251,17],[197,20,251,18,"forEach"],[197,27,251,25],[197,28,251,26],[197,29,251,27,"value"],[197,34,251,32],[197,36,251,34,"key"],[197,39,251,37],[197,44,251,42],[198,8,252,6],[198,12,252,10,"url"],[198,15,252,13],[198,16,252,14,"searchParams"],[198,28,252,26],[198,29,252,27,"has"],[198,32,252,30],[198,33,252,31,"key"],[198,36,252,34],[198,37,252,35],[198,39,252,37],[199,8,253,6,"url"],[199,11,253,9],[199,12,253,10,"searchParams"],[199,24,253,22],[199,25,253,23,"set"],[199,28,253,26],[199,29,253,27,"key"],[199,32,253,30],[199,34,253,32,"value"],[199,39,253,37],[199,40,253,38],[200,6,254,4],[200,7,254,5],[200,8,254,6],[201,6,256,4],[201,13,256,11],[202,8,256,13],[202,11,256,16,"frame"],[202,16,256,21],[203,8,256,23,"file"],[203,12,256,27],[203,14,256,29,"url"],[203,17,256,32],[203,18,256,33,"toString"],[203,26,256,41],[203,27,256,42],[204,6,256,44],[204,7,256,45],[205,4,257,2],[205,5,257,3],[205,6,257,4],[206,2,258,0],[207,0,258,1],[207,3]],"functionMap":{"names":["<global>","componentStackToStack","componentStack.map$argument_0","LogBoxLog","constructor","incrementCount","getAvailableStack","flushCallbacks","pushCallback","retrySymbolicate","symbolicate","_symbolicate","getStack","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","ensureStackFilesHaveParams","stack.map$argument_0","currentParams.forEach$argument_0"],"mappings":"AAA;AC6B;4BCC;IDM;CDC;OGU;ECyB;GDe;EEE;GFE;EGE;GHK;EIE;GJS;EKE;GLO;EME;GNE;EOE;GPE;EQE;GRsB;ESI;GTQ;EUE;QCQ;SDE;QEC;SFE;GVG;EaE;GbqC;CHC;AiBI;mBCa;0BCa;KDG;GDG;CjBC"}},"type":"js/module"}]}