{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.formatProjectFilePath = formatProjectFilePath;\n  exports.getStackFormattedLocation = getStackFormattedLocation;\n  function formatProjectFilePath(projectRoot, file) {\n    if (file == null) {\n      return '<unknown>';\n    }\n    return pathRelativeToPath(file.replace(/\\\\/g, '/'), projectRoot.replace(/\\\\/g, '/')).replace(/\\?.*$/, '');\n  }\n  function pathRelativeToPath(path, relativeTo) {\n    var sep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/';\n    var relativeToParts = relativeTo.split(sep);\n    var pathParts = path.split(sep);\n    var i = 0;\n    while (i < relativeToParts.length && i < pathParts.length) {\n      if (relativeToParts[i] !== pathParts[i]) {\n        break;\n      }\n      i++;\n    }\n    return pathParts.slice(i).join(sep);\n  }\n  function getStackFormattedLocation(projectRoot, frame) {\n    var column = frame.column != null && parseInt(String(frame.column), 10);\n    var location = formatProjectFilePath(projectRoot, frame.file) + (frame.lineNumber != null ? ':' + frame.lineNumber + (column && !isNaN(column) ? ':' + (column + 1) : '') : '');\n    return location;\n  }\n});","lineCount":31,"map":[[7,2,5,7],[7,11,5,16,"formatProjectFilePath"],[7,32,5,37,"formatProjectFilePath"],[7,33,5,38,"projectRoot"],[7,44,5,57],[7,46,5,59,"file"],[7,50,5,79],[7,52,5,89],[8,4,6,2],[8,8,6,6,"file"],[8,12,6,10],[8,16,6,14],[8,20,6,18],[8,22,6,20],[9,6,7,4],[9,13,7,11],[9,24,7,22],[10,4,8,2],[11,4,10,2],[11,11,10,9,"pathRelativeToPath"],[11,29,10,27],[11,30,10,28,"file"],[11,34,10,32],[11,35,10,33,"replace"],[11,42,10,40],[11,43,10,41],[11,48,10,46],[11,50,10,48],[11,53,10,51],[11,54,10,52],[11,56,10,54,"projectRoot"],[11,67,10,65],[11,68,10,66,"replace"],[11,75,10,73],[11,76,10,74],[11,81,10,79],[11,83,10,81],[11,86,10,84],[11,87,10,85],[11,88,10,86],[11,89,10,87,"replace"],[11,96,10,94],[11,97,11,4],[11,104,11,11],[11,106,12,4],[11,108,13,2],[11,109,13,3],[12,2,14,0],[13,2,16,0],[13,11,16,9,"pathRelativeToPath"],[13,29,16,27,"pathRelativeToPath"],[13,30,16,28,"path"],[13,34,16,40],[13,36,16,42,"relativeTo"],[13,46,16,60],[13,48,16,73],[14,4,16,73],[14,8,16,62,"sep"],[14,11,16,65],[14,14,16,65,"arguments"],[14,23,16,65],[14,24,16,65,"length"],[14,30,16,65],[14,38,16,65,"arguments"],[14,47,16,65],[14,55,16,65,"undefined"],[14,64,16,65],[14,67,16,65,"arguments"],[14,76,16,65],[14,82,16,68],[14,85,16,71],[15,4,17,2],[15,8,17,8,"relativeToParts"],[15,23,17,23],[15,26,17,26,"relativeTo"],[15,36,17,36],[15,37,17,37,"split"],[15,42,17,42],[15,43,17,43,"sep"],[15,46,17,46],[15,47,17,47],[16,4,18,2],[16,8,18,8,"pathParts"],[16,17,18,17],[16,20,18,20,"path"],[16,24,18,24],[16,25,18,25,"split"],[16,30,18,30],[16,31,18,31,"sep"],[16,34,18,34],[16,35,18,35],[17,4,19,2],[17,8,19,6,"i"],[17,9,19,7],[17,12,19,10],[17,13,19,11],[18,4,20,2],[18,11,20,9,"i"],[18,12,20,10],[18,15,20,13,"relativeToParts"],[18,30,20,28],[18,31,20,29,"length"],[18,37,20,35],[18,41,20,39,"i"],[18,42,20,40],[18,45,20,43,"pathParts"],[18,54,20,52],[18,55,20,53,"length"],[18,61,20,59],[18,63,20,61],[19,6,21,4],[19,10,21,8,"relativeToParts"],[19,25,21,23],[19,26,21,24,"i"],[19,27,21,25],[19,28,21,26],[19,33,21,31,"pathParts"],[19,42,21,40],[19,43,21,41,"i"],[19,44,21,42],[19,45,21,43],[19,47,21,45],[20,8,22,6],[21,6,23,4],[22,6,24,4,"i"],[22,7,24,5],[22,9,24,7],[23,4,25,2],[24,4,26,2],[24,11,26,9,"pathParts"],[24,20,26,18],[24,21,26,19,"slice"],[24,26,26,24],[24,27,26,25,"i"],[24,28,26,26],[24,29,26,27],[24,30,26,28,"join"],[24,34,26,32],[24,35,26,33,"sep"],[24,38,26,36],[24,39,26,37],[25,2,27,0],[26,2,29,7],[26,11,29,16,"getStackFormattedLocation"],[26,36,29,41,"getStackFormattedLocation"],[26,37,29,42,"projectRoot"],[26,48,29,61],[26,50,29,63,"frame"],[26,55,29,85],[26,57,29,87],[27,4,30,2],[27,8,30,8,"column"],[27,14,30,14],[27,17,30,17,"frame"],[27,22,30,22],[27,23,30,23,"column"],[27,29,30,29],[27,33,30,33],[27,37,30,37],[27,41,30,41,"parseInt"],[27,49,30,49],[27,50,30,50,"String"],[27,56,30,56],[27,57,30,57,"frame"],[27,62,30,62],[27,63,30,63,"column"],[27,69,30,69],[27,70,30,70],[27,72,30,72],[27,74,30,74],[27,75,30,75],[28,4,31,2],[28,8,31,8,"location"],[28,16,31,16],[28,19,32,4,"formatProjectFilePath"],[28,40,32,25],[28,41,32,26,"projectRoot"],[28,52,32,37],[28,54,32,39,"frame"],[28,59,32,44],[28,60,32,45,"file"],[28,64,32,49],[28,65,32,50],[28,69,33,5,"frame"],[28,74,33,10],[28,75,33,11,"lineNumber"],[28,85,33,21],[28,89,33,25],[28,93,33,29],[28,96,34,8],[28,99,34,11],[28,102,34,14,"frame"],[28,107,34,19],[28,108,34,20,"lineNumber"],[28,118,34,30],[28,122,34,34,"column"],[28,128,34,40],[28,132,34,44],[28,133,34,45,"isNaN"],[28,138,34,50],[28,139,34,51,"column"],[28,145,34,57],[28,146,34,58],[28,149,34,61],[28,152,34,64],[28,156,34,68,"column"],[28,162,34,74],[28,165,34,77],[28,166,34,78],[28,167,34,79],[28,170,34,82],[28,172,34,84],[28,173,34,85],[28,176,35,8],[28,178,35,10],[28,179,35,11],[29,4,37,2],[29,11,37,9,"location"],[29,19,37,17],[30,2,38,0],[31,0,38,1],[31,3]],"functionMap":{"names":["<global>","formatProjectFilePath","pathRelativeToPath","getStackFormattedLocation"],"mappings":"AAA;OCI;CDS;AEE;CFW;OGE;CHS"}},"type":"js/module"}]}