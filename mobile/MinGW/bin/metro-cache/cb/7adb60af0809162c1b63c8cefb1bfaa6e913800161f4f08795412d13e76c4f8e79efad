{"dependencies":[{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var invariant = require(_dependencyMap[0], \"invariant\");\n  var levelsMap = {\n    log: 'log',\n    info: 'info',\n    warn: 'warn',\n    error: 'error',\n    fatal: 'error'\n  };\n  var warningHandler = null;\n  var RCTLog = {\n    logIfNoNativeHook(level) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (typeof global.nativeLoggingHook === 'undefined') {\n        RCTLog.logToConsole(level, ...args);\n      } else {\n        if (warningHandler && level === 'warn') {\n          warningHandler(...args);\n        }\n      }\n    },\n    logToConsole(level) {\n      var logFn = levelsMap[level];\n      invariant(logFn, 'Level \"' + level + '\" not one of ' + Object.keys(levelsMap).toString());\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      console[logFn](...args);\n    },\n    setWarningHandler(handler) {\n      warningHandler = handler;\n    }\n  };\n  module.exports = RCTLog;\n});","lineCount":39,"map":[[2,2,11,0],[2,14,11,12],[4,2,13,0],[4,6,13,6,"invariant"],[4,15,13,15],[4,18,13,18,"require"],[4,25,13,25],[4,26,13,25,"_dependencyMap"],[4,40,13,25],[4,56,13,37],[4,57,13,38],[5,2,15,0],[5,6,15,6,"levelsMap"],[5,15,15,15],[5,18,15,18],[6,4,16,2,"log"],[6,7,16,5],[6,9,16,7],[6,14,16,12],[7,4,17,2,"info"],[7,8,17,6],[7,10,17,8],[7,16,17,14],[8,4,18,2,"warn"],[8,8,18,6],[8,10,18,8],[8,16,18,14],[9,4,19,2,"error"],[9,9,19,7],[9,11,19,9],[9,18,19,16],[10,4,20,2,"fatal"],[10,9,20,7],[10,11,20,9],[11,2,21,0],[11,3,21,1],[12,2,23,0],[12,6,23,4,"warningHandler"],[12,20,23,46],[12,23,23,49],[12,27,23,53],[13,2,25,0],[13,6,25,6,"RCTLog"],[13,12,25,12],[13,15,25,15],[14,4,27,2,"logIfNoNativeHook"],[14,21,27,19,"logIfNoNativeHook"],[14,22,27,20,"level"],[14,27,27,33],[14,29,27,64],[15,6,27,64],[15,15,27,64,"_len"],[15,19,27,64],[15,22,27,64,"arguments"],[15,31,27,64],[15,32,27,64,"length"],[15,38,27,64],[15,40,27,38,"args"],[15,44,27,42],[15,51,27,42,"Array"],[15,56,27,42],[15,57,27,42,"_len"],[15,61,27,42],[15,68,27,42,"_len"],[15,72,27,42],[15,83,27,42,"_key"],[15,87,27,42],[15,93,27,42,"_key"],[15,97,27,42],[15,100,27,42,"_len"],[15,104,27,42],[15,106,27,42,"_key"],[15,110,27,42],[16,8,27,38,"args"],[16,12,27,42],[16,13,27,42,"_key"],[16,17,27,42],[16,25,27,42,"arguments"],[16,34,27,42],[16,35,27,42,"_key"],[16,39,27,42],[17,6,27,42],[18,6,29,4],[18,10,29,8],[18,17,29,15,"global"],[18,23,29,21],[18,24,29,22,"nativeLoggingHook"],[18,41,29,39],[18,46,29,44],[18,57,29,55],[18,59,29,57],[19,8,30,6,"RCTLog"],[19,14,30,12],[19,15,30,13,"logToConsole"],[19,27,30,25],[19,28,30,26,"level"],[19,33,30,31],[19,35,30,33],[19,38,30,36,"args"],[19,42,30,40],[19,43,30,41],[20,6,31,4],[20,7,31,5],[20,13,31,11],[21,8,33,6],[21,12,33,10,"warningHandler"],[21,26,33,24],[21,30,33,28,"level"],[21,35,33,33],[21,40,33,38],[21,46,33,44],[21,48,33,46],[22,10,34,8,"warningHandler"],[22,24,34,22],[22,25,34,23],[22,28,34,26,"args"],[22,32,34,30],[22,33,34,31],[23,8,35,6],[24,6,36,4],[25,4,37,2],[25,5,37,3],[26,4,40,2,"logToConsole"],[26,16,40,14,"logToConsole"],[26,17,40,15,"level"],[26,22,40,28],[26,24,40,59],[27,6,42,4],[27,10,42,10,"logFn"],[27,15,42,15],[27,18,42,18,"levelsMap"],[27,27,42,27],[27,28,42,28,"level"],[27,33,42,33],[27,34,42,34],[28,6,43,4,"invariant"],[28,15,43,13],[28,16,44,6,"logFn"],[28,21,44,11],[28,23,45,6],[28,32,45,15],[28,35,45,18,"level"],[28,40,45,23],[28,43,45,26],[28,58,45,41],[28,61,45,44,"Object"],[28,67,45,50],[28,68,45,51,"keys"],[28,72,45,55],[28,73,45,56,"levelsMap"],[28,82,45,65],[28,83,45,66],[28,84,45,67,"toString"],[28,92,45,75],[28,93,45,76],[28,94,46,4],[28,95,46,5],[29,6,46,6],[29,15,46,6,"_len2"],[29,20,46,6],[29,23,46,6,"arguments"],[29,32,46,6],[29,33,46,6,"length"],[29,39,46,6],[29,41,40,33,"args"],[29,45,40,37],[29,52,40,37,"Array"],[29,57,40,37],[29,58,40,37,"_len2"],[29,63,40,37],[29,70,40,37,"_len2"],[29,75,40,37],[29,86,40,37,"_key2"],[29,91,40,37],[29,97,40,37,"_key2"],[29,102,40,37],[29,105,40,37,"_len2"],[29,110,40,37],[29,112,40,37,"_key2"],[29,117,40,37],[30,8,40,33,"args"],[30,12,40,37],[30,13,40,37,"_key2"],[30,18,40,37],[30,26,40,37,"arguments"],[30,35,40,37],[30,36,40,37,"_key2"],[30,41,40,37],[31,6,40,37],[32,6,48,4,"console"],[32,13,48,11],[32,14,48,12,"logFn"],[32,19,48,17],[32,20,48,18],[32,21,48,19],[32,24,48,22,"args"],[32,28,48,26],[32,29,48,27],[33,4,49,2],[33,5,49,3],[34,4,51,2,"setWarningHandler"],[34,21,51,19,"setWarningHandler"],[34,22,51,20,"handler"],[34,29,51,50],[34,31,51,58],[35,6,52,4,"warningHandler"],[35,20,52,18],[35,23,52,21,"handler"],[35,30,52,28],[36,4,53,2],[37,2,54,0],[37,3,54,1],[38,2,56,0,"module"],[38,8,56,6],[38,9,56,7,"exports"],[38,16,56,14],[38,19,56,17,"RCTLog"],[38,25,56,23],[39,0,56,24],[39,3]],"functionMap":{"names":["<global>","logIfNoNativeHook","logToConsole","setWarningHandler"],"mappings":"AAA;EC0B;GDU;EEG;GFS;EGE;GHE"}},"type":"js/module"}]}