{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":69,"index":84}}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":85},"end":{"line":4,"column":31,"index":116}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScrollToTop = useScrollToTop;\n  var _core = require(_dependencyMap[0], \"@react-navigation/core\");\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      // This is already a scrollable node.\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      // If the view is a wrapper like FlatList, SectionList etc.\n      // We need to use `getScrollResponder` to get access to the scroll responder\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      // When a `ScrollView` is wrapped in `Animated.createAnimatedComponent`\n      // we need to use `getNode` to get the ref to the actual scrollview.\n      // Note that `getNode` is deprecated in newer versions of react-native\n      // this is why we check if we already have a scrollable node above.\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = React.useContext(_core.NavigationContext);\n    var route = (0, _core.useRoute)();\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n    }\n    React.useEffect(() => {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n      // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n      // So we need to find all the parent tab navigators and add the listeners there\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(tab => {\n        return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error the `tabPress` event is only available when navigation type is tab\n        'tabPress', e => {\n          // We should scroll to top only when the screen is focused\n          var isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return () => {\n        unsubscribers.forEach(unsubscribe => unsubscribe());\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":98,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useScrollToTop"],[7,24,1,13],[7,27,1,13,"useScrollToTop"],[7,41,1,13],[8,2,3,0],[8,6,3,0,"_core"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,4,0],[9,6,4,0,"React"],[9,11,4,0],[9,14,4,0,"_interopRequireWildcard"],[9,37,4,0],[9,38,4,0,"require"],[9,45,4,0],[9,46,4,0,"_dependencyMap"],[9,60,4,0],[10,2,4,31],[10,11,4,31,"_getRequireWildcardCache"],[10,36,4,31,"e"],[10,37,4,31],[10,66,4,31,"WeakMap"],[10,73,4,31],[10,92,4,31,"r"],[10,93,4,31],[10,100,4,31,"WeakMap"],[10,107,4,31],[10,111,4,31,"t"],[10,112,4,31],[10,119,4,31,"WeakMap"],[10,126,4,31],[10,138,4,31,"_getRequireWildcardCache"],[10,162,4,31],[10,174,4,31,"_getRequireWildcardCache"],[10,175,4,31,"e"],[10,176,4,31],[10,187,4,31,"e"],[10,188,4,31],[10,191,4,31,"t"],[10,192,4,31],[10,195,4,31,"r"],[10,196,4,31],[10,201,4,31,"e"],[10,202,4,31],[11,2,4,31],[11,11,4,31,"_interopRequireWildcard"],[11,35,4,31,"e"],[11,36,4,31],[11,38,4,31,"r"],[11,39,4,31],[11,48,4,31,"r"],[11,49,4,31],[11,53,4,31,"e"],[11,54,4,31],[11,58,4,31,"e"],[11,59,4,31],[11,60,4,31,"__esModule"],[11,70,4,31],[11,79,4,31,"e"],[11,80,4,31],[11,95,4,31,"e"],[11,96,4,31],[11,119,4,31,"e"],[11,120,4,31],[11,145,4,31,"e"],[11,146,4,31],[11,157,4,31,"default"],[11,164,4,31],[11,166,4,31,"e"],[11,167,4,31],[11,175,4,31,"t"],[11,176,4,31],[11,179,4,31,"_getRequireWildcardCache"],[11,203,4,31],[11,204,4,31,"r"],[11,205,4,31],[11,212,4,31,"t"],[11,213,4,31],[11,217,4,31,"t"],[11,218,4,31],[11,219,4,31,"has"],[11,222,4,31],[11,223,4,31,"e"],[11,224,4,31],[11,234,4,31,"t"],[11,235,4,31],[11,236,4,31,"get"],[11,239,4,31],[11,240,4,31,"e"],[11,241,4,31],[11,248,4,31,"n"],[11,249,4,31],[11,254,4,31,"__proto__"],[11,263,4,31],[11,273,4,31,"a"],[11,274,4,31],[11,277,4,31,"Object"],[11,283,4,31],[11,284,4,31,"defineProperty"],[11,298,4,31],[11,302,4,31,"Object"],[11,308,4,31],[11,309,4,31,"getOwnPropertyDescriptor"],[11,333,4,31],[11,344,4,31,"u"],[11,345,4,31],[11,349,4,31,"e"],[11,350,4,31],[11,370,4,31,"u"],[11,371,4,31],[11,378,4,31,"hasOwnProperty"],[11,392,4,31],[11,393,4,31,"call"],[11,397,4,31],[11,398,4,31,"e"],[11,399,4,31],[11,401,4,31,"u"],[11,402,4,31],[11,411,4,31,"i"],[11,412,4,31],[11,415,4,31,"a"],[11,416,4,31],[11,419,4,31,"Object"],[11,425,4,31],[11,426,4,31,"getOwnPropertyDescriptor"],[11,450,4,31],[11,451,4,31,"e"],[11,452,4,31],[11,454,4,31,"u"],[11,455,4,31],[11,465,4,31,"i"],[11,466,4,31],[11,471,4,31,"i"],[11,472,4,31],[11,473,4,31,"get"],[11,476,4,31],[11,480,4,31,"i"],[11,481,4,31],[11,482,4,31,"set"],[11,485,4,31],[11,489,4,31,"Object"],[11,495,4,31],[11,496,4,31,"defineProperty"],[11,510,4,31],[11,511,4,31,"n"],[11,512,4,31],[11,514,4,31,"u"],[11,515,4,31],[11,517,4,31,"i"],[11,518,4,31],[11,522,4,31,"n"],[11,523,4,31],[11,524,4,31,"u"],[11,525,4,31],[11,529,4,31,"e"],[11,530,4,31],[11,531,4,31,"u"],[11,532,4,31],[11,544,4,31,"n"],[11,545,4,31],[11,546,4,31,"default"],[11,553,4,31],[11,556,4,31,"e"],[11,557,4,31],[11,559,4,31,"t"],[11,560,4,31],[11,564,4,31,"t"],[11,565,4,31],[11,566,4,31,"set"],[11,569,4,31],[11,570,4,31,"e"],[11,571,4,31],[11,573,4,31,"n"],[11,574,4,31],[11,577,4,31,"n"],[11,578,4,31],[12,2,5,0],[12,11,5,9,"getScrollableNode"],[12,28,5,26,"getScrollableNode"],[12,29,5,27,"ref"],[12,32,5,30],[12,34,5,32],[13,4,6,2],[13,8,6,6,"ref"],[13,11,6,9],[13,12,6,10,"current"],[13,19,6,17],[13,23,6,21],[13,27,6,25],[13,29,6,27],[14,6,7,4],[14,13,7,11],[14,17,7,15],[15,4,8,2],[16,4,9,2],[16,8,9,6],[16,21,9,19],[16,25,9,23,"ref"],[16,28,9,26],[16,29,9,27,"current"],[16,36,9,34],[16,40,9,38],[16,50,9,48],[16,54,9,52,"ref"],[16,57,9,55],[16,58,9,56,"current"],[16,65,9,63],[16,69,9,67],[16,85,9,83],[16,89,9,87,"ref"],[16,92,9,90],[16,93,9,91,"current"],[16,100,9,98],[16,104,9,102],[16,129,9,127],[16,133,9,131,"ref"],[16,136,9,134],[16,137,9,135,"current"],[16,144,9,142],[16,146,9,144],[17,6,10,4],[18,6,11,4],[18,13,11,11,"ref"],[18,16,11,14],[18,17,11,15,"current"],[18,24,11,22],[19,4,12,2],[19,5,12,3],[19,11,12,9],[19,15,12,13],[19,35,12,33],[19,39,12,37,"ref"],[19,42,12,40],[19,43,12,41,"current"],[19,50,12,48],[19,52,12,50],[20,6,13,4],[21,6,14,4],[22,6,15,4],[22,13,15,11,"ref"],[22,16,15,14],[22,17,15,15,"current"],[22,24,15,22],[22,25,15,23,"getScrollResponder"],[22,43,15,41],[22,44,15,42],[22,45,15,43],[23,4,16,2],[23,5,16,3],[23,11,16,9],[23,15,16,13],[23,24,16,22],[23,28,16,26,"ref"],[23,31,16,29],[23,32,16,30,"current"],[23,39,16,37],[23,41,16,39],[24,6,17,4],[25,6,18,4],[26,6,19,4],[27,6,20,4],[28,6,21,4],[28,13,21,11,"ref"],[28,16,21,14],[28,17,21,15,"current"],[28,24,21,22],[28,25,21,23,"getNode"],[28,32,21,30],[28,33,21,31],[28,34,21,32],[29,4,22,2],[29,5,22,3],[29,11,22,9],[30,6,23,4],[30,13,23,11,"ref"],[30,16,23,14],[30,17,23,15,"current"],[30,24,23,22],[31,4,24,2],[32,2,25,0],[33,2,26,7],[33,11,26,16,"useScrollToTop"],[33,25,26,30,"useScrollToTop"],[33,26,26,31,"ref"],[33,29,26,34],[33,31,26,36],[34,4,27,2],[34,8,27,8,"navigation"],[34,18,27,18],[34,21,27,21,"React"],[34,26,27,26],[34,27,27,27,"useContext"],[34,37,27,37],[34,38,27,38,"NavigationContext"],[34,61,27,55],[34,62,27,56],[35,4,28,2],[35,8,28,8,"route"],[35,13,28,13],[35,16,28,16],[35,20,28,16,"useRoute"],[35,34,28,24],[35,36,28,25],[35,37,28,26],[36,4,29,2],[36,8,29,6,"navigation"],[36,18,29,16],[36,23,29,21,"undefined"],[36,32,29,30],[36,34,29,32],[37,6,30,4],[37,12,30,10],[37,16,30,14,"Error"],[37,21,30,19],[37,22,30,20],[37,104,30,102],[37,105,30,103],[38,4,31,2],[39,4,32,2,"React"],[39,9,32,7],[39,10,32,8,"useEffect"],[39,19,32,17],[39,20,32,18],[39,26,32,24],[40,6,33,4],[40,10,33,10,"tabNavigations"],[40,24,33,24],[40,27,33,27],[40,29,33,29],[41,6,34,4],[41,10,34,8,"currentNavigation"],[41,27,34,25],[41,30,34,28,"navigation"],[41,40,34,38],[42,6,35,4],[43,6,36,4],[44,6,37,4],[44,13,37,11,"currentNavigation"],[44,30,37,28],[44,32,37,30],[45,8,38,6],[45,12,38,10,"currentNavigation"],[45,29,38,27],[45,30,38,28,"getState"],[45,38,38,36],[45,39,38,37],[45,40,38,38],[45,41,38,39,"type"],[45,45,38,43],[45,50,38,48],[45,55,38,53],[45,57,38,55],[46,10,39,8,"tabNavigations"],[46,24,39,22],[46,25,39,23,"push"],[46,29,39,27],[46,30,39,28,"currentNavigation"],[46,47,39,45],[46,48,39,46],[47,8,40,6],[48,8,41,6,"currentNavigation"],[48,25,41,23],[48,28,41,26,"currentNavigation"],[48,45,41,43],[48,46,41,44,"getParent"],[48,55,41,53],[48,56,41,54],[48,57,41,55],[49,6,42,4],[50,6,43,4],[50,10,43,8,"tabNavigations"],[50,24,43,22],[50,25,43,23,"length"],[50,31,43,29],[50,36,43,34],[50,37,43,35],[50,39,43,37],[51,8,44,6],[52,6,45,4],[53,6,46,4],[53,10,46,10,"unsubscribers"],[53,23,46,23],[53,26,46,26,"tabNavigations"],[53,40,46,40],[53,41,46,41,"map"],[53,44,46,44],[53,45,46,45,"tab"],[53,48,46,48],[53,52,46,52],[54,8,47,6],[54,15,47,13,"tab"],[54,18,47,16],[54,19,47,17,"addListener"],[54,30,47,28],[55,8,48,6],[56,8,49,6],[57,8,50,6],[58,8,51,6],[58,18,51,16],[58,20,51,18,"e"],[58,21,51,19],[58,25,51,23],[59,10,52,8],[60,10,53,8],[60,14,53,14,"isFocused"],[60,23,53,23],[60,26,53,26,"navigation"],[60,36,53,36],[60,37,53,37,"isFocused"],[60,46,53,46],[60,47,53,47],[60,48,53,48],[62,10,55,8],[63,10,56,8],[64,10,57,8],[64,14,57,14,"isFirst"],[64,21,57,21],[64,24,57,24,"tabNavigations"],[64,38,57,38],[64,39,57,39,"includes"],[64,47,57,47],[64,48,57,48,"navigation"],[64,58,57,58],[64,59,57,59],[64,63,57,63,"navigation"],[64,73,57,73],[64,74,57,74,"getState"],[64,82,57,82],[64,83,57,83],[64,84,57,84],[64,85,57,85,"routes"],[64,91,57,91],[64,92,57,92],[64,93,57,93],[64,94,57,94],[64,95,57,95,"key"],[64,98,57,98],[64,103,57,103,"route"],[64,108,57,108],[64,109,57,109,"key"],[64,112,57,112],[66,10,59,8],[67,10,60,8],[68,10,61,8,"requestAnimationFrame"],[68,31,61,29],[68,32,61,30],[68,38,61,36],[69,12,62,10],[69,16,62,16,"scrollable"],[69,26,62,26],[69,29,62,29,"getScrollableNode"],[69,46,62,46],[69,47,62,47,"ref"],[69,50,62,50],[69,51,62,51],[70,12,63,10],[70,16,63,14,"isFocused"],[70,25,63,23],[70,29,63,27,"isFirst"],[70,36,63,34],[70,40,63,38,"scrollable"],[70,50,63,48],[70,54,63,52],[70,55,63,53,"e"],[70,56,63,54],[70,57,63,55,"defaultPrevented"],[70,73,63,71],[70,75,63,73],[71,14,64,12],[71,18,64,16],[71,31,64,29],[71,35,64,33,"scrollable"],[71,45,64,43],[71,47,64,45],[72,16,65,14,"scrollable"],[72,26,65,24],[72,27,65,25,"scrollToTop"],[72,38,65,36],[72,39,65,37],[72,40,65,38],[73,14,66,12],[73,15,66,13],[73,21,66,19],[73,25,66,23],[73,35,66,33],[73,39,66,37,"scrollable"],[73,49,66,47],[73,51,66,49],[74,16,67,14,"scrollable"],[74,26,67,24],[74,27,67,25,"scrollTo"],[74,35,67,33],[74,36,67,34],[75,18,68,16,"y"],[75,19,68,17],[75,21,68,19],[75,22,68,20],[76,18,69,16,"animated"],[76,26,69,24],[76,28,69,26],[77,16,70,14],[77,17,70,15],[77,18,70,16],[78,14,71,12],[78,15,71,13],[78,21,71,19],[78,25,71,23],[78,41,71,39],[78,45,71,43,"scrollable"],[78,55,71,53],[78,57,71,55],[79,16,72,14,"scrollable"],[79,26,72,24],[79,27,72,25,"scrollToOffset"],[79,41,72,39],[79,42,72,40],[80,18,73,16,"offset"],[80,24,73,22],[80,26,73,24],[80,27,73,25],[81,18,74,16,"animated"],[81,26,74,24],[81,28,74,26],[82,16,75,14],[82,17,75,15],[82,18,75,16],[83,14,76,12],[83,15,76,13],[83,21,76,19],[83,25,76,23],[83,50,76,48],[83,54,76,52,"scrollable"],[83,64,76,62],[83,66,76,64],[84,16,77,14,"scrollable"],[84,26,77,24],[84,27,77,25,"scrollResponderScrollTo"],[84,50,77,48],[84,51,77,49],[85,18,78,16,"y"],[85,19,78,17],[85,21,78,19],[85,22,78,20],[86,18,79,16,"animated"],[86,26,79,24],[86,28,79,26],[87,16,80,14],[87,17,80,15],[87,18,80,16],[88,14,81,12],[89,12,82,10],[90,10,83,8],[90,11,83,9],[90,12,83,10],[91,8,84,6],[91,9,84,7],[91,10,84,8],[92,6,85,4],[92,7,85,5],[92,8,85,6],[93,6,86,4],[93,13,86,11],[93,19,86,17],[94,8,87,6,"unsubscribers"],[94,21,87,19],[94,22,87,20,"forEach"],[94,29,87,27],[94,30,87,28,"unsubscribe"],[94,41,87,39],[94,45,87,43,"unsubscribe"],[94,56,87,54],[94,57,87,55],[94,58,87,56],[94,59,87,57],[95,6,88,4],[95,7,88,5],[96,4,89,2],[96,5,89,3],[96,7,89,5],[96,8,89,6,"navigation"],[96,18,89,16],[96,20,89,18,"ref"],[96,23,89,21],[96,25,89,23,"route"],[96,30,89,28],[96,31,89,29,"key"],[96,34,89,32],[96,35,89,33],[96,36,89,34],[97,2,90,0],[98,0,90,1],[98,3]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACI;CDoB;OEC;kBCM;6CCc;kBCK;8BCU;SDsB;ODC;KDC;WIC;4BCC,4BD;KJC;GDC;CFC"}},"type":"js/module"}]}