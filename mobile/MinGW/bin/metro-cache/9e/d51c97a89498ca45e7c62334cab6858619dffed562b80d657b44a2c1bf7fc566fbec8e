{"dependencies":[{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":199},"end":{"line":10,"column":31,"index":230}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = mergeRefs;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  function mergeRefs() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return function forwardRef(node) {\n      args.forEach(ref => {\n        if (ref == null) {\n          return;\n        }\n        if (typeof ref === 'function') {\n          ref(node);\n          return;\n        }\n        if (typeof ref === 'object') {\n          ref.current = node;\n          return;\n        }\n        console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n      });\n    };\n  }\n});","lineCount":39,"map":[[6,2,10,0],[6,6,10,0,"React"],[6,11,10,0],[6,14,10,0,"_interopRequireWildcard"],[6,37,10,0],[6,38,10,0,"require"],[6,45,10,0],[6,46,10,0,"_dependencyMap"],[6,60,10,0],[7,2,10,31],[7,11,10,31,"_getRequireWildcardCache"],[7,36,10,31,"e"],[7,37,10,31],[7,66,10,31,"WeakMap"],[7,73,10,31],[7,92,10,31,"r"],[7,93,10,31],[7,100,10,31,"WeakMap"],[7,107,10,31],[7,111,10,31,"t"],[7,112,10,31],[7,119,10,31,"WeakMap"],[7,126,10,31],[7,138,10,31,"_getRequireWildcardCache"],[7,162,10,31],[7,174,10,31,"_getRequireWildcardCache"],[7,175,10,31,"e"],[7,176,10,31],[7,187,10,31,"e"],[7,188,10,31],[7,191,10,31,"t"],[7,192,10,31],[7,195,10,31,"r"],[7,196,10,31],[7,201,10,31,"e"],[7,202,10,31],[8,2,10,31],[8,11,10,31,"_interopRequireWildcard"],[8,35,10,31,"e"],[8,36,10,31],[8,38,10,31,"r"],[8,39,10,31],[8,48,10,31,"r"],[8,49,10,31],[8,53,10,31,"e"],[8,54,10,31],[8,58,10,31,"e"],[8,59,10,31],[8,60,10,31,"__esModule"],[8,70,10,31],[8,79,10,31,"e"],[8,80,10,31],[8,95,10,31,"e"],[8,96,10,31],[8,119,10,31,"e"],[8,120,10,31],[8,145,10,31,"e"],[8,146,10,31],[8,157,10,31,"default"],[8,164,10,31],[8,166,10,31,"e"],[8,167,10,31],[8,175,10,31,"t"],[8,176,10,31],[8,179,10,31,"_getRequireWildcardCache"],[8,203,10,31],[8,204,10,31,"r"],[8,205,10,31],[8,212,10,31,"t"],[8,213,10,31],[8,217,10,31,"t"],[8,218,10,31],[8,219,10,31,"has"],[8,222,10,31],[8,223,10,31,"e"],[8,224,10,31],[8,234,10,31,"t"],[8,235,10,31],[8,236,10,31,"get"],[8,239,10,31],[8,240,10,31,"e"],[8,241,10,31],[8,248,10,31,"n"],[8,249,10,31],[8,254,10,31,"__proto__"],[8,263,10,31],[8,273,10,31,"a"],[8,274,10,31],[8,277,10,31,"Object"],[8,283,10,31],[8,284,10,31,"defineProperty"],[8,298,10,31],[8,302,10,31,"Object"],[8,308,10,31],[8,309,10,31,"getOwnPropertyDescriptor"],[8,333,10,31],[8,344,10,31,"u"],[8,345,10,31],[8,349,10,31,"e"],[8,350,10,31],[8,370,10,31,"u"],[8,371,10,31],[8,378,10,31,"hasOwnProperty"],[8,392,10,31],[8,393,10,31,"call"],[8,397,10,31],[8,398,10,31,"e"],[8,399,10,31],[8,401,10,31,"u"],[8,402,10,31],[8,411,10,31,"i"],[8,412,10,31],[8,415,10,31,"a"],[8,416,10,31],[8,419,10,31,"Object"],[8,425,10,31],[8,426,10,31,"getOwnPropertyDescriptor"],[8,450,10,31],[8,451,10,31,"e"],[8,452,10,31],[8,454,10,31,"u"],[8,455,10,31],[8,465,10,31,"i"],[8,466,10,31],[8,471,10,31,"i"],[8,472,10,31],[8,473,10,31,"get"],[8,476,10,31],[8,480,10,31,"i"],[8,481,10,31],[8,482,10,31,"set"],[8,485,10,31],[8,489,10,31,"Object"],[8,495,10,31],[8,496,10,31,"defineProperty"],[8,510,10,31],[8,511,10,31,"n"],[8,512,10,31],[8,514,10,31,"u"],[8,515,10,31],[8,517,10,31,"i"],[8,518,10,31],[8,522,10,31,"n"],[8,523,10,31],[8,524,10,31,"u"],[8,525,10,31],[8,529,10,31,"e"],[8,530,10,31],[8,531,10,31,"u"],[8,532,10,31],[8,544,10,31,"n"],[8,545,10,31],[8,546,10,31,"default"],[8,553,10,31],[8,556,10,31,"e"],[8,557,10,31],[8,559,10,31,"t"],[8,560,10,31],[8,564,10,31,"t"],[8,565,10,31],[8,566,10,31,"set"],[8,569,10,31],[8,570,10,31,"e"],[8,571,10,31],[8,573,10,31,"n"],[8,574,10,31],[8,577,10,31,"n"],[8,578,10,31],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[18,2,11,15],[18,11,11,24,"mergeRefs"],[18,20,11,33,"mergeRefs"],[18,21,11,33],[18,23,11,36],[19,4,12,2],[19,9,12,7],[19,13,12,11,"_len"],[19,17,12,15],[19,20,12,18,"arguments"],[19,29,12,27],[19,30,12,28,"length"],[19,36,12,34],[19,38,12,36,"args"],[19,42,12,40],[19,45,12,43],[19,49,12,47,"Array"],[19,54,12,52],[19,55,12,53,"_len"],[19,59,12,57],[19,60,12,58],[19,62,12,60,"_key"],[19,66,12,64],[19,69,12,67],[19,70,12,68],[19,72,12,70,"_key"],[19,76,12,74],[19,79,12,77,"_len"],[19,83,12,81],[19,85,12,83,"_key"],[19,89,12,87],[19,91,12,89],[19,93,12,91],[20,6,13,4,"args"],[20,10,13,8],[20,11,13,9,"_key"],[20,15,13,13],[20,16,13,14],[20,19,13,17,"arguments"],[20,28,13,26],[20,29,13,27,"_key"],[20,33,13,31],[20,34,13,32],[21,4,14,2],[22,4,15,2],[22,11,15,9],[22,20,15,18,"forwardRef"],[22,30,15,28,"forwardRef"],[22,31,15,29,"node"],[22,35,15,33],[22,37,15,35],[23,6,16,4,"args"],[23,10,16,8],[23,11,16,9,"forEach"],[23,18,16,16],[23,19,16,17,"ref"],[23,22,16,20],[23,26,16,24],[24,8,17,6],[24,12,17,10,"ref"],[24,15,17,13],[24,19,17,17],[24,23,17,21],[24,25,17,23],[25,10,18,8],[26,8,19,6],[27,8,20,6],[27,12,20,10],[27,19,20,17,"ref"],[27,22,20,20],[27,27,20,25],[27,37,20,35],[27,39,20,37],[28,10,21,8,"ref"],[28,13,21,11],[28,14,21,12,"node"],[28,18,21,16],[28,19,21,17],[29,10,22,8],[30,8,23,6],[31,8,24,6],[31,12,24,10],[31,19,24,17,"ref"],[31,22,24,20],[31,27,24,25],[31,35,24,33],[31,37,24,35],[32,10,25,8,"ref"],[32,13,25,11],[32,14,25,12,"current"],[32,21,25,19],[32,24,25,22,"node"],[32,28,25,26],[33,10,26,8],[34,8,27,6],[35,8,28,6,"console"],[35,15,28,13],[35,16,28,14,"error"],[35,21,28,19],[35,22,28,20],[35,101,28,99],[35,104,28,102,"String"],[35,110,28,108],[35,111,28,109,"ref"],[35,114,28,112],[35,115,28,113],[35,116,28,114],[36,6,29,4],[36,7,29,5],[36,8,29,6],[37,4,30,2],[37,5,30,3],[38,2,31,0],[39,0,31,1],[39,3]],"functionMap":{"names":["<global>","mergeRefs","forwardRef","args.forEach$argument_0"],"mappings":"AAA;eCU;SCI;iBCC;KDa;GDC"}},"type":"js/module"}]}