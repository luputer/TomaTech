{"dependencies":[{"name":"@react-navigation/routers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"vzJhU8p+EXFUpX28ANa6h4NbBWk="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"./NavigationBuilderContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":73,"index":179}}],"key":"wXMcIJWUD66R6uBdlKglbjBdJPs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationCache = useNavigationCache;\n  var _routers = require(_dependencyMap[0], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[1], \"react\"));\n  var _NavigationBuilderContext = require(_dependencyMap[2], \"./NavigationBuilderContext.js\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Hook to cache navigation objects for each screen in the navigator.\n   * It's important to cache them to make sure navigation objects don't change between renders.\n   * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n   */\n  function useNavigationCache({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter\n  }) {\n    const {\n      stackRef\n    } = React.useContext(_NavigationBuilderContext.NavigationBuilderContext);\n    const base = React.useMemo(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {\n        emit,\n        ...rest\n      } = navigation;\n      const actions = {\n        ...router.actionCreators,\n        ..._routers.CommonActions\n      };\n      const dispatch = () => {\n        throw new Error('Actions cannot be dispatched from a placeholder screen.');\n      };\n      const helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = dispatch;\n        return acc;\n      }, {});\n      return {\n        ...rest,\n        ...helpers,\n        addListener: () => {\n          // Event listeners are not supported for placeholder screens\n\n          return () => {\n            // Empty function\n          };\n        },\n        removeListener: () => {\n          // Event listeners are not supported for placeholder screens\n        },\n        dispatch,\n        getParent: id => {\n          if (id !== undefined && id === rest.getId()) {\n            return base;\n          }\n          return rest.getParent(id);\n        },\n        setOptions: () => {\n          throw new Error('Options cannot be set from a placeholder screen.');\n        },\n        isFocused: () => false\n      };\n    }, [navigation, router.actionCreators]);\n\n    // Cache object which holds navigation objects for each screen\n    // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n    // In reality, these deps will rarely change, if ever\n    const cache = React.useMemo(() => ({\n      current: {}\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [base, getState, navigation, setOptions, emitter]);\n    cache.current = state.routes.reduce((acc, route) => {\n      const previous = cache.current[route.key];\n      if (previous) {\n        // If a cached navigation object already exists, reuse it\n        acc[route.key] = previous;\n      } else {\n        const dispatch = thunk => {\n          const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n          if (action != null) {\n            navigation.dispatch({\n              source: route.key,\n              ...action\n            });\n          }\n        };\n        const withStack = callback => {\n          let isStackSet = false;\n          try {\n            if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n              // Capture the stack trace for devtools\n              stackRef.current = new Error().stack;\n              isStackSet = true;\n            }\n            callback();\n          } finally {\n            if (isStackSet && stackRef) {\n              stackRef.current = undefined;\n            }\n          }\n        };\n        const actions = {\n          ...router.actionCreators,\n          ..._routers.CommonActions\n        };\n        const helpers = Object.keys(actions).reduce((acc, name) => {\n          acc[name] = (...args) => withStack(() =>\n          // @ts-expect-error: name is a valid key, but TypeScript is dumb\n          dispatch(actions[name](...args)));\n          return acc;\n        }, {});\n        acc[route.key] = {\n          ...base,\n          ...helpers,\n          // FIXME: too much work to fix the types for now\n          ...emitter.create(route.key),\n          dispatch: thunk => withStack(() => dispatch(thunk)),\n          getParent: id => {\n            if (id !== undefined && id === base.getId()) {\n              // If the passed id is the same as the current navigation id,\n              // we return the cached navigation object for the relevant route\n              return acc[route.key];\n            }\n            return base.getParent(id);\n          },\n          setOptions: options => {\n            setOptions(o => ({\n              ...o,\n              [route.key]: {\n                ...o[route.key],\n                ...options\n              }\n            }));\n          },\n          isFocused: () => {\n            const state = base.getState();\n            if (state.routes[state.index].key !== route.key) {\n              return false;\n            }\n\n            // If the current screen is focused, we also need to check if parent navigator is focused\n            // This makes sure that we return the focus state in the whole tree, not just this navigator\n            return navigation ? navigation.isFocused() : true;\n          }\n        };\n      }\n      return acc;\n    }, {});\n    return {\n      base,\n      navigations: cache.current\n    };\n  }\n});","lineCount":163,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useNavigationCache"],[7,28,1,13],[7,31,1,13,"useNavigationCache"],[7,49,1,13],[8,2,3,0],[8,6,3,0,"_routers"],[8,14,3,0],[8,17,3,0,"require"],[8,24,3,0],[8,25,3,0,"_dependencyMap"],[8,39,3,0],[9,2,4,0],[9,6,4,0,"React"],[9,11,4,0],[9,14,4,0,"_interopRequireWildcard"],[9,37,4,0],[9,38,4,0,"require"],[9,45,4,0],[9,46,4,0,"_dependencyMap"],[9,60,4,0],[10,2,5,0],[10,6,5,0,"_NavigationBuilderContext"],[10,31,5,0],[10,34,5,0,"require"],[10,41,5,0],[10,42,5,0,"_dependencyMap"],[10,56,5,0],[11,2,5,73],[11,11,5,73,"_getRequireWildcardCache"],[11,36,5,73,"e"],[11,37,5,73],[11,66,5,73,"WeakMap"],[11,73,5,73],[11,92,5,73,"r"],[11,93,5,73],[11,100,5,73,"WeakMap"],[11,107,5,73],[11,111,5,73,"t"],[11,112,5,73],[11,119,5,73,"WeakMap"],[11,126,5,73],[11,138,5,73,"_getRequireWildcardCache"],[11,162,5,73],[11,174,5,73,"_getRequireWildcardCache"],[11,175,5,73,"e"],[11,176,5,73],[11,187,5,73,"e"],[11,188,5,73],[11,191,5,73,"t"],[11,192,5,73],[11,195,5,73,"r"],[11,196,5,73],[11,201,5,73,"e"],[11,202,5,73],[12,2,5,73],[12,11,5,73,"_interopRequireWildcard"],[12,35,5,73,"e"],[12,36,5,73],[12,38,5,73,"r"],[12,39,5,73],[12,48,5,73,"r"],[12,49,5,73],[12,53,5,73,"e"],[12,54,5,73],[12,58,5,73,"e"],[12,59,5,73],[12,60,5,73,"__esModule"],[12,70,5,73],[12,79,5,73,"e"],[12,80,5,73],[12,95,5,73,"e"],[12,96,5,73],[12,119,5,73,"e"],[12,120,5,73],[12,145,5,73,"e"],[12,146,5,73],[12,157,5,73,"default"],[12,164,5,73],[12,166,5,73,"e"],[12,167,5,73],[12,175,5,73,"t"],[12,176,5,73],[12,179,5,73,"_getRequireWildcardCache"],[12,203,5,73],[12,204,5,73,"r"],[12,205,5,73],[12,212,5,73,"t"],[12,213,5,73],[12,217,5,73,"t"],[12,218,5,73],[12,219,5,73,"has"],[12,222,5,73],[12,223,5,73,"e"],[12,224,5,73],[12,234,5,73,"t"],[12,235,5,73],[12,236,5,73,"get"],[12,239,5,73],[12,240,5,73,"e"],[12,241,5,73],[12,248,5,73,"n"],[12,249,5,73],[12,254,5,73,"__proto__"],[12,263,5,73],[12,273,5,73,"a"],[12,274,5,73],[12,277,5,73,"Object"],[12,283,5,73],[12,284,5,73,"defineProperty"],[12,298,5,73],[12,302,5,73,"Object"],[12,308,5,73],[12,309,5,73,"getOwnPropertyDescriptor"],[12,333,5,73],[12,344,5,73,"u"],[12,345,5,73],[12,349,5,73,"e"],[12,350,5,73],[12,370,5,73,"u"],[12,371,5,73],[12,378,5,73,"hasOwnProperty"],[12,392,5,73],[12,393,5,73,"call"],[12,397,5,73],[12,398,5,73,"e"],[12,399,5,73],[12,401,5,73,"u"],[12,402,5,73],[12,411,5,73,"i"],[12,412,5,73],[12,415,5,73,"a"],[12,416,5,73],[12,419,5,73,"Object"],[12,425,5,73],[12,426,5,73,"getOwnPropertyDescriptor"],[12,450,5,73],[12,451,5,73,"e"],[12,452,5,73],[12,454,5,73,"u"],[12,455,5,73],[12,465,5,73,"i"],[12,466,5,73],[12,471,5,73,"i"],[12,472,5,73],[12,473,5,73,"get"],[12,476,5,73],[12,480,5,73,"i"],[12,481,5,73],[12,482,5,73,"set"],[12,485,5,73],[12,489,5,73,"Object"],[12,495,5,73],[12,496,5,73,"defineProperty"],[12,510,5,73],[12,511,5,73,"n"],[12,512,5,73],[12,514,5,73,"u"],[12,515,5,73],[12,517,5,73,"i"],[12,518,5,73],[12,522,5,73,"n"],[12,523,5,73],[12,524,5,73,"u"],[12,525,5,73],[12,529,5,73,"e"],[12,530,5,73],[12,531,5,73,"u"],[12,532,5,73],[12,544,5,73,"n"],[12,545,5,73],[12,546,5,73,"default"],[12,553,5,73],[12,556,5,73,"e"],[12,557,5,73],[12,559,5,73,"t"],[12,560,5,73],[12,564,5,73,"t"],[12,565,5,73],[12,566,5,73,"set"],[12,569,5,73],[12,570,5,73,"e"],[12,571,5,73],[12,573,5,73,"n"],[12,574,5,73],[12,577,5,73,"n"],[12,578,5,73],[13,2,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,2,11,7],[18,11,11,16,"useNavigationCache"],[18,29,11,34,"useNavigationCache"],[18,30,11,35],[19,4,12,2,"state"],[19,9,12,7],[20,4,13,2,"getState"],[20,12,13,10],[21,4,14,2,"navigation"],[21,14,14,12],[22,4,15,2,"setOptions"],[22,14,15,12],[23,4,16,2,"router"],[23,10,16,8],[24,4,17,2,"emitter"],[25,2,18,0],[25,3,18,1],[25,5,18,3],[26,4,19,2],[26,10,19,8],[27,6,20,4,"stackRef"],[28,4,21,2],[28,5,21,3],[28,8,21,6,"React"],[28,13,21,11],[28,14,21,12,"useContext"],[28,24,21,22],[28,25,21,23,"NavigationBuilderContext"],[28,75,21,47],[28,76,21,48],[29,4,22,2],[29,10,22,8,"base"],[29,14,22,12],[29,17,22,15,"React"],[29,22,22,20],[29,23,22,21,"useMemo"],[29,30,22,28],[29,31,22,29],[29,37,22,35],[30,6,23,4],[31,6,24,4],[31,12,24,10],[32,8,25,6,"emit"],[32,12,25,10],[33,8,26,6],[33,11,26,9,"rest"],[34,6,27,4],[34,7,27,5],[34,10,27,8,"navigation"],[34,20,27,18],[35,6,28,4],[35,12,28,10,"actions"],[35,19,28,17],[35,22,28,20],[36,8,29,6],[36,11,29,9,"router"],[36,17,29,15],[36,18,29,16,"actionCreators"],[36,32,29,30],[37,8,30,6],[37,11,30,9,"CommonActions"],[38,6,31,4],[38,7,31,5],[39,6,32,4],[39,12,32,10,"dispatch"],[39,20,32,18],[39,23,32,21,"dispatch"],[39,24,32,21],[39,29,32,27],[40,8,33,6],[40,14,33,12],[40,18,33,16,"Error"],[40,23,33,21],[40,24,33,22],[40,81,33,79],[40,82,33,80],[41,6,34,4],[41,7,34,5],[42,6,35,4],[42,12,35,10,"helpers"],[42,19,35,17],[42,22,35,20,"Object"],[42,28,35,26],[42,29,35,27,"keys"],[42,33,35,31],[42,34,35,32,"actions"],[42,41,35,39],[42,42,35,40],[42,43,35,41,"reduce"],[42,49,35,47],[42,50,35,48],[42,51,35,49,"acc"],[42,54,35,52],[42,56,35,54,"name"],[42,60,35,58],[42,65,35,63],[43,8,36,6,"acc"],[43,11,36,9],[43,12,36,10,"name"],[43,16,36,14],[43,17,36,15],[43,20,36,18,"dispatch"],[43,28,36,26],[44,8,37,6],[44,15,37,13,"acc"],[44,18,37,16],[45,6,38,4],[45,7,38,5],[45,9,38,7],[45,10,38,8],[45,11,38,9],[45,12,38,10],[46,6,39,4],[46,13,39,11],[47,8,40,6],[47,11,40,9,"rest"],[47,15,40,13],[48,8,41,6],[48,11,41,9,"helpers"],[48,18,41,16],[49,8,42,6,"addListener"],[49,19,42,17],[49,21,42,19,"addListener"],[49,22,42,19],[49,27,42,25],[50,10,43,8],[52,10,45,8],[52,17,45,15],[52,23,45,21],[53,12,46,10],[54,10,46,10],[54,11,47,9],[55,8,48,6],[55,9,48,7],[56,8,49,6,"removeListener"],[56,22,49,20],[56,24,49,22,"removeListener"],[56,25,49,22],[56,30,49,28],[57,10,50,8],[58,8,50,8],[58,9,51,7],[59,8,52,6,"dispatch"],[59,16,52,14],[60,8,53,6,"getParent"],[60,17,53,15],[60,19,53,17,"id"],[60,21,53,19],[60,25,53,23],[61,10,54,8],[61,14,54,12,"id"],[61,16,54,14],[61,21,54,19,"undefined"],[61,30,54,28],[61,34,54,32,"id"],[61,36,54,34],[61,41,54,39,"rest"],[61,45,54,43],[61,46,54,44,"getId"],[61,51,54,49],[61,52,54,50],[61,53,54,51],[61,55,54,53],[62,12,55,10],[62,19,55,17,"base"],[62,23,55,21],[63,10,56,8],[64,10,57,8],[64,17,57,15,"rest"],[64,21,57,19],[64,22,57,20,"getParent"],[64,31,57,29],[64,32,57,30,"id"],[64,34,57,32],[64,35,57,33],[65,8,58,6],[65,9,58,7],[66,8,59,6,"setOptions"],[66,18,59,16],[66,20,59,18,"setOptions"],[66,21,59,18],[66,26,59,24],[67,10,60,8],[67,16,60,14],[67,20,60,18,"Error"],[67,25,60,23],[67,26,60,24],[67,76,60,74],[67,77,60,75],[68,8,61,6],[68,9,61,7],[69,8,62,6,"isFocused"],[69,17,62,15],[69,19,62,17,"isFocused"],[69,20,62,17],[69,25,62,23],[70,6,63,4],[70,7,63,5],[71,4,64,2],[71,5,64,3],[71,7,64,5],[71,8,64,6,"navigation"],[71,18,64,16],[71,20,64,18,"router"],[71,26,64,24],[71,27,64,25,"actionCreators"],[71,41,64,39],[71,42,64,40],[71,43,64,41],[73,4,66,2],[74,4,67,2],[75,4,68,2],[76,4,69,2],[76,10,69,8,"cache"],[76,15,69,13],[76,18,69,16,"React"],[76,23,69,21],[76,24,69,22,"useMemo"],[76,31,69,29],[76,32,69,30],[76,39,69,37],[77,6,70,4,"current"],[77,13,70,11],[77,15,70,13],[77,16,70,14],[78,4,71,2],[78,5,71,3],[78,6,71,4],[79,4,72,2],[80,4,73,2],[80,5,73,3,"base"],[80,9,73,7],[80,11,73,9,"getState"],[80,19,73,17],[80,21,73,19,"navigation"],[80,31,73,29],[80,33,73,31,"setOptions"],[80,43,73,41],[80,45,73,43,"emitter"],[80,52,73,50],[80,53,73,51],[80,54,73,52],[81,4,74,2,"cache"],[81,9,74,7],[81,10,74,8,"current"],[81,17,74,15],[81,20,74,18,"state"],[81,25,74,23],[81,26,74,24,"routes"],[81,32,74,30],[81,33,74,31,"reduce"],[81,39,74,37],[81,40,74,38],[81,41,74,39,"acc"],[81,44,74,42],[81,46,74,44,"route"],[81,51,74,49],[81,56,74,54],[82,6,75,4],[82,12,75,10,"previous"],[82,20,75,18],[82,23,75,21,"cache"],[82,28,75,26],[82,29,75,27,"current"],[82,36,75,34],[82,37,75,35,"route"],[82,42,75,40],[82,43,75,41,"key"],[82,46,75,44],[82,47,75,45],[83,6,76,4],[83,10,76,8,"previous"],[83,18,76,16],[83,20,76,18],[84,8,77,6],[85,8,78,6,"acc"],[85,11,78,9],[85,12,78,10,"route"],[85,17,78,15],[85,18,78,16,"key"],[85,21,78,19],[85,22,78,20],[85,25,78,23,"previous"],[85,33,78,31],[86,6,79,4],[86,7,79,5],[86,13,79,11],[87,8,80,6],[87,14,80,12,"dispatch"],[87,22,80,20],[87,25,80,23,"thunk"],[87,30,80,28],[87,34,80,32],[88,10,81,8],[88,16,81,14,"action"],[88,22,81,20],[88,25,81,23],[88,32,81,30,"thunk"],[88,37,81,35],[88,42,81,40],[88,52,81,50],[88,55,81,53,"thunk"],[88,60,81,58],[88,61,81,59,"getState"],[88,69,81,67],[88,70,81,68],[88,71,81,69],[88,72,81,70],[88,75,81,73,"thunk"],[88,80,81,78],[89,10,82,8],[89,14,82,12,"action"],[89,20,82,18],[89,24,82,22],[89,28,82,26],[89,30,82,28],[90,12,83,10,"navigation"],[90,22,83,20],[90,23,83,21,"dispatch"],[90,31,83,29],[90,32,83,30],[91,14,84,12,"source"],[91,20,84,18],[91,22,84,20,"route"],[91,27,84,25],[91,28,84,26,"key"],[91,31,84,29],[92,14,85,12],[92,17,85,15,"action"],[93,12,86,10],[93,13,86,11],[93,14,86,12],[94,10,87,8],[95,8,88,6],[95,9,88,7],[96,8,89,6],[96,14,89,12,"withStack"],[96,23,89,21],[96,26,89,24,"callback"],[96,34,89,32],[96,38,89,36],[97,10,90,8],[97,14,90,12,"isStackSet"],[97,24,90,22],[97,27,90,25],[97,32,90,30],[98,10,91,8],[98,14,91,12],[99,12,92,10],[99,16,92,14,"process"],[99,23,92,21],[99,24,92,22,"env"],[99,27,92,25],[99,28,92,26,"NODE_ENV"],[99,36,92,34],[99,41,92,39],[99,53,92,51],[99,57,92,55,"stackRef"],[99,65,92,63],[99,69,92,67],[99,70,92,68,"stackRef"],[99,78,92,76],[99,79,92,77,"current"],[99,86,92,84],[99,88,92,86],[100,14,93,12],[101,14,94,12,"stackRef"],[101,22,94,20],[101,23,94,21,"current"],[101,30,94,28],[101,33,94,31],[101,37,94,35,"Error"],[101,42,94,40],[101,43,94,41],[101,44,94,42],[101,45,94,43,"stack"],[101,50,94,48],[102,14,95,12,"isStackSet"],[102,24,95,22],[102,27,95,25],[102,31,95,29],[103,12,96,10],[104,12,97,10,"callback"],[104,20,97,18],[104,21,97,19],[104,22,97,20],[105,10,98,8],[105,11,98,9],[105,20,98,18],[106,12,99,10],[106,16,99,14,"isStackSet"],[106,26,99,24],[106,30,99,28,"stackRef"],[106,38,99,36],[106,40,99,38],[107,14,100,12,"stackRef"],[107,22,100,20],[107,23,100,21,"current"],[107,30,100,28],[107,33,100,31,"undefined"],[107,42,100,40],[108,12,101,10],[109,10,102,8],[110,8,103,6],[110,9,103,7],[111,8,104,6],[111,14,104,12,"actions"],[111,21,104,19],[111,24,104,22],[112,10,105,8],[112,13,105,11,"router"],[112,19,105,17],[112,20,105,18,"actionCreators"],[112,34,105,32],[113,10,106,8],[113,13,106,11,"CommonActions"],[114,8,107,6],[114,9,107,7],[115,8,108,6],[115,14,108,12,"helpers"],[115,21,108,19],[115,24,108,22,"Object"],[115,30,108,28],[115,31,108,29,"keys"],[115,35,108,33],[115,36,108,34,"actions"],[115,43,108,41],[115,44,108,42],[115,45,108,43,"reduce"],[115,51,108,49],[115,52,108,50],[115,53,108,51,"acc"],[115,56,108,54],[115,58,108,56,"name"],[115,62,108,60],[115,67,108,65],[116,10,109,8,"acc"],[116,13,109,11],[116,14,109,12,"name"],[116,18,109,16],[116,19,109,17],[116,22,109,20],[116,23,109,21],[116,26,109,24,"args"],[116,30,109,28],[116,35,109,33,"withStack"],[116,44,109,42],[116,45,109,43],[117,10,110,8],[118,10,111,8,"dispatch"],[118,18,111,16],[118,19,111,17,"actions"],[118,26,111,24],[118,27,111,25,"name"],[118,31,111,29],[118,32,111,30],[118,33,111,31],[118,36,111,34,"args"],[118,40,111,38],[118,41,111,39],[118,42,111,40],[118,43,111,41],[119,10,112,8],[119,17,112,15,"acc"],[119,20,112,18],[120,8,113,6],[120,9,113,7],[120,11,113,9],[120,12,113,10],[120,13,113,11],[120,14,113,12],[121,8,114,6,"acc"],[121,11,114,9],[121,12,114,10,"route"],[121,17,114,15],[121,18,114,16,"key"],[121,21,114,19],[121,22,114,20],[121,25,114,23],[122,10,115,8],[122,13,115,11,"base"],[122,17,115,15],[123,10,116,8],[123,13,116,11,"helpers"],[123,20,116,18],[124,10,117,8],[125,10,118,8],[125,13,118,11,"emitter"],[125,20,118,18],[125,21,118,19,"create"],[125,27,118,25],[125,28,118,26,"route"],[125,33,118,31],[125,34,118,32,"key"],[125,37,118,35],[125,38,118,36],[126,10,119,8,"dispatch"],[126,18,119,16],[126,20,119,18,"thunk"],[126,25,119,23],[126,29,119,27,"withStack"],[126,38,119,36],[126,39,119,37],[126,45,119,43,"dispatch"],[126,53,119,51],[126,54,119,52,"thunk"],[126,59,119,57],[126,60,119,58],[126,61,119,59],[127,10,120,8,"getParent"],[127,19,120,17],[127,21,120,19,"id"],[127,23,120,21],[127,27,120,25],[128,12,121,10],[128,16,121,14,"id"],[128,18,121,16],[128,23,121,21,"undefined"],[128,32,121,30],[128,36,121,34,"id"],[128,38,121,36],[128,43,121,41,"base"],[128,47,121,45],[128,48,121,46,"getId"],[128,53,121,51],[128,54,121,52],[128,55,121,53],[128,57,121,55],[129,14,122,12],[130,14,123,12],[131,14,124,12],[131,21,124,19,"acc"],[131,24,124,22],[131,25,124,23,"route"],[131,30,124,28],[131,31,124,29,"key"],[131,34,124,32],[131,35,124,33],[132,12,125,10],[133,12,126,10],[133,19,126,17,"base"],[133,23,126,21],[133,24,126,22,"getParent"],[133,33,126,31],[133,34,126,32,"id"],[133,36,126,34],[133,37,126,35],[134,10,127,8],[134,11,127,9],[135,10,128,8,"setOptions"],[135,20,128,18],[135,22,128,20,"options"],[135,29,128,27],[135,33,128,31],[136,12,129,10,"setOptions"],[136,22,129,20],[136,23,129,21,"o"],[136,24,129,22],[136,29,129,27],[137,14,130,12],[137,17,130,15,"o"],[137,18,130,16],[138,14,131,12],[138,15,131,13,"route"],[138,20,131,18],[138,21,131,19,"key"],[138,24,131,22],[138,27,131,25],[139,16,132,14],[139,19,132,17,"o"],[139,20,132,18],[139,21,132,19,"route"],[139,26,132,24],[139,27,132,25,"key"],[139,30,132,28],[139,31,132,29],[140,16,133,14],[140,19,133,17,"options"],[141,14,134,12],[142,12,135,10],[142,13,135,11],[142,14,135,12],[142,15,135,13],[143,10,136,8],[143,11,136,9],[144,10,137,8,"isFocused"],[144,19,137,17],[144,21,137,19,"isFocused"],[144,22,137,19],[144,27,137,25],[145,12,138,10],[145,18,138,16,"state"],[145,23,138,21],[145,26,138,24,"base"],[145,30,138,28],[145,31,138,29,"getState"],[145,39,138,37],[145,40,138,38],[145,41,138,39],[146,12,139,10],[146,16,139,14,"state"],[146,21,139,19],[146,22,139,20,"routes"],[146,28,139,26],[146,29,139,27,"state"],[146,34,139,32],[146,35,139,33,"index"],[146,40,139,38],[146,41,139,39],[146,42,139,40,"key"],[146,45,139,43],[146,50,139,48,"route"],[146,55,139,53],[146,56,139,54,"key"],[146,59,139,57],[146,61,139,59],[147,14,140,12],[147,21,140,19],[147,26,140,24],[148,12,141,10],[150,12,143,10],[151,12,144,10],[152,12,145,10],[152,19,145,17,"navigation"],[152,29,145,27],[152,32,145,30,"navigation"],[152,42,145,40],[152,43,145,41,"isFocused"],[152,52,145,50],[152,53,145,51],[152,54,145,52],[152,57,145,55],[152,61,145,59],[153,10,146,8],[154,8,147,6],[154,9,147,7],[155,6,148,4],[156,6,149,4],[156,13,149,11,"acc"],[156,16,149,14],[157,4,150,2],[157,5,150,3],[157,7,150,5],[157,8,150,6],[157,9,150,7],[157,10,150,8],[158,4,151,2],[158,11,151,9],[159,6,152,4,"base"],[159,10,152,8],[160,6,153,4,"navigations"],[160,17,153,15],[160,19,153,17,"cache"],[160,24,153,22],[160,25,153,23,"current"],[161,4,154,2],[161,5,154,3],[162,2,155,0],[163,0,155,1],[163,3]],"functionMap":{"names":["<global>","useNavigationCache","React.useMemo$argument_0","dispatch","Object.keys.reduce$argument_0","addListener","<anonymous>","removeListener","getParent","setOptions","isFocused","state.routes.reduce$argument_0","withStack","acc.name","withStack$argument_0","acc.route.key.dispatch","acc.route.key.getParent","acc.route.key.setOptions","setOptions$argument_0","acc.route.key.isFocused"],"mappings":"AAA;OCU;6BCW;qBCU;KDE;gDEC;KFG;mBGI;eCG;SDE;OHC;sBKC;OLE;iBME;ONK;kBOC;OPE;iBQC,WR;GDE;8BCK;IDE;sCUG;uBRM;OQQ;wBCC;ODc;kDPK;oBSC,uBC;wCDE,CT;OOE;kBIM,mBD,qBC,CJ;mBKC;SLO;oBMC;qBCC;YDM;SNC;mBQC;SRS;GVI;CDK"}},"type":"js/module"}]}