{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":17,"index":159},"end":{"line":4,"column":52,"index":194}}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}},{"name":"expo-modules-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":28,"index":224},"end":{"line":5,"column":56,"index":252}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":35,"index":289},"end":{"line":6,"column":72,"index":326}}],"key":"LF4arccvrvx2h7gjlFGN9GGMwEE="}},{"name":"./link/linking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}}],"key":"qAkeFDg1XiLn62LRw0bLpv/nYbc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getLinkingConfig = exports.getNavigationConfig = void 0;\n  var native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  var expo_modules_core_1 = require(_dependencyMap[1], \"expo-modules-core\");\n  var getReactNavigationConfig_1 = require(_dependencyMap[2], \"./getReactNavigationConfig\");\n  var linking_1 = require(_dependencyMap[3], \"./link/linking\");\n  function getNavigationConfig(routes) {\n    var metaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return (0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly);\n  }\n  exports.getNavigationConfig = getNavigationConfig;\n  function getLinkingConfig(store, routes, context) {\n    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$metaOnly = _ref.metaOnly,\n      metaOnly = _ref$metaOnly === void 0 ? true : _ref$metaOnly,\n      serverUrl = _ref.serverUrl;\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    var hasCachedInitialUrl = false;\n    var initialUrl;\n    var nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    var nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    var config = getNavigationConfig(routes, metaOnly);\n    var boundGetStateFromPath = linking_1.getStateFromPath.bind(store);\n    return {\n      prefixes: [],\n      config,\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              if (typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.addEventListener)(nativeLinking),\n      getStateFromPath: boundGetStateFromPath,\n      getPathFromState(state, options) {\n        return (0, linking_1.getPathFromState)(state, {\n          ...config,\n          ...options,\n          screens: config.screens ?? options?.screens ?? {}\n        }) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n  exports.getLinkingConfig = getLinkingConfig;\n});","lineCount":83,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getLinkingConfig"],[7,26,3,24],[7,29,3,27,"exports"],[7,36,3,34],[7,37,3,35,"getNavigationConfig"],[7,56,3,54],[7,59,3,57],[7,64,3,62],[7,65,3,63],[8,2,4,0],[8,6,4,6,"native_1"],[8,14,4,14],[8,17,4,17,"require"],[8,24,4,24],[8,25,4,24,"_dependencyMap"],[8,39,4,24],[8,70,4,51],[8,71,4,52],[9,2,5,0],[9,6,5,6,"expo_modules_core_1"],[9,25,5,25],[9,28,5,28,"require"],[9,35,5,35],[9,36,5,35,"_dependencyMap"],[9,50,5,35],[9,74,5,55],[9,75,5,56],[10,2,6,0],[10,6,6,6,"getReactNavigationConfig_1"],[10,32,6,32],[10,35,6,35,"require"],[10,42,6,42],[10,43,6,42,"_dependencyMap"],[10,57,6,42],[10,90,6,71],[10,91,6,72],[11,2,7,0],[11,6,7,6,"linking_1"],[11,15,7,15],[11,18,7,18,"require"],[11,25,7,25],[11,26,7,25,"_dependencyMap"],[11,40,7,25],[11,61,7,42],[11,62,7,43],[12,2,8,0],[12,11,8,9,"getNavigationConfig"],[12,30,8,28,"getNavigationConfig"],[12,31,8,29,"routes"],[12,37,8,35],[12,39,8,54],[13,4,8,54],[13,8,8,37,"metaOnly"],[13,16,8,45],[13,19,8,45,"arguments"],[13,28,8,45],[13,29,8,45,"length"],[13,35,8,45],[13,43,8,45,"arguments"],[13,52,8,45],[13,60,8,45,"undefined"],[13,69,8,45],[13,72,8,45,"arguments"],[13,81,8,45],[13,87,8,48],[13,91,8,52],[14,4,9,4],[14,11,9,11],[14,12,9,12],[14,13,9,13],[14,15,9,15,"getReactNavigationConfig_1"],[14,41,9,41],[14,42,9,42,"getReactNavigationConfig"],[14,66,9,66],[14,68,9,68,"routes"],[14,74,9,74],[14,76,9,76,"metaOnly"],[14,84,9,84],[14,85,9,85],[15,2,10,0],[16,2,11,0,"exports"],[16,9,11,7],[16,10,11,8,"getNavigationConfig"],[16,29,11,27],[16,32,11,30,"getNavigationConfig"],[16,51,11,49],[17,2,12,0],[17,11,12,9,"getLinkingConfig"],[17,27,12,25,"getLinkingConfig"],[17,28,12,26,"store"],[17,33,12,31],[17,35,12,33,"routes"],[17,41,12,39],[17,43,12,41,"context"],[17,50,12,48],[17,52,12,87],[18,4,12,87],[18,8,12,87,"_ref"],[18,12,12,87],[18,15,12,87,"arguments"],[18,24,12,87],[18,25,12,87,"length"],[18,31,12,87],[18,39,12,87,"arguments"],[18,48,12,87],[18,56,12,87,"undefined"],[18,65,12,87],[18,68,12,87,"arguments"],[18,77,12,87],[18,83,12,83],[18,84,12,84],[18,85,12,85],[19,6,12,85,"_ref$metaOnly"],[19,19,12,85],[19,22,12,85,"_ref"],[19,26,12,85],[19,27,12,52,"metaOnly"],[19,35,12,60],[20,6,12,52,"metaOnly"],[20,14,12,60],[20,17,12,60,"_ref$metaOnly"],[20,30,12,60],[20,44,12,63],[20,48,12,67],[20,51,12,67,"_ref$metaOnly"],[20,64,12,67],[21,6,12,69,"serverUrl"],[21,15,12,78],[21,18,12,78,"_ref"],[21,22,12,78],[21,23,12,69,"serverUrl"],[21,32,12,78],[22,4,13,4],[23,4,14,4],[23,8,14,8,"hasCachedInitialUrl"],[23,27,14,27],[23,30,14,30],[23,35,14,35],[24,4,15,4],[24,8,15,8,"initialUrl"],[24,18,15,18],[25,4,16,4],[25,8,16,10,"nativeLinkingKey"],[25,24,16,26],[25,27,16,29,"context"],[25,34,16,36],[25,35,17,9,"keys"],[25,39,17,13],[25,40,17,14],[25,41,17,15],[25,42,18,9,"find"],[25,46,18,13],[25,47,18,15,"key"],[25,50,18,18],[25,54,18,23,"key"],[25,57,18,26],[25,58,18,27,"match"],[25,63,18,32],[25,64,18,33],[25,96,18,65],[25,97,18,66],[25,98,18,67],[26,4,19,4],[26,8,19,10,"nativeLinking"],[26,21,19,23],[26,24,19,26,"nativeLinkingKey"],[26,40,19,42],[26,43,20,10,"context"],[26,50,20,17],[26,51,20,18,"nativeLinkingKey"],[26,67,20,34],[26,68,20,35],[26,71,21,10,"undefined"],[26,80,21,19],[27,4,22,4],[27,8,22,10,"config"],[27,14,22,16],[27,17,22,19,"getNavigationConfig"],[27,36,22,38],[27,37,22,39,"routes"],[27,43,22,45],[27,45,22,47,"metaOnly"],[27,53,22,55],[27,54,22,56],[28,4,23,4],[28,8,23,10,"boundGetStateFromPath"],[28,29,23,31],[28,32,23,34,"linking_1"],[28,41,23,43],[28,42,23,44,"getStateFromPath"],[28,58,23,60],[28,59,23,61,"bind"],[28,63,23,65],[28,64,23,66,"store"],[28,69,23,71],[28,70,23,72],[29,4,24,4],[29,11,24,11],[30,6,25,8,"prefixes"],[30,14,25,16],[30,16,25,18],[30,18,25,20],[31,6,26,8,"config"],[31,12,26,14],[32,6,27,8],[33,6,28,8],[34,6,29,8],[35,6,30,8],[36,6,31,8],[37,6,32,8,"getInitialURL"],[37,19,32,21,"getInitialURL"],[37,20,32,21],[37,22,32,24],[38,8,33,12],[39,8,34,12],[40,8,35,12],[40,12,35,16],[40,13,35,17,"hasCachedInitialUrl"],[40,32,35,36],[40,34,35,38],[41,10,36,16],[41,14,36,20,"expo_modules_core_1"],[41,33,36,39],[41,34,36,40,"Platform"],[41,42,36,48],[41,43,36,49,"OS"],[41,45,36,51],[41,50,36,56],[41,55,36,61],[41,57,36,63],[42,12,37,20,"initialUrl"],[42,22,37,30],[42,25,37,33,"serverUrl"],[42,34,37,42],[42,38,37,46],[42,39,37,47],[42,40,37,48],[42,42,37,50,"linking_1"],[42,51,37,59],[42,52,37,60,"getInitialURL"],[42,65,37,73],[42,67,37,75],[42,68,37,76],[43,10,38,16],[43,11,38,17],[43,17,39,21],[44,12,40,20,"initialUrl"],[44,22,40,30],[44,25,40,33,"serverUrl"],[44,34,40,42],[44,38,40,46],[44,39,40,47],[44,40,40,48],[44,42,40,50,"linking_1"],[44,51,40,59],[44,52,40,60,"getInitialURL"],[44,65,40,73],[44,67,40,75],[44,68,40,76],[45,12,41,20],[45,16,41,24],[45,23,41,31,"initialUrl"],[45,33,41,41],[45,38,41,46],[45,46,41,54],[45,48,41,56],[46,14,42,24],[46,18,42,28],[46,25,42,35,"nativeLinking"],[46,38,42,48],[46,40,42,50,"redirectSystemPath"],[46,58,42,68],[46,63,42,73],[46,73,42,83],[46,75,42,85],[47,16,43,28,"initialUrl"],[47,26,43,38],[47,29,43,41,"nativeLinking"],[47,42,43,54],[47,43,43,55,"redirectSystemPath"],[47,61,43,73],[47,62,43,74],[48,18,43,76,"path"],[48,22,43,80],[48,24,43,82,"initialUrl"],[48,34,43,92],[49,18,43,94,"initial"],[49,25,43,101],[49,27,43,103],[50,16,43,108],[50,17,43,109],[50,18,43,110],[51,14,44,24],[52,12,45,20],[52,13,45,21],[52,19,46,25],[52,23,46,29,"initialUrl"],[52,33,46,39],[52,35,46,41],[53,14,47,24,"initialUrl"],[53,24,47,34],[53,27,47,37,"initialUrl"],[53,37,47,47],[53,38,47,48,"then"],[53,42,47,52],[53,43,47,54,"url"],[53,46,47,57],[53,50,47,62],[54,16,48,28],[54,20,48,32,"url"],[54,23,48,35],[54,27,48,39],[54,34,48,46,"nativeLinking"],[54,47,48,59],[54,49,48,61,"redirectSystemPath"],[54,67,48,79],[54,72,48,84],[54,82,48,94],[54,84,48,96],[55,18,49,32],[55,25,49,39,"nativeLinking"],[55,38,49,52],[55,39,49,53,"redirectSystemPath"],[55,57,49,71],[55,58,49,72],[56,20,49,74,"path"],[56,24,49,78],[56,26,49,80,"url"],[56,29,49,83],[57,20,49,85,"initial"],[57,27,49,92],[57,29,49,94],[58,18,49,99],[58,19,49,100],[58,20,49,101],[59,16,50,28],[60,16,51,28],[60,23,51,35,"url"],[60,26,51,38],[61,14,52,24],[61,15,52,25],[61,16,52,26],[62,12,53,20],[63,10,54,16],[64,10,55,16,"hasCachedInitialUrl"],[64,29,55,35],[64,32,55,38],[64,36,55,42],[65,8,56,12],[66,8,57,12],[66,15,57,19,"initialUrl"],[66,25,57,29],[67,6,58,8],[67,7,58,9],[68,6,59,8,"subscribe"],[68,15,59,17],[68,17,59,19],[68,18,59,20],[68,19,59,21],[68,21,59,23,"linking_1"],[68,30,59,32],[68,31,59,33,"addEventListener"],[68,47,59,49],[68,49,59,51,"nativeLinking"],[68,62,59,64],[68,63,59,65],[69,6,60,8,"getStateFromPath"],[69,22,60,24],[69,24,60,26,"boundGetStateFromPath"],[69,45,60,47],[70,6,61,8,"getPathFromState"],[70,22,61,24,"getPathFromState"],[70,23,61,25,"state"],[70,28,61,30],[70,30,61,32,"options"],[70,37,61,39],[70,39,61,41],[71,8,62,12],[71,15,62,20],[71,16,62,21],[71,17,62,22],[71,19,62,24,"linking_1"],[71,28,62,33],[71,29,62,34,"getPathFromState"],[71,45,62,50],[71,47,62,52,"state"],[71,52,62,57],[71,54,62,59],[72,10,63,16],[72,13,63,19,"config"],[72,19,63,25],[73,10,64,16],[73,13,64,19,"options"],[73,20,64,26],[74,10,65,16,"screens"],[74,17,65,23],[74,19,65,25,"config"],[74,25,65,31],[74,26,65,32,"screens"],[74,33,65,39],[74,37,65,43,"options"],[74,44,65,50],[74,46,65,52,"screens"],[74,53,65,59],[74,57,65,63],[74,58,65,64],[75,8,66,12],[75,9,66,13],[75,10,66,14],[75,14,66,18],[75,17,66,21],[76,6,67,8],[76,7,67,9],[77,6,68,8],[78,6,69,8],[79,6,70,8,"getActionFromState"],[79,24,70,26],[79,26,70,28,"native_1"],[79,34,70,36],[79,35,70,37,"getActionFromState"],[80,4,71,4],[80,5,71,5],[81,2,72,0],[82,2,73,0,"exports"],[82,9,73,7],[82,10,73,8,"getLinkingConfig"],[82,26,73,24],[82,29,73,27,"getLinkingConfig"],[82,45,73,43],[83,0,73,44],[83,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getPathFromState"],"mappings":"AAA;ACO;CDE;AEE;cCM,oDD;QEc;qDCe;yBDK;SFM;QIG;SJM;CFK"}},"type":"js/module"}]}