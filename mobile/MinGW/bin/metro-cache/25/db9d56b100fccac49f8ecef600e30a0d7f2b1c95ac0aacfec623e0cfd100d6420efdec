{"dependencies":[{"name":"./getRoutesCore","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":24,"index":232},"end":{"line":4,"column":50,"index":258}},{"start":{"line":78,"column":22,"index":3240},"end":{"line":78,"column":48,"index":3266}}],"key":"ArHlHwwsIcnNtuI3RckEQf9gTRo="}},{"name":"./views/Navigator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":33,"index":1238},"end":{"line":25,"column":61,"index":1266}}],"key":"zn+tusU2VBSOaE8UXDldZChc/gU="}},{"name":"./views/Sitemap","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":39,"column":59,"index":1830},"end":{"line":39,"column":85,"index":1856}}],"key":"m2CCNGl1ZH/IFxRdqA611HyUs40="}},{"name":"./views/Unmatched","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":54,"column":42,"index":2436},"end":{"line":54,"column":70,"index":2464}}],"key":"u/3CRTc9U0wfjEYIXX6ecGOiXVE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getIgnoreList = exports.extrapolateGroups = exports.generateDynamic = exports.getExactRoutes = exports.getRoutes = void 0;\n  var getRoutesCore_1 = require(_dependencyMap[0], \"./getRoutesCore\");\n  /**\n   * Given a Metro context module, return an array of nested routes.\n   *\n   * This is a two step process:\n   *  1. Convert the RequireContext keys (file paths) into a directory tree.\n   *      - This should extrapolate array syntax into multiple routes\n   *      - Routes are given a specificity score\n   *  2. Flatten the directory tree into routes\n   *      - Routes in directories without _layout files are hoisted to the nearest _layout\n   *      - The name of the route is relative to the nearest _layout\n   *      - If multiple routes have the same name, the most specific route is used\n   */\n  function getRoutes(contextModule) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return (0, getRoutesCore_1.getRoutes)(contextModule, {\n      getSystemRoute(_ref) {\n        var route = _ref.route,\n          type = _ref.type;\n        if (route === '' && type === 'layout') {\n          // Root layout when no layout is defined.\n          return {\n            type: 'layout',\n            loadRoute: () => ({\n              default: require(_dependencyMap[1], \"./views/Navigator\").DefaultNavigator\n            }),\n            // Generate a fake file name for the directory\n            contextKey: 'expo-router/build/views/Navigator.js',\n            route: '',\n            generated: true,\n            dynamic: null,\n            children: []\n          };\n        } else if (route === '_sitemap' && type === 'route') {\n          return {\n            loadRoute() {\n              var _require = require(_dependencyMap[2], \"./views/Sitemap\"),\n                Sitemap = _require.Sitemap,\n                getNavOptions = _require.getNavOptions;\n              return {\n                default: Sitemap,\n                getNavOptions\n              };\n            },\n            route: '_sitemap',\n            type: 'route',\n            contextKey: 'expo-router/build/views/Sitemap.js',\n            generated: true,\n            internal: true,\n            dynamic: null,\n            children: []\n          };\n        } else if (route === '+not-found' && type === 'route') {\n          return {\n            loadRoute() {\n              return {\n                default: require(_dependencyMap[3], \"./views/Unmatched\").Unmatched\n              };\n            },\n            type: 'route',\n            route: '+not-found',\n            contextKey: 'expo-router/build/views/Unmatched.js',\n            generated: true,\n            internal: true,\n            dynamic: [{\n              name: '+not-found',\n              deep: true,\n              notFound: true\n            }],\n            children: []\n          };\n        }\n        throw new Error(`Unknown system route: ${route} and type: ${type}`);\n      },\n      ...options\n    });\n  }\n  exports.getRoutes = getRoutes;\n  function getExactRoutes(contextModule) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getRoutes(contextModule, {\n      ...options,\n      skipGenerated: true\n    });\n  }\n  exports.getExactRoutes = getExactRoutes;\n  var getRoutesCore_2 = require(_dependencyMap[0], \"./getRoutesCore\");\n  Object.defineProperty(exports, \"generateDynamic\", {\n    enumerable: true,\n    get: function () {\n      return getRoutesCore_2.generateDynamic;\n    }\n  });\n  Object.defineProperty(exports, \"extrapolateGroups\", {\n    enumerable: true,\n    get: function () {\n      return getRoutesCore_2.extrapolateGroups;\n    }\n  });\n  Object.defineProperty(exports, \"getIgnoreList\", {\n    enumerable: true,\n    get: function () {\n      return getRoutesCore_2.getIgnoreList;\n    }\n  });\n});","lineCount":113,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getIgnoreList"],[7,23,3,21],[7,26,3,24,"exports"],[7,33,3,31],[7,34,3,32,"extrapolateGroups"],[7,51,3,49],[7,54,3,52,"exports"],[7,61,3,59],[7,62,3,60,"generateDynamic"],[7,77,3,75],[7,80,3,78,"exports"],[7,87,3,85],[7,88,3,86,"getExactRoutes"],[7,102,3,100],[7,105,3,103,"exports"],[7,112,3,110],[7,113,3,111,"getRoutes"],[7,122,3,120],[7,125,3,123],[7,130,3,128],[7,131,3,129],[8,2,4,0],[8,6,4,6,"getRoutesCore_1"],[8,21,4,21],[8,24,4,24,"require"],[8,31,4,31],[8,32,4,31,"_dependencyMap"],[8,46,4,31],[8,68,4,49],[8,69,4,50],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,2,17,0],[21,11,17,9,"getRoutes"],[21,20,17,18,"getRoutes"],[21,21,17,19,"contextModule"],[21,34,17,32],[21,36,17,48],[22,4,17,48],[22,8,17,34,"options"],[22,15,17,41],[22,18,17,41,"arguments"],[22,27,17,41],[22,28,17,41,"length"],[22,34,17,41],[22,42,17,41,"arguments"],[22,51,17,41],[22,59,17,41,"undefined"],[22,68,17,41],[22,71,17,41,"arguments"],[22,80,17,41],[22,86,17,44],[22,87,17,45],[22,88,17,46],[23,4,18,4],[23,11,18,11],[23,12,18,12],[23,13,18,13],[23,15,18,15,"getRoutesCore_1"],[23,30,18,30],[23,31,18,31,"getRoutes"],[23,40,18,40],[23,42,18,42,"contextModule"],[23,55,18,55],[23,57,18,57],[24,6,19,8,"getSystemRoute"],[24,20,19,22,"getSystemRoute"],[24,21,19,22,"_ref"],[24,25,19,22],[24,27,19,40],[25,8,19,40],[25,12,19,25,"route"],[25,17,19,30],[25,20,19,30,"_ref"],[25,24,19,30],[25,25,19,25,"route"],[25,30,19,30],[26,10,19,32,"type"],[26,14,19,36],[26,17,19,36,"_ref"],[26,21,19,36],[26,22,19,32,"type"],[26,26,19,36],[27,8,20,12],[27,12,20,16,"route"],[27,17,20,21],[27,22,20,26],[27,24,20,28],[27,28,20,32,"type"],[27,32,20,36],[27,37,20,41],[27,45,20,49],[27,47,20,51],[28,10,21,16],[29,10,22,16],[29,17,22,23],[30,12,23,20,"type"],[30,16,23,24],[30,18,23,26],[30,26,23,34],[31,12,24,20,"loadRoute"],[31,21,24,29],[31,23,24,31,"loadRoute"],[31,24,24,31],[31,30,24,38],[32,14,25,24,"default"],[32,21,25,31],[32,23,25,33,"require"],[32,30,25,40],[32,31,25,40,"_dependencyMap"],[32,45,25,40],[32,69,25,60],[32,70,25,61],[32,71,26,29,"DefaultNavigator"],[33,12,27,20],[33,13,27,21],[33,14,27,22],[34,12,28,20],[35,12,29,20,"contextKey"],[35,22,29,30],[35,24,29,32],[35,62,29,70],[36,12,30,20,"route"],[36,17,30,25],[36,19,30,27],[36,21,30,29],[37,12,31,20,"generated"],[37,21,31,29],[37,23,31,31],[37,27,31,35],[38,12,32,20,"dynamic"],[38,19,32,27],[38,21,32,29],[38,25,32,33],[39,12,33,20,"children"],[39,20,33,28],[39,22,33,30],[40,10,34,16],[40,11,34,17],[41,8,35,12],[41,9,35,13],[41,15,36,17],[41,19,36,21,"route"],[41,24,36,26],[41,29,36,31],[41,39,36,41],[41,43,36,45,"type"],[41,47,36,49],[41,52,36,54],[41,59,36,61],[41,61,36,63],[42,10,37,16],[42,17,37,23],[43,12,38,20,"loadRoute"],[43,21,38,29,"loadRoute"],[43,22,38,29],[43,24,38,32],[44,14,39,24],[44,18,39,24,"_require"],[44,26,39,24],[44,29,39,59,"require"],[44,36,39,66],[44,37,39,66,"_dependencyMap"],[44,51,39,66],[44,73,39,84],[44,74,39,85],[45,16,39,32,"Sitemap"],[45,23,39,39],[45,26,39,39,"_require"],[45,34,39,39],[45,35,39,32,"Sitemap"],[45,42,39,39],[46,16,39,41,"getNavOptions"],[46,29,39,54],[46,32,39,54,"_require"],[46,40,39,54],[46,41,39,41,"getNavOptions"],[46,54,39,54],[47,14,40,24],[47,21,40,31],[48,16,40,33,"default"],[48,23,40,40],[48,25,40,42,"Sitemap"],[48,32,40,49],[49,16,40,51,"getNavOptions"],[50,14,40,65],[50,15,40,66],[51,12,41,20],[51,13,41,21],[52,12,42,20,"route"],[52,17,42,25],[52,19,42,27],[52,29,42,37],[53,12,43,20,"type"],[53,16,43,24],[53,18,43,26],[53,25,43,33],[54,12,44,20,"contextKey"],[54,22,44,30],[54,24,44,32],[54,60,44,68],[55,12,45,20,"generated"],[55,21,45,29],[55,23,45,31],[55,27,45,35],[56,12,46,20,"internal"],[56,20,46,28],[56,22,46,30],[56,26,46,34],[57,12,47,20,"dynamic"],[57,19,47,27],[57,21,47,29],[57,25,47,33],[58,12,48,20,"children"],[58,20,48,28],[58,22,48,30],[59,10,49,16],[59,11,49,17],[60,8,50,12],[60,9,50,13],[60,15,51,17],[60,19,51,21,"route"],[60,24,51,26],[60,29,51,31],[60,41,51,43],[60,45,51,47,"type"],[60,49,51,51],[60,54,51,56],[60,61,51,63],[60,63,51,65],[61,10,52,16],[61,17,52,23],[62,12,53,20,"loadRoute"],[62,21,53,29,"loadRoute"],[62,22,53,29],[62,24,53,32],[63,14,54,24],[63,21,54,31],[64,16,54,33,"default"],[64,23,54,40],[64,25,54,42,"require"],[64,32,54,49],[64,33,54,49,"_dependencyMap"],[64,47,54,49],[64,71,54,69],[64,72,54,70],[64,73,54,71,"Unmatched"],[65,14,54,81],[65,15,54,82],[66,12,55,20],[66,13,55,21],[67,12,56,20,"type"],[67,16,56,24],[67,18,56,26],[67,25,56,33],[68,12,57,20,"route"],[68,17,57,25],[68,19,57,27],[68,31,57,39],[69,12,58,20,"contextKey"],[69,22,58,30],[69,24,58,32],[69,62,58,70],[70,12,59,20,"generated"],[70,21,59,29],[70,23,59,31],[70,27,59,35],[71,12,60,20,"internal"],[71,20,60,28],[71,22,60,30],[71,26,60,34],[72,12,61,20,"dynamic"],[72,19,61,27],[72,21,61,29],[72,22,61,30],[73,14,61,32,"name"],[73,18,61,36],[73,20,61,38],[73,32,61,50],[74,14,61,52,"deep"],[74,18,61,56],[74,20,61,58],[74,24,61,62],[75,14,61,64,"notFound"],[75,22,61,72],[75,24,61,74],[76,12,61,79],[76,13,61,80],[76,14,61,81],[77,12,62,20,"children"],[77,20,62,28],[77,22,62,30],[78,10,63,16],[78,11,63,17],[79,8,64,12],[80,8,65,12],[80,14,65,18],[80,18,65,22,"Error"],[80,23,65,27],[80,24,65,28],[80,49,65,53,"route"],[80,54,65,58],[80,68,65,72,"type"],[80,72,65,76],[80,74,65,78],[80,75,65,79],[81,6,66,8],[81,7,66,9],[82,6,67,8],[82,9,67,11,"options"],[83,4,68,4],[83,5,68,5],[83,6,68,6],[84,2,69,0],[85,2,70,0,"exports"],[85,9,70,7],[85,10,70,8,"getRoutes"],[85,19,70,17],[85,22,70,20,"getRoutes"],[85,31,70,29],[86,2,71,0],[86,11,71,9,"getExactRoutes"],[86,25,71,23,"getExactRoutes"],[86,26,71,24,"contextModule"],[86,39,71,37],[86,41,71,53],[87,4,71,53],[87,8,71,39,"options"],[87,15,71,46],[87,18,71,46,"arguments"],[87,27,71,46],[87,28,71,46,"length"],[87,34,71,46],[87,42,71,46,"arguments"],[87,51,71,46],[87,59,71,46,"undefined"],[87,68,71,46],[87,71,71,46,"arguments"],[87,80,71,46],[87,86,71,49],[87,87,71,50],[87,88,71,51],[88,4,72,4],[88,11,72,11,"getRoutes"],[88,20,72,20],[88,21,72,21,"contextModule"],[88,34,72,34],[88,36,72,36],[89,6,73,8],[89,9,73,11,"options"],[89,16,73,18],[90,6,74,8,"skipGenerated"],[90,19,74,21],[90,21,74,23],[91,4,75,4],[91,5,75,5],[91,6,75,6],[92,2,76,0],[93,2,77,0,"exports"],[93,9,77,7],[93,10,77,8,"getExactRoutes"],[93,24,77,22],[93,27,77,25,"getExactRoutes"],[93,41,77,39],[94,2,78,0],[94,6,78,4,"getRoutesCore_2"],[94,21,78,19],[94,24,78,22,"require"],[94,31,78,29],[94,32,78,29,"_dependencyMap"],[94,46,78,29],[94,68,78,47],[94,69,78,48],[95,2,79,0,"Object"],[95,8,79,6],[95,9,79,7,"defineProperty"],[95,23,79,21],[95,24,79,22,"exports"],[95,31,79,29],[95,33,79,31],[95,50,79,48],[95,52,79,50],[96,4,79,52,"enumerable"],[96,14,79,62],[96,16,79,64],[96,20,79,68],[97,4,79,70,"get"],[97,7,79,73],[97,9,79,75],[97,18,79,75,"get"],[97,19,79,75],[97,21,79,87],[98,6,79,89],[98,13,79,96,"getRoutesCore_2"],[98,28,79,111],[98,29,79,112,"generateDynamic"],[98,44,79,127],[99,4,79,129],[100,2,79,131],[100,3,79,132],[100,4,79,133],[101,2,80,0,"Object"],[101,8,80,6],[101,9,80,7,"defineProperty"],[101,23,80,21],[101,24,80,22,"exports"],[101,31,80,29],[101,33,80,31],[101,52,80,50],[101,54,80,52],[102,4,80,54,"enumerable"],[102,14,80,64],[102,16,80,66],[102,20,80,70],[103,4,80,72,"get"],[103,7,80,75],[103,9,80,77],[103,18,80,77,"get"],[103,19,80,77],[103,21,80,89],[104,6,80,91],[104,13,80,98,"getRoutesCore_2"],[104,28,80,113],[104,29,80,114,"extrapolateGroups"],[104,46,80,131],[105,4,80,133],[106,2,80,135],[106,3,80,136],[106,4,80,137],[107,2,81,0,"Object"],[107,8,81,6],[107,9,81,7,"defineProperty"],[107,23,81,21],[107,24,81,22,"exports"],[107,31,81,29],[107,33,81,31],[107,48,81,46],[107,50,81,48],[108,4,81,50,"enumerable"],[108,14,81,60],[108,16,81,62],[108,20,81,66],[109,4,81,68,"get"],[109,7,81,71],[109,9,81,73],[109,18,81,73,"get"],[109,19,81,73],[109,21,81,85],[110,6,81,87],[110,13,81,94,"getRoutesCore_2"],[110,28,81,109],[110,29,81,110,"getIgnoreList"],[110,42,81,123],[111,4,81,125],[112,2,81,127],[112,3,81,128],[112,4,81,129],[113,0,81,130],[113,3]],"functionMap":{"names":["<global>","getRoutes","getSystemRoute","loadRoute","getExactRoutes","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACgB;QCE;+BCK;sBDG;oBCW;qBDG;oBCY;qBDE;SDW;CDG;AIE;CJK;2EKG,uDL;6EKC,yDL;yEKC,qDL"}},"type":"js/module"}]}