{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":235,"column":44,"index":8111}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":235,"column":44,"index":8111}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./getPatternParts.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"z4Ap0VIyJOTYCzFllv6s+WEku7M="}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"VmpJdDW9SG25WCfHhqlvsXwd7IE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPathFromState = getPathFromState;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(require(_dependencyMap[2], \"query-string\"));\n  var _getPatternParts = require(_dependencyMap[3], \"./getPatternParts.js\");\n  var _validatePathConfig = require(_dependencyMap[4], \"./validatePathConfig.js\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    var cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfig.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _options = currentOptions[route.name];\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(_ref4 => {\n            var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            if (value === undefined) {\n              if (_options) {\n                var optional = _options.parts?.find(part => part.param === key)?.optional;\n                if (optional) {\n                  return null;\n                }\n              } else {\n                return null;\n              }\n            }\n            var stringify = _options?.stringify?.[key] ?? String;\n            return [key, stringify(value)];\n          }).filter(entry => entry != null));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(_ref6 => {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(_ref => {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(_ref2 => {\n          var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts = (0, _getPatternParts.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ..._parts]\n        };\n      }\n      return {\n        parts: _parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, _getPatternParts.getPatternParts)(config.path) : [])] : config.path ? (0, _getPatternParts.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(_ref7 => {\n    var _ref8 = (0, _slicedToArray2.default)(_ref7, 2),\n      name = _ref8[0],\n      c = _ref8[1];\n    var result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":259,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"getPathFromState"],[8,26,1,13],[8,29,1,13,"getPathFromState"],[8,45,1,13],[9,2,1,13],[9,6,1,13,"_slicedToArray2"],[9,21,1,13],[9,24,1,13,"_interopRequireDefault"],[9,46,1,13],[9,47,1,13,"require"],[9,54,1,13],[9,55,1,13,"_dependencyMap"],[9,69,1,13],[10,2,3,0],[10,6,3,0,"queryString"],[10,17,3,0],[10,20,3,0,"_interopRequireWildcard"],[10,43,3,0],[10,44,3,0,"require"],[10,51,3,0],[10,52,3,0,"_dependencyMap"],[10,66,3,0],[11,2,4,0],[11,6,4,0,"_getPatternParts"],[11,22,4,0],[11,25,4,0,"require"],[11,32,4,0],[11,33,4,0,"_dependencyMap"],[11,47,4,0],[12,2,5,0],[12,6,5,0,"_validatePathConfig"],[12,25,5,0],[12,28,5,0,"require"],[12,35,5,0],[12,36,5,0,"_dependencyMap"],[12,50,5,0],[13,2,5,61],[13,11,5,61,"_getRequireWildcardCache"],[13,36,5,61,"e"],[13,37,5,61],[13,66,5,61,"WeakMap"],[13,73,5,61],[13,92,5,61,"r"],[13,93,5,61],[13,100,5,61,"WeakMap"],[13,107,5,61],[13,111,5,61,"t"],[13,112,5,61],[13,119,5,61,"WeakMap"],[13,126,5,61],[13,138,5,61,"_getRequireWildcardCache"],[13,162,5,61],[13,174,5,61,"_getRequireWildcardCache"],[13,175,5,61,"e"],[13,176,5,61],[13,187,5,61,"e"],[13,188,5,61],[13,191,5,61,"t"],[13,192,5,61],[13,195,5,61,"r"],[13,196,5,61],[13,201,5,61,"e"],[13,202,5,61],[14,2,5,61],[14,11,5,61,"_interopRequireWildcard"],[14,35,5,61,"e"],[14,36,5,61],[14,38,5,61,"r"],[14,39,5,61],[14,48,5,61,"r"],[14,49,5,61],[14,53,5,61,"e"],[14,54,5,61],[14,58,5,61,"e"],[14,59,5,61],[14,60,5,61,"__esModule"],[14,70,5,61],[14,79,5,61,"e"],[14,80,5,61],[14,95,5,61,"e"],[14,96,5,61],[14,119,5,61,"e"],[14,120,5,61],[14,145,5,61,"e"],[14,146,5,61],[14,157,5,61,"default"],[14,164,5,61],[14,166,5,61,"e"],[14,167,5,61],[14,175,5,61,"t"],[14,176,5,61],[14,179,5,61,"_getRequireWildcardCache"],[14,203,5,61],[14,204,5,61,"r"],[14,205,5,61],[14,212,5,61,"t"],[14,213,5,61],[14,217,5,61,"t"],[14,218,5,61],[14,219,5,61,"has"],[14,222,5,61],[14,223,5,61,"e"],[14,224,5,61],[14,234,5,61,"t"],[14,235,5,61],[14,236,5,61,"get"],[14,239,5,61],[14,240,5,61,"e"],[14,241,5,61],[14,248,5,61,"n"],[14,249,5,61],[14,254,5,61,"__proto__"],[14,263,5,61],[14,273,5,61,"a"],[14,274,5,61],[14,277,5,61,"Object"],[14,283,5,61],[14,284,5,61,"defineProperty"],[14,298,5,61],[14,302,5,61,"Object"],[14,308,5,61],[14,309,5,61,"getOwnPropertyDescriptor"],[14,333,5,61],[14,344,5,61,"u"],[14,345,5,61],[14,349,5,61,"e"],[14,350,5,61],[14,370,5,61,"u"],[14,371,5,61],[14,378,5,61,"hasOwnProperty"],[14,392,5,61],[14,393,5,61,"call"],[14,397,5,61],[14,398,5,61,"e"],[14,399,5,61],[14,401,5,61,"u"],[14,402,5,61],[14,411,5,61,"i"],[14,412,5,61],[14,415,5,61,"a"],[14,416,5,61],[14,419,5,61,"Object"],[14,425,5,61],[14,426,5,61,"getOwnPropertyDescriptor"],[14,450,5,61],[14,451,5,61,"e"],[14,452,5,61],[14,454,5,61,"u"],[14,455,5,61],[14,465,5,61,"i"],[14,466,5,61],[14,471,5,61,"i"],[14,472,5,61],[14,473,5,61,"get"],[14,476,5,61],[14,480,5,61,"i"],[14,481,5,61],[14,482,5,61,"set"],[14,485,5,61],[14,489,5,61,"Object"],[14,495,5,61],[14,496,5,61,"defineProperty"],[14,510,5,61],[14,511,5,61,"n"],[14,512,5,61],[14,514,5,61,"u"],[14,515,5,61],[14,517,5,61,"i"],[14,518,5,61],[14,522,5,61,"n"],[14,523,5,61],[14,524,5,61,"u"],[14,525,5,61],[14,529,5,61,"e"],[14,530,5,61],[14,531,5,61,"u"],[14,532,5,61],[14,544,5,61,"n"],[14,545,5,61],[14,546,5,61,"default"],[14,553,5,61],[14,556,5,61,"e"],[14,557,5,61],[14,559,5,61,"t"],[14,560,5,61],[14,564,5,61,"t"],[14,565,5,61],[14,566,5,61,"set"],[14,569,5,61],[14,570,5,61,"e"],[14,571,5,61],[14,573,5,61,"n"],[14,574,5,61],[14,577,5,61,"n"],[14,578,5,61],[15,2,6,0],[15,6,6,6,"getActiveRoute"],[15,20,6,20],[15,23,6,23,"state"],[15,28,6,28],[15,32,6,32],[16,4,7,2],[16,8,7,8,"route"],[16,13,7,13],[16,16,7,16],[16,23,7,23,"state"],[16,28,7,28],[16,29,7,29,"index"],[16,34,7,34],[16,39,7,39],[16,47,7,47],[16,50,7,50,"state"],[16,55,7,55],[16,56,7,56,"routes"],[16,62,7,62],[16,63,7,63,"state"],[16,68,7,68],[16,69,7,69,"index"],[16,74,7,74],[16,75,7,75],[16,78,7,78,"state"],[16,83,7,83],[16,84,7,84,"routes"],[16,90,7,90],[16,91,7,91,"state"],[16,96,7,96],[16,97,7,97,"routes"],[16,103,7,103],[16,104,7,104,"length"],[16,110,7,110],[16,113,7,113],[16,114,7,114],[16,115,7,115],[17,4,8,2],[17,8,8,6,"route"],[17,13,8,11],[17,14,8,12,"state"],[17,19,8,17],[17,21,8,19],[18,6,9,4],[18,13,9,11,"getActiveRoute"],[18,27,9,25],[18,28,9,26,"route"],[18,33,9,31],[18,34,9,32,"state"],[18,39,9,37],[18,40,9,38],[19,4,10,2],[20,4,11,2],[20,11,11,9,"route"],[20,16,11,14],[21,2,12,0],[21,3,12,1],[22,2,13,0],[22,6,13,6,"cachedNormalizedConfigs"],[22,29,13,29],[22,32,13,32],[22,36,13,36,"WeakMap"],[22,43,13,43],[22,44,13,44],[22,45,13,45],[23,2,14,0],[23,6,14,6,"getNormalizedConfigs"],[23,26,14,26],[23,29,14,29,"options"],[23,36,14,36],[23,40,14,40],[24,4,15,2],[24,8,15,6],[24,9,15,7,"options"],[24,16,15,14],[24,18,15,16,"screens"],[24,25,15,23],[24,27,15,25],[24,34,15,32],[24,35,15,33],[24,36,15,34],[25,4,16,2],[25,8,16,8,"cached"],[25,14,16,14],[25,17,16,17,"cachedNormalizedConfigs"],[25,40,16,40],[25,41,16,41,"get"],[25,44,16,44],[25,45,16,45,"options"],[25,52,16,52],[25,54,16,54,"screens"],[25,61,16,61],[25,62,16,62],[26,4,17,2],[26,8,17,6,"cached"],[26,14,17,12],[26,16,17,14],[26,23,17,21,"cached"],[26,29,17,27],[27,4,18,2],[27,8,18,8,"normalizedConfigs"],[27,25,18,25],[27,28,18,28,"createNormalizedConfigs"],[27,51,18,51],[27,52,18,52,"options"],[27,59,18,59],[27,60,18,60,"screens"],[27,67,18,67],[27,68,18,68],[28,4,19,2,"cachedNormalizedConfigs"],[28,27,19,25],[28,28,19,26,"set"],[28,31,19,29],[28,32,19,30,"options"],[28,39,19,37],[28,40,19,38,"screens"],[28,47,19,45],[28,49,19,47,"normalizedConfigs"],[28,66,19,64],[28,67,19,65],[29,4,20,2],[29,11,20,9,"normalizedConfigs"],[29,28,20,26],[30,2,21,0],[30,3,21,1],[32,2,23,0],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,0,31,0],[41,0,32,0],[42,0,33,0],[43,0,34,0],[44,0,35,0],[45,0,36,0],[46,0,37,0],[47,0,38,0],[48,0,39,0],[49,0,40,0],[50,0,41,0],[51,0,42,0],[52,0,43,0],[53,0,44,0],[54,0,45,0],[55,0,46,0],[56,0,47,0],[57,0,48,0],[58,0,49,0],[59,0,50,0],[60,0,51,0],[61,2,52,7],[61,11,52,16,"getPathFromState"],[61,27,52,32,"getPathFromState"],[61,28,52,33,"state"],[61,33,52,38],[61,35,52,40,"options"],[61,42,52,47],[61,44,52,49],[62,4,53,2],[62,8,53,6,"state"],[62,13,53,11],[62,17,53,15],[62,21,53,19],[62,23,53,21],[63,6,54,4],[63,12,54,10,"Error"],[63,17,54,15],[63,18,54,16],[63,26,54,24,"String"],[63,32,54,30],[63,33,54,31,"state"],[63,38,54,36],[63,39,54,37],[63,104,54,102],[63,105,54,103],[64,4,55,2],[65,4,56,2],[65,8,56,6,"options"],[65,15,56,13],[65,17,56,15],[66,6,57,4],[66,10,57,4,"validatePathConfig"],[66,48,57,22],[66,50,57,23,"options"],[66,57,57,30],[66,58,57,31],[67,4,58,2],[68,4,59,2],[68,8,59,8,"configs"],[68,15,59,15],[68,18,59,18,"getNormalizedConfigs"],[68,38,59,38],[68,39,59,39,"options"],[68,46,59,46],[68,47,59,47],[69,4,60,2],[69,8,60,6,"path"],[69,12,60,10],[69,15,60,13],[69,18,60,16],[70,4,61,2],[70,8,61,6,"current"],[70,15,61,13],[70,18,61,16,"state"],[70,23,61,21],[71,4,62,2],[71,8,62,8,"allParams"],[71,17,62,17],[71,20,62,20],[71,21,62,21],[71,22,62,22],[72,4,62,23],[72,8,62,23,"_loop"],[72,13,62,23],[72,25,62,23,"_loop"],[72,26,62,23],[72,28,63,18],[73,6,64,4],[73,10,64,8,"index"],[73,15,64,13],[73,18,64,16],[73,25,64,23,"current"],[73,32,64,30],[73,33,64,31,"index"],[73,38,64,36],[73,43,64,41],[73,51,64,49],[73,54,64,52,"current"],[73,61,64,59],[73,62,64,60,"index"],[73,67,64,65],[73,70,64,68],[73,71,64,69],[74,6,65,4],[74,10,65,8,"route"],[74,15,65,13],[74,18,65,16,"current"],[74,25,65,23],[74,26,65,24,"routes"],[74,32,65,30],[74,33,65,31,"index"],[74,38,65,36],[74,39,65,37],[75,6,66,4],[75,10,66,8,"parts"],[75,15,66,13],[76,6,67,4],[76,10,67,8,"focusedParams"],[76,23,67,21],[77,6,68,4],[77,10,68,8,"currentOptions"],[77,24,68,22],[77,27,68,25,"configs"],[77,34,68,32],[78,6,69,4],[78,10,69,10,"focusedRoute"],[78,22,69,22],[78,25,69,25,"getActiveRoute"],[78,39,69,39],[78,40,69,40,"state"],[78,45,69,45],[78,46,69,46],[80,6,71,4],[81,6,72,4],[81,10,72,10,"nestedRouteNames"],[81,26,72,26],[81,29,72,29],[81,31,72,31],[82,6,73,4],[82,10,73,8,"hasNext"],[82,17,73,15],[82,20,73,18],[82,24,73,22],[83,6,73,23],[83,10,73,23,"_loop2"],[83,16,73,23],[83,28,73,23,"_loop2"],[83,29,73,23],[83,31,74,52],[84,8,75,6,"parts"],[84,13,75,11],[84,16,75,14,"currentOptions"],[84,30,75,28],[84,31,75,29,"route"],[84,36,75,34],[84,37,75,35,"name"],[84,41,75,39],[84,42,75,40],[84,43,75,41,"parts"],[84,48,75,46],[85,8,76,6,"nestedRouteNames"],[85,24,76,22],[85,25,76,23,"push"],[85,29,76,27],[85,30,76,28,"route"],[85,35,76,33],[85,36,76,34,"name"],[85,40,76,38],[85,41,76,39],[86,8,77,6],[86,12,77,10,"route"],[86,17,77,15],[86,18,77,16,"params"],[86,24,77,22],[86,26,77,24],[87,10,78,8],[87,14,78,14,"options"],[87,22,78,21],[87,25,78,24,"currentOptions"],[87,39,78,38],[87,40,78,39,"route"],[87,45,78,44],[87,46,78,45,"name"],[87,50,78,49],[87,51,78,50],[88,10,79,8],[88,14,79,14,"currentParams"],[88,27,79,27],[88,30,79,30,"Object"],[88,36,79,36],[88,37,79,37,"fromEntries"],[88,48,79,48],[88,49,79,49,"Object"],[88,55,79,55],[88,56,79,56,"entries"],[88,63,79,63],[88,64,79,64,"route"],[88,69,79,69],[88,70,79,70,"params"],[88,76,79,76],[88,77,79,77],[88,78,79,78,"map"],[88,81,79,81],[88,82,79,82,"_ref4"],[88,87,79,82],[88,91,79,100],[89,12,79,100],[89,16,79,100,"_ref5"],[89,21,79,100],[89,28,79,100,"_slicedToArray2"],[89,43,79,100],[89,44,79,100,"default"],[89,51,79,100],[89,53,79,100,"_ref4"],[89,58,79,100],[90,14,79,84,"key"],[90,17,79,87],[90,20,79,87,"_ref5"],[90,25,79,87],[91,14,79,89,"value"],[91,19,79,94],[91,22,79,94,"_ref5"],[91,27,79,94],[92,12,80,10],[92,16,80,14,"value"],[92,21,80,19],[92,26,80,24,"undefined"],[92,35,80,33],[92,37,80,35],[93,14,81,12],[93,18,81,16,"options"],[93,26,81,23],[93,28,81,25],[94,16,82,14],[94,20,82,20,"optional"],[94,28,82,28],[94,31,82,31,"options"],[94,39,82,38],[94,40,82,39,"parts"],[94,45,82,44],[94,47,82,46,"find"],[94,51,82,50],[94,52,82,51,"part"],[94,56,82,55],[94,60,82,59,"part"],[94,64,82,63],[94,65,82,64,"param"],[94,70,82,69],[94,75,82,74,"key"],[94,78,82,77],[94,79,82,78],[94,81,82,80,"optional"],[94,89,82,88],[95,16,83,14],[95,20,83,18,"optional"],[95,28,83,26],[95,30,83,28],[96,18,84,16],[96,25,84,23],[96,29,84,27],[97,16,85,14],[98,14,86,12],[98,15,86,13],[98,21,86,19],[99,16,87,14],[99,23,87,21],[99,27,87,25],[100,14,88,12],[101,12,89,10],[102,12,90,10],[102,16,90,16,"stringify"],[102,25,90,25],[102,28,90,28,"options"],[102,36,90,35],[102,38,90,37,"stringify"],[102,47,90,46],[102,50,90,49,"key"],[102,53,90,52],[102,54,90,53],[102,58,90,57,"String"],[102,64,90,63],[103,12,91,10],[103,19,91,17],[103,20,91,18,"key"],[103,23,91,21],[103,25,91,23,"stringify"],[103,34,91,32],[103,35,91,33,"value"],[103,40,91,38],[103,41,91,39],[103,42,91,40],[104,10,92,8],[104,11,92,9],[104,12,92,10],[104,13,92,11,"filter"],[104,19,92,17],[104,20,92,18,"entry"],[104,25,92,23],[104,29,92,27,"entry"],[104,34,92,32],[104,38,92,36],[104,42,92,40],[104,43,92,41],[104,44,92,42],[105,10,93,8],[105,14,93,12,"parts"],[105,19,93,17],[105,21,93,19,"length"],[105,27,93,25],[105,29,93,27],[106,12,94,10,"Object"],[106,18,94,16],[106,19,94,17,"assign"],[106,25,94,23],[106,26,94,24,"allParams"],[106,35,94,33],[106,37,94,35,"currentParams"],[106,50,94,48],[106,51,94,49],[107,10,95,8],[108,10,96,8],[108,14,96,12,"focusedRoute"],[108,26,96,24],[108,31,96,29,"route"],[108,36,96,34],[108,38,96,36],[109,12,97,10],[110,12,98,10],[111,12,99,10,"focusedParams"],[111,25,99,23],[111,28,99,26],[112,14,100,12],[112,17,100,15,"currentParams"],[113,12,101,10],[113,13,101,11],[114,12,102,10,"parts"],[115,12,103,10],[116,12,103,10],[116,14,104,12,"forEach"],[116,21,104,19],[116,22,104,20,"_ref6"],[116,27,104,20],[116,31,106,16],[117,14,106,16],[117,18,105,12,"param"],[117,23,105,17],[117,26,105,17,"_ref6"],[117,31,105,17],[117,32,105,12,"param"],[117,37,105,17],[118,14,107,12],[118,18,107,16,"param"],[118,23,107,21],[118,25,107,23],[119,16,108,14],[120,16,109,14],[120,20,109,18,"focusedParams"],[120,33,109,31],[120,35,109,33],[121,18,110,16],[122,18,111,16],[122,25,111,23,"focusedParams"],[122,38,111,36],[122,39,111,37,"param"],[122,44,111,42],[122,45,111,43],[123,16,112,14],[124,14,113,12],[125,12,114,10],[125,13,114,11],[125,14,114,12],[126,10,115,8],[127,8,116,6],[129,8,118,6],[130,8,119,6],[130,12,119,10],[130,13,119,11,"currentOptions"],[130,27,119,25],[130,28,119,26,"route"],[130,33,119,31],[130,34,119,32,"name"],[130,38,119,36],[130,39,119,37],[130,40,119,38,"screens"],[130,47,119,45],[130,51,119,49,"route"],[130,56,119,54],[130,57,119,55,"state"],[130,62,119,60],[130,67,119,65,"undefined"],[130,76,119,74],[130,78,119,76],[131,10,120,8,"hasNext"],[131,17,120,15],[131,20,120,18],[131,25,120,23],[132,8,121,6],[132,9,121,7],[132,15,121,13],[133,10,122,8,"index"],[133,15,122,13],[133,18,122,16],[133,25,122,23,"route"],[133,30,122,28],[133,31,122,29,"state"],[133,36,122,34],[133,37,122,35,"index"],[133,42,122,40],[133,47,122,45],[133,55,122,53],[133,58,122,56,"route"],[133,63,122,61],[133,64,122,62,"state"],[133,69,122,67],[133,70,122,68,"index"],[133,75,122,73],[133,78,122,76,"route"],[133,83,122,81],[133,84,122,82,"state"],[133,89,122,87],[133,90,122,88,"routes"],[133,96,122,94],[133,97,122,95,"length"],[133,103,122,101],[133,106,122,104],[133,107,122,105],[134,10,123,8],[134,14,123,14,"nextRoute"],[134,23,123,23],[134,26,123,26,"route"],[134,31,123,31],[134,32,123,32,"state"],[134,37,123,37],[134,38,123,38,"routes"],[134,44,123,44],[134,45,123,45,"index"],[134,50,123,50],[134,51,123,51],[135,10,124,8],[135,14,124,14,"nestedConfig"],[135,26,124,26],[135,29,124,29,"currentOptions"],[135,43,124,43],[135,44,124,44,"route"],[135,49,124,49],[135,50,124,50,"name"],[135,54,124,54],[135,55,124,55],[135,56,124,56,"screens"],[135,63,124,63],[137,10,126,8],[138,10,127,8],[138,14,127,12,"nestedConfig"],[138,26,127,24],[138,30,127,28,"nextRoute"],[138,39,127,37],[138,40,127,38,"name"],[138,44,127,42],[138,48,127,46,"nestedConfig"],[138,60,127,58],[138,62,127,60],[139,12,128,10,"route"],[139,17,128,15],[139,20,128,18,"nextRoute"],[139,29,128,27],[140,12,129,10,"currentOptions"],[140,26,129,24],[140,29,129,27,"nestedConfig"],[140,41,129,39],[141,10,130,8],[141,11,130,9],[141,17,130,15],[142,12,131,10],[143,12,132,10,"hasNext"],[143,19,132,17],[143,22,132,20],[143,27,132,25],[144,10,133,8],[145,8,134,6],[146,6,135,4],[146,7,135,5],[147,6,74,4],[147,13,74,11,"route"],[147,18,74,16],[147,19,74,17,"name"],[147,23,74,21],[147,27,74,25,"currentOptions"],[147,41,74,39],[147,45,74,43,"hasNext"],[147,52,74,50],[148,8,74,50,"_loop2"],[148,14,74,50],[149,6,74,50],[150,6,136,4],[150,10,136,8,"currentOptions"],[150,24,136,22],[150,25,136,23,"route"],[150,30,136,28],[150,31,136,29,"name"],[150,35,136,33],[150,36,136,34],[150,41,136,39,"undefined"],[150,50,136,48],[150,52,136,50],[151,8,137,6,"path"],[151,12,137,10],[151,16,137,14,"parts"],[151,21,137,19],[151,23,137,21,"map"],[151,26,137,24],[151,27,137,25,"_ref"],[151,31,137,25],[151,35,141,12],[152,10,141,12],[152,14,138,8,"segment"],[152,21,138,15],[152,24,138,15,"_ref"],[152,28,138,15],[152,29,138,8,"segment"],[152,36,138,15],[153,12,139,8,"param"],[153,17,139,13],[153,20,139,13,"_ref"],[153,24,139,13],[153,25,139,8,"param"],[153,30,139,13],[154,12,140,8,"optional"],[154,20,140,16],[154,23,140,16,"_ref"],[154,27,140,16],[154,28,140,8,"optional"],[154,36,140,16],[155,10,142,8],[156,10,143,8],[157,10,144,8],[158,10,145,8],[158,14,145,12,"segment"],[158,21,145,19],[158,26,145,24],[158,29,145,27],[158,31,145,29],[159,12,146,10],[159,19,146,17,"route"],[159,24,146,22],[159,25,146,23,"name"],[159,29,146,27],[160,10,147,8],[162,10,149,8],[163,10,150,8],[163,14,150,12,"param"],[163,19,150,17],[163,21,150,19],[164,12,151,10],[164,16,151,16,"value"],[164,21,151,21],[164,24,151,24,"allParams"],[164,33,151,33],[164,34,151,34,"param"],[164,39,151,39],[164,40,151,40],[165,12,152,10],[165,16,152,14,"value"],[165,21,152,19],[165,26,152,24,"undefined"],[165,35,152,33],[165,39,152,37,"optional"],[165,47,152,45],[165,49,152,47],[166,14,153,12],[167,14,154,12],[167,21,154,19],[167,23,154,21],[168,12,155,10],[170,12,157,10],[171,12,158,10],[172,12,159,10],[172,19,159,17,"String"],[172,25,159,23],[172,26,159,24,"value"],[172,31,159,29],[172,32,159,30],[172,33,159,31,"replace"],[172,40,159,38],[172,41,159,39],[172,74,159,72],[172,76,159,74,"char"],[172,80,159,78],[172,84,159,82,"encodeURIComponent"],[172,102,159,100],[172,103,159,101,"char"],[172,107,159,105],[172,108,159,106],[172,109,159,107],[173,10,160,8],[174,10,161,8],[174,17,161,15,"encodeURIComponent"],[174,35,161,33],[174,36,161,34,"segment"],[174,43,161,41],[174,44,161,42],[175,8,162,6],[175,9,162,7],[175,10,162,8],[175,11,162,9,"join"],[175,15,162,13],[175,16,162,14],[175,19,162,17],[175,20,162,18],[176,6,163,4],[176,7,163,5],[176,13,163,11],[177,8,164,6,"path"],[177,12,164,10],[177,16,164,14,"encodeURIComponent"],[177,34,164,32],[177,35,164,33,"route"],[177,40,164,38],[177,41,164,39,"name"],[177,45,164,43],[177,46,164,44],[178,6,165,4],[179,6,166,4],[179,10,166,8],[179,11,166,9,"focusedParams"],[179,24,166,22],[179,28,166,26,"focusedRoute"],[179,40,166,38],[179,41,166,39,"params"],[179,47,166,45],[179,49,166,47],[180,8,167,6,"focusedParams"],[180,21,167,19],[180,24,167,22,"Object"],[180,30,167,28],[180,31,167,29,"fromEntries"],[180,42,167,40],[180,43,167,41,"Object"],[180,49,167,47],[180,50,167,48,"entries"],[180,57,167,55],[180,58,167,56,"focusedRoute"],[180,70,167,68],[180,71,167,69,"params"],[180,77,167,75],[180,78,167,76],[180,79,167,77,"map"],[180,82,167,80],[180,83,167,81,"_ref2"],[180,88,167,81],[181,10,167,81],[181,14,167,81,"_ref3"],[181,19,167,81],[181,26,167,81,"_slicedToArray2"],[181,41,167,81],[181,42,167,81,"default"],[181,49,167,81],[181,51,167,81,"_ref2"],[181,56,167,81],[182,12,167,83,"key"],[182,15,167,86],[182,18,167,86,"_ref3"],[182,23,167,86],[183,12,167,88,"value"],[183,17,167,93],[183,20,167,93,"_ref3"],[183,25,167,93],[184,10,167,93],[184,17,167,99],[184,18,167,100,"key"],[184,21,167,103],[184,23,167,105,"String"],[184,29,167,111],[184,30,167,112,"value"],[184,35,167,117],[184,36,167,118],[184,37,167,119],[185,8,167,119],[185,10,167,120],[185,11,167,121],[186,6,168,4],[187,6,169,4],[187,10,169,8,"route"],[187,15,169,13],[187,16,169,14,"state"],[187,21,169,19],[187,23,169,21],[188,8,170,6,"path"],[188,12,170,10],[188,16,170,14],[188,19,170,17],[189,6,171,4],[189,7,171,5],[189,13,171,11],[189,17,171,15,"focusedParams"],[189,30,171,28],[189,32,171,30],[190,8,172,6],[190,13,172,11],[190,17,172,17,"param"],[190,22,172,22],[190,26,172,26,"focusedParams"],[190,39,172,39],[190,41,172,41],[191,10,173,8],[191,14,173,12,"focusedParams"],[191,27,173,25],[191,28,173,26,"param"],[191,33,173,31],[191,34,173,32],[191,39,173,37],[191,50,173,48],[191,52,173,50],[192,12,174,10],[193,12,175,10],[193,19,175,17,"focusedParams"],[193,32,175,30],[193,33,175,31,"param"],[193,38,175,36],[193,39,175,37],[194,10,176,8],[195,8,177,6],[196,8,178,6],[196,12,178,12,"query"],[196,17,178,17],[196,20,178,20,"queryString"],[196,31,178,31],[196,32,178,32,"stringify"],[196,41,178,41],[196,42,178,42,"focusedParams"],[196,55,178,55],[196,57,178,57],[197,10,179,8,"sort"],[197,14,179,12],[197,16,179,14],[198,8,180,6],[198,9,180,7],[198,10,180,8],[199,8,181,6],[199,12,181,10,"query"],[199,17,181,15],[199,19,181,17],[200,10,182,8,"path"],[200,14,182,12],[200,18,182,16],[200,22,182,20,"query"],[200,27,182,25],[200,29,182,27],[201,8,183,6],[202,6,184,4],[203,6,185,4,"current"],[203,13,185,11],[203,16,185,14,"route"],[203,21,185,19],[203,22,185,20,"state"],[203,27,185,25],[204,4,186,2],[204,5,186,3],[205,4,63,2],[205,11,63,9,"current"],[205,18,63,16],[206,6,63,16,"_loop"],[206,11,63,16],[207,4,63,16],[209,4,188,2],[210,4,189,2],[210,8,189,6,"options"],[210,15,189,13],[210,17,189,15,"path"],[210,21,189,19],[210,23,189,21],[211,6,190,4,"path"],[211,10,190,8],[211,13,190,11],[211,16,190,14,"options"],[211,23,190,21],[211,24,190,22,"path"],[211,28,190,26],[211,32,190,30,"path"],[211,36,190,34],[211,38,190,36],[212,4,191,2],[214,4,193,2],[215,4,194,2,"path"],[215,8,194,6],[215,11,194,9,"path"],[215,15,194,13],[215,16,194,14,"replace"],[215,23,194,21],[215,24,194,22],[215,30,194,28],[215,32,194,30],[215,35,194,33],[215,36,194,34],[216,4,195,2,"path"],[216,8,195,6],[216,11,195,9,"path"],[216,15,195,13],[216,16,195,14,"length"],[216,22,195,20],[216,25,195,23],[216,26,195,24],[216,29,195,27,"path"],[216,33,195,31],[216,34,195,32,"replace"],[216,41,195,39],[216,42,195,40],[216,47,195,45],[216,49,195,47],[216,51,195,49],[216,52,195,50],[216,55,195,53,"path"],[216,59,195,57],[218,4,197,2],[219,4,198,2],[220,4,199,2],[220,8,199,6],[220,9,199,7,"path"],[220,13,199,11],[220,14,199,12,"startsWith"],[220,24,199,22],[220,25,199,23],[220,28,199,26],[220,29,199,27],[220,31,199,29],[221,6,200,4,"path"],[221,10,200,8],[221,13,200,11],[221,17,200,15,"path"],[221,21,200,19],[221,23,200,21],[222,4,201,2],[223,4,202,2],[223,11,202,9,"path"],[223,15,202,13],[224,2,203,0],[225,2,204,0],[225,6,204,6,"createConfigItem"],[225,22,204,22],[225,25,204,25,"createConfigItem"],[225,26,204,26,"config"],[225,32,204,32],[225,34,204,34,"parentParts"],[225,45,204,45],[225,50,204,50],[226,4,205,2],[226,8,205,6],[226,15,205,13,"config"],[226,21,205,19],[226,26,205,24],[226,34,205,32],[226,36,205,34],[227,6,206,4],[228,6,207,4],[228,10,207,10,"parts"],[228,16,207,15],[228,19,207,18],[228,23,207,18,"getPatternParts"],[228,55,207,33],[228,57,207,34,"config"],[228,63,207,40],[228,64,207,41],[229,6,208,4],[229,10,208,8,"parentParts"],[229,21,208,19],[229,23,208,21],[230,8,209,6],[230,15,209,13],[231,10,210,8,"parts"],[231,15,210,13],[231,17,210,15],[231,18,210,16],[231,21,210,19,"parentParts"],[231,32,210,30],[231,34,210,32],[231,37,210,35,"parts"],[231,43,210,40],[232,8,211,6],[232,9,211,7],[233,6,212,4],[234,6,213,4],[234,13,213,11],[235,8,214,6,"parts"],[235,13,214,11],[235,15,214,6,"parts"],[236,6,215,4],[236,7,215,5],[237,4,216,2],[238,4,217,2],[238,8,217,6,"config"],[238,14,217,12],[238,15,217,13,"exact"],[238,20,217,18],[238,24,217,22,"config"],[238,30,217,28],[238,31,217,29,"path"],[238,35,217,33],[238,40,217,38,"undefined"],[238,49,217,47],[238,51,217,49],[239,6,218,4],[239,12,218,10],[239,16,218,14,"Error"],[239,21,218,19],[239,22,218,20],[239,172,218,170],[239,173,218,171],[240,4,219,2],[242,4,221,2],[243,4,222,2],[244,4,223,2],[244,8,223,8,"parts"],[244,13,223,13],[244,16,223,16,"config"],[244,22,223,22],[244,23,223,23,"exact"],[244,28,223,28],[244,33,223,33],[244,37,223,37],[244,40,223,40],[244,41,223,41],[244,45,223,45,"parentParts"],[244,56,223,56],[244,60,223,60],[244,62,223,62],[244,63,223,63],[244,65,223,65],[244,69,223,69,"config"],[244,75,223,75],[244,76,223,76,"path"],[244,80,223,80],[244,83,223,83],[244,87,223,83,"getPatternParts"],[244,119,223,98],[244,121,223,99,"config"],[244,127,223,105],[244,128,223,106,"path"],[244,132,223,110],[244,133,223,111],[244,136,223,114],[244,138,223,116],[244,139,223,117],[244,140,223,118],[244,143,223,121,"config"],[244,149,223,127],[244,150,223,128,"path"],[244,154,223,132],[244,157,223,135],[244,161,223,135,"getPatternParts"],[244,193,223,150],[244,195,223,151,"config"],[244,201,223,157],[244,202,223,158,"path"],[244,206,223,162],[244,207,223,163],[244,210,223,166,"undefined"],[244,219,223,175],[245,4,224,2],[245,8,224,8,"screens"],[245,15,224,15],[245,18,224,18,"config"],[245,24,224,24],[245,25,224,25,"screens"],[245,32,224,32],[245,35,224,35,"createNormalizedConfigs"],[245,58,224,58],[245,59,224,59,"config"],[245,65,224,65],[245,66,224,66,"screens"],[245,73,224,73],[245,75,224,75,"parts"],[245,80,224,80],[245,81,224,81],[245,84,224,84,"undefined"],[245,93,224,93],[246,4,225,2],[246,11,225,9],[247,6,226,4,"parts"],[247,11,226,9],[248,6,227,4,"stringify"],[248,15,227,13],[248,17,227,15,"config"],[248,23,227,21],[248,24,227,22,"stringify"],[248,33,227,31],[249,6,228,4,"screens"],[250,4,229,2],[250,5,229,3],[251,2,230,0],[251,3,230,1],[252,2,231,0],[252,6,231,6,"createNormalizedConfigs"],[252,29,231,29],[252,32,231,32,"createNormalizedConfigs"],[252,33,231,33,"options"],[252,40,231,40],[252,42,231,42,"parts"],[252,47,231,47],[252,52,231,52,"Object"],[252,58,231,58],[252,59,231,59,"fromEntries"],[252,70,231,70],[252,71,231,71,"Object"],[252,77,231,77],[252,78,231,78,"entries"],[252,85,231,85],[252,86,231,86,"options"],[252,93,231,93],[252,94,231,94],[252,95,231,95,"map"],[252,98,231,98],[252,99,231,99,"_ref7"],[252,104,231,99],[252,108,231,114],[253,4,231,114],[253,8,231,114,"_ref8"],[253,13,231,114],[253,20,231,114,"_slicedToArray2"],[253,35,231,114],[253,36,231,114,"default"],[253,43,231,114],[253,45,231,114,"_ref7"],[253,50,231,114],[254,6,231,101,"name"],[254,10,231,105],[254,13,231,105,"_ref8"],[254,18,231,105],[255,6,231,107,"c"],[255,7,231,108],[255,10,231,108,"_ref8"],[255,15,231,108],[256,4,232,2],[256,8,232,8,"result"],[256,14,232,14],[256,17,232,17,"createConfigItem"],[256,33,232,33],[256,34,232,34,"c"],[256,35,232,35],[256,37,232,37,"parts"],[256,42,232,42],[256,43,232,43],[257,4,233,2],[257,11,233,9],[257,12,233,10,"name"],[257,16,233,14],[257,18,233,16,"result"],[257,24,233,22],[257,25,233,23],[258,2,234,0],[258,3,234,1],[258,4,234,2],[258,5,234,3],[259,0,234,4],[259,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","options.parts.find$argument_0","Object.entries.map.filter$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B;mDCG,0BD;SDU,SG,sBH;oBIY;WJU;yBKuB;0ECsB,gCD;OLG;iFCK,sCD;CHoC;yBUC;CV0B;gCWC,mEP;COG,EX"}},"type":"js/module"}]}