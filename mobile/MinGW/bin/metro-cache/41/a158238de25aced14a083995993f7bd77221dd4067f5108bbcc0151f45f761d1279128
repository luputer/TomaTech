{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":183,"column":27}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":183,"column":27}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../Utilities/infoLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":16},"end":{"line":13,"column":47}}],"key":"te7FMDljSHoh4Ptoq0ebhkaWbSA="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var infoLog = require(_dependencyMap[2], \"../Utilities/infoLog\");\n  var invariant = require(_dependencyMap[3], \"invariant\");\n  var DEBUG = false;\n  var TaskQueue = /*#__PURE__*/function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n      _classCallCheck(this, TaskQueue);\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n    return _createClass(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        tasks.forEach(task => this.enqueue(task));\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(queue => ({\n          ...queue,\n          tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1)\n        })).filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n        if (queue.length) {\n          var task = queue.shift();\n          try {\n            if (typeof task === 'object' && task.gen) {\n              DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n              this._genPromise(task);\n            } else if (typeof task === 'object' && task.run) {\n              DEBUG && infoLog('TaskQueue: run task ' + task.name);\n              task.run();\n            } else {\n              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && infoLog('TaskQueue: run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n          DEBUG && infoLog('TaskQueue: popped queue: ', {\n            stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n        var stackIdx = this._queueStack.length - 1;\n        var stackItem = this._queueStack[stackIdx];\n        DEBUG && infoLog('TaskQueue: push new queue: ', {\n          stackIdx\n        });\n        DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n        task.gen().then(() => {\n          DEBUG && infoLog('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          stackItem.popable = true;\n          this.hasTasksToProcess() && this._onMoreTasks();\n        }).catch(ex => {\n          setTimeout(() => {\n            ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n            throw ex;\n          }, 0);\n        });\n      }\n    }]);\n  }();\n  module.exports = TaskQueue;\n});","lineCount":112,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_classCallCheck"],[4,21,11,13],[4,24,11,13,"require"],[4,31,11,13],[4,32,11,13,"_dependencyMap"],[4,46,11,13],[5,2,11,13],[5,6,11,13,"_createClass"],[5,18,11,13],[5,21,11,13,"require"],[5,28,11,13],[5,29,11,13,"_dependencyMap"],[5,43,11,13],[6,2,13,0],[6,6,13,6,"infoLog"],[6,13,13,13],[6,16,13,16,"require"],[6,23,13,23],[6,24,13,23,"_dependencyMap"],[6,38,13,23],[6,65,13,46],[6,66,13,47],[7,2,14,0],[7,6,14,6,"invariant"],[7,15,14,15],[7,18,14,18,"require"],[7,25,14,25],[7,26,14,25,"_dependencyMap"],[7,40,14,25],[7,56,14,37],[7,57,14,38],[8,2,26,0],[8,6,26,6,"DEBUG"],[8,11,26,18],[8,14,26,21],[8,19,26,26],[9,2,26,27],[9,6,44,6,"TaskQueue"],[9,15,44,15],[10,4,52,2],[10,13,52,2,"TaskQueue"],[10,23,52,2,"_ref"],[10,27,52,2],[10,29,52,61],[11,6,52,61],[11,10,52,15,"onMoreTasks"],[11,21,52,26],[11,24,52,26,"_ref"],[11,28,52,26],[11,29,52,15,"onMoreTasks"],[11,40,52,26],[12,6,52,26,"_classCallCheck"],[12,21,52,26],[12,28,52,26,"TaskQueue"],[12,37,52,26],[13,6,53,4],[13,10,53,8],[13,11,53,9,"_onMoreTasks"],[13,23,53,21],[13,26,53,24,"onMoreTasks"],[13,37,53,35],[14,6,54,4],[14,10,54,8],[14,11,54,9,"_queueStack"],[14,22,54,20],[14,25,54,23],[14,26,54,24],[15,8,54,25,"tasks"],[15,13,54,30],[15,15,54,32],[15,17,54,34],[16,8,54,36,"popable"],[16,15,54,43],[16,17,54,45],[17,6,54,50],[17,7,54,51],[17,8,54,52],[18,4,55,2],[19,4,55,3],[19,11,55,3,"_createClass"],[19,23,55,3],[19,24,55,3,"TaskQueue"],[19,33,55,3],[20,6,55,3,"key"],[20,9,55,3],[21,6,55,3,"value"],[21,11,55,3],[21,13,62,2],[21,22,62,2,"enqueue"],[21,29,62,9,"enqueue"],[21,30,62,10,"task"],[21,34,62,20],[21,36,62,28],[22,8,63,4],[22,12,63,8],[22,13,63,9,"_getCurrentQueue"],[22,29,63,25],[22,30,63,26],[22,31,63,27],[22,32,63,28,"push"],[22,36,63,32],[22,37,63,33,"task"],[22,41,63,37],[22,42,63,38],[23,6,64,2],[24,4,64,3],[25,6,64,3,"key"],[25,9,64,3],[26,6,64,3,"value"],[26,11,64,3],[26,13,66,2],[26,22,66,2,"enqueueTasks"],[26,34,66,14,"enqueueTasks"],[26,35,66,15,"tasks"],[26,40,66,33],[26,42,66,41],[27,8,67,4,"tasks"],[27,13,67,9],[27,14,67,10,"forEach"],[27,21,67,17],[27,22,67,18,"task"],[27,26,67,22],[27,30,67,26],[27,34,67,30],[27,35,67,31,"enqueue"],[27,42,67,38],[27,43,67,39,"task"],[27,47,67,43],[27,48,67,44],[27,49,67,45],[28,6,68,2],[29,4,68,3],[30,6,68,3,"key"],[30,9,68,3],[31,6,68,3,"value"],[31,11,68,3],[31,13,70,2],[31,22,70,2,"cancelTasks"],[31,33,70,13,"cancelTasks"],[31,34,70,14,"tasksToCancel"],[31,47,70,40],[31,49,70,48],[32,8,72,4],[32,12,72,8],[32,13,72,9,"_queueStack"],[32,24,72,20],[32,27,72,23],[32,31,72,27],[32,32,72,28,"_queueStack"],[32,43,72,39],[32,44,73,7,"map"],[32,47,73,10],[32,48,73,11,"queue"],[32,53,73,16],[32,58,73,21],[33,10,74,8],[33,13,74,11,"queue"],[33,18,74,16],[34,10,75,8,"tasks"],[34,15,75,13],[34,17,75,15,"queue"],[34,22,75,20],[34,23,75,21,"tasks"],[34,28,75,26],[34,29,75,27,"filter"],[34,35,75,33],[34,36,75,34,"task"],[34,40,75,38],[34,44,75,42,"tasksToCancel"],[34,57,75,55],[34,58,75,56,"indexOf"],[34,65,75,63],[34,66,75,64,"task"],[34,70,75,68],[34,71,75,69],[34,76,75,74],[34,77,75,75],[34,78,75,76],[35,8,76,6],[35,9,76,7],[35,10,76,8],[35,11,76,9],[35,12,77,7,"filter"],[35,18,77,13],[35,19,77,14],[35,20,77,15,"queue"],[35,25,77,20],[35,27,77,22,"idx"],[35,30,77,25],[35,35,77,30,"queue"],[35,40,77,35],[35,41,77,36,"tasks"],[35,46,77,41],[35,47,77,42,"length"],[35,53,77,48],[35,56,77,51],[35,57,77,52],[35,61,77,56,"idx"],[35,64,77,59],[35,69,77,64],[35,70,77,65],[35,71,77,66],[36,6,78,2],[37,4,78,3],[38,6,78,3,"key"],[38,9,78,3],[39,6,78,3,"value"],[39,11,78,3],[39,13,90,2],[39,22,90,2,"hasTasksToProcess"],[39,39,90,19,"hasTasksToProcess"],[39,40,90,19],[39,42,90,31],[40,8,91,4],[40,15,91,11],[40,19,91,15],[40,20,91,16,"_getCurrentQueue"],[40,36,91,32],[40,37,91,33],[40,38,91,34],[40,39,91,35,"length"],[40,45,91,41],[40,48,91,44],[40,49,91,45],[41,6,92,2],[42,4,92,3],[43,6,92,3,"key"],[43,9,92,3],[44,6,92,3,"value"],[44,11,92,3],[44,13,97,2],[44,22,97,2,"processNext"],[44,33,97,13,"processNext"],[44,34,97,13],[44,36,97,22],[45,8,98,4],[45,12,98,10,"queue"],[45,17,98,15],[45,20,98,18],[45,24,98,22],[45,25,98,23,"_getCurrentQueue"],[45,41,98,39],[45,42,98,40],[45,43,98,41],[46,8,99,4],[46,12,99,8,"queue"],[46,17,99,13],[46,18,99,14,"length"],[46,24,99,20],[46,26,99,22],[47,10,100,6],[47,14,100,12,"task"],[47,18,100,16],[47,21,100,19,"queue"],[47,26,100,24],[47,27,100,25,"shift"],[47,32,100,30],[47,33,100,31],[47,34,100,32],[48,10,101,6],[48,14,101,10],[49,12,102,8],[49,16,102,12],[49,23,102,19,"task"],[49,27,102,23],[49,32,102,28],[49,40,102,36],[49,44,102,40,"task"],[49,48,102,44],[49,49,102,45,"gen"],[49,52,102,48],[49,54,102,50],[50,14,103,10,"DEBUG"],[50,19,103,15],[50,23,103,19,"infoLog"],[50,30,103,26],[50,31,103,27],[50,64,103,60],[50,67,103,63,"task"],[50,71,103,67],[50,72,103,68,"name"],[50,76,103,72],[50,77,103,73],[51,14,104,10],[51,18,104,14],[51,19,104,15,"_genPromise"],[51,30,104,26],[51,31,104,27,"task"],[51,35,104,31],[51,36,104,32],[52,12,105,8],[52,13,105,9],[52,19,105,15],[52,23,105,19],[52,30,105,26,"task"],[52,34,105,30],[52,39,105,35],[52,47,105,43],[52,51,105,47,"task"],[52,55,105,51],[52,56,105,52,"run"],[52,59,105,55],[52,61,105,57],[53,14,106,10,"DEBUG"],[53,19,106,15],[53,23,106,19,"infoLog"],[53,30,106,26],[53,31,106,27],[53,53,106,49],[53,56,106,52,"task"],[53,60,106,56],[53,61,106,57,"name"],[53,65,106,61],[53,66,106,62],[54,14,107,10,"task"],[54,18,107,14],[54,19,107,15,"run"],[54,22,107,18],[54,23,107,19],[54,24,107,20],[55,12,108,8],[55,13,108,9],[55,19,108,15],[56,14,109,10,"invariant"],[56,23,109,19],[56,24,110,12],[56,31,110,19,"task"],[56,35,110,23],[56,40,110,28],[56,50,110,38],[56,52,111,12],[56,111,111,71],[56,114,112,14,"JSON"],[56,118,112,18],[56,119,112,19,"stringify"],[56,128,112,28],[56,129,112,29,"task"],[56,133,112,33],[56,135,112,35],[56,139,112,39],[56,141,112,41],[56,142,112,42],[56,143,113,10],[56,144,113,11],[57,14,114,10,"DEBUG"],[57,19,114,15],[57,23,114,19,"infoLog"],[57,30,114,26],[57,31,114,27],[57,62,114,58],[57,63,114,59],[58,14,115,10,"task"],[58,18,115,14],[58,19,115,15],[58,20,115,16],[59,12,116,8],[60,10,117,6],[60,11,117,7],[60,12,117,8],[60,19,117,15,"e"],[60,20,117,16],[60,22,117,18],[61,12,118,8,"e"],[61,13,118,9],[61,14,118,10,"message"],[61,21,118,17],[61,24,120,10],[61,53,120,39],[61,57,120,43,"task"],[61,61,120,47],[61,62,120,48,"name"],[61,66,120,52],[61,70,120,56],[61,72,120,58],[61,73,120,59],[61,76,120,62],[61,80,120,66],[61,83,120,69,"e"],[61,84,120,70],[61,85,120,71,"message"],[61,92,120,78],[62,12,121,8],[62,18,121,14,"e"],[62,19,121,15],[63,10,122,6],[64,8,123,4],[65,6,124,2],[66,4,124,3],[67,6,124,3,"key"],[67,9,124,3],[68,6,124,3,"value"],[68,11,124,3],[68,13,133,2],[68,22,133,2,"_getCurrentQueue"],[68,38,133,18,"_getCurrentQueue"],[68,39,133,18],[68,41,133,34],[69,8,134,4],[69,12,134,10,"stackIdx"],[69,20,134,18],[69,23,134,21],[69,27,134,25],[69,28,134,26,"_queueStack"],[69,39,134,37],[69,40,134,38,"length"],[69,46,134,44],[69,49,134,47],[69,50,134,48],[70,8,135,4],[70,12,135,10,"queue"],[70,17,135,15],[70,20,135,18],[70,24,135,22],[70,25,135,23,"_queueStack"],[70,36,135,34],[70,37,135,35,"stackIdx"],[70,45,135,43],[70,46,135,44],[71,8,136,4],[71,12,137,6,"queue"],[71,17,137,11],[71,18,137,12,"popable"],[71,25,137,19],[71,29,138,6,"queue"],[71,34,138,11],[71,35,138,12,"tasks"],[71,40,138,17],[71,41,138,18,"length"],[71,47,138,24],[71,52,138,29],[71,53,138,30],[71,57,139,6],[71,61,139,10],[71,62,139,11,"_queueStack"],[71,73,139,22],[71,74,139,23,"length"],[71,80,139,29],[71,83,139,32],[71,84,139,33],[71,86,140,6],[72,10,141,6],[72,14,141,10],[72,15,141,11,"_queueStack"],[72,26,141,22],[72,27,141,23,"pop"],[72,30,141,26],[72,31,141,27],[72,32,141,28],[73,10,142,6,"DEBUG"],[73,15,142,11],[73,19,143,8,"infoLog"],[73,26,143,15],[73,27,143,16],[73,54,143,43],[73,56,143,45],[74,12,144,10,"stackIdx"],[74,20,144,18],[75,12,145,10,"queueStackSize"],[75,26,145,24],[75,28,145,26],[75,32,145,30],[75,33,145,31,"_queueStack"],[75,44,145,42],[75,45,145,43,"length"],[76,10,146,8],[76,11,146,9],[76,12,146,10],[77,10,147,6],[77,17,147,13],[77,21,147,17],[77,22,147,18,"_getCurrentQueue"],[77,38,147,34],[77,39,147,35],[77,40,147,36],[78,8,148,4],[78,9,148,5],[78,15,148,11],[79,10,149,6],[79,17,149,13,"queue"],[79,22,149,18],[79,23,149,19,"tasks"],[79,28,149,24],[80,8,150,4],[81,6,151,2],[82,4,151,3],[83,6,151,3,"key"],[83,9,151,3],[84,6,151,3,"value"],[84,11,151,3],[84,13,153,2],[84,22,153,2,"_genPromise"],[84,33,153,13,"_genPromise"],[84,34,153,14,"task"],[84,38,153,31],[84,40,153,33],[85,8,158,4],[85,12,158,8],[85,13,158,9,"_queueStack"],[85,24,158,20],[85,25,158,21,"push"],[85,29,158,25],[85,30,158,26],[86,10,158,27,"tasks"],[86,15,158,32],[86,17,158,34],[86,19,158,36],[87,10,158,38,"popable"],[87,17,158,45],[87,19,158,47],[88,8,158,52],[88,9,158,53],[88,10,158,54],[89,8,159,4],[89,12,159,10,"stackIdx"],[89,20,159,18],[89,23,159,21],[89,27,159,25],[89,28,159,26,"_queueStack"],[89,39,159,37],[89,40,159,38,"length"],[89,46,159,44],[89,49,159,47],[89,50,159,48],[90,8,160,4],[90,12,160,10,"stackItem"],[90,21,160,19],[90,24,160,22],[90,28,160,26],[90,29,160,27,"_queueStack"],[90,40,160,38],[90,41,160,39,"stackIdx"],[90,49,160,47],[90,50,160,48],[91,8,161,4,"DEBUG"],[91,13,161,9],[91,17,161,13,"infoLog"],[91,24,161,20],[91,25,161,21],[91,54,161,50],[91,56,161,52],[92,10,161,53,"stackIdx"],[93,8,161,61],[93,9,161,62],[93,10,161,63],[94,8,162,4,"DEBUG"],[94,13,162,9],[94,17,162,13,"infoLog"],[94,24,162,20],[94,25,162,21],[94,52,162,48],[94,55,162,51,"task"],[94,59,162,55],[94,60,162,56,"name"],[94,64,162,60],[94,65,162,61],[95,8,163,4,"task"],[95,12,163,8],[95,13,164,7,"gen"],[95,16,164,10],[95,17,164,11],[95,18,164,12],[95,19,165,7,"then"],[95,23,165,11],[95,24,165,12],[95,30,165,18],[96,10,166,8,"DEBUG"],[96,15,166,13],[96,19,167,10,"infoLog"],[96,26,167,17],[96,27,167,18],[96,60,167,51],[96,63,167,54,"task"],[96,67,167,58],[96,68,167,59,"name"],[96,72,167,63],[96,74,167,65],[97,12,168,12,"stackIdx"],[97,20,168,20],[98,12,169,12,"queueStackSize"],[98,26,169,26],[98,28,169,28],[98,32,169,32],[98,33,169,33,"_queueStack"],[98,44,169,44],[98,45,169,45,"length"],[99,10,170,10],[99,11,170,11],[99,12,170,12],[100,10,171,8,"stackItem"],[100,19,171,17],[100,20,171,18,"popable"],[100,27,171,25],[100,30,171,28],[100,34,171,32],[101,10,172,8],[101,14,172,12],[101,15,172,13,"hasTasksToProcess"],[101,32,172,30],[101,33,172,31],[101,34,172,32],[101,38,172,36],[101,42,172,40],[101,43,172,41,"_onMoreTasks"],[101,55,172,53],[101,56,172,54],[101,57,172,55],[102,8,173,6],[102,9,173,7],[102,10,173,8],[102,11,174,7,"catch"],[102,16,174,12],[102,17,174,13,"ex"],[102,19,174,15],[102,23,174,19],[103,10,175,8,"setTimeout"],[103,20,175,18],[103,21,175,19],[103,27,175,25],[104,12,176,10,"ex"],[104,14,176,12],[104,15,176,13,"message"],[104,22,176,20],[104,25,176,23],[104,71,176,69,"task"],[104,75,176,73],[104,76,176,74,"name"],[104,80,176,78],[104,85,176,83,"ex"],[104,87,176,85],[104,88,176,86,"message"],[104,95,176,93],[104,97,176,95],[105,12,177,10],[105,18,177,16,"ex"],[105,20,177,18],[106,10,178,8],[106,11,178,9],[106,13,178,11],[106,14,178,12],[106,15,178,13],[107,8,179,6],[107,9,179,7],[107,10,179,8],[108,6,180,2],[109,4,180,3],[110,2,180,3],[111,2,183,0,"module"],[111,8,183,6],[111,9,183,7,"exports"],[111,16,183,14],[111,19,183,17,"TaskQueue"],[111,28,183,26],[112,0,183,27],[112,3]],"functionMap":{"names":["<global>","TaskQueue","constructor","enqueue","enqueueTasks","tasks.forEach$argument_0","cancelTasks","_queueStack.map$argument_0","queue.tasks.filter$argument_0","_queueStack.map.filter$argument_0","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","task.gen.then$argument_0","task.gen.then._catch$argument_0","setTimeout$argument_0"],"mappings":"AAA;AC2C;ECQ;GDG;EEO;GFE;EGE;kBCC,0BD;GHC;EKE;WCG;kCCE,0CD;QDC;cGC,mDH;GLC;ESY;GTE;EUK;GV2B;EWS;GXkB;EYE;YCY;ODQ;aEC;mBCC;SDG;OFC;GZC;CDC"}},"type":"js/module"}]}