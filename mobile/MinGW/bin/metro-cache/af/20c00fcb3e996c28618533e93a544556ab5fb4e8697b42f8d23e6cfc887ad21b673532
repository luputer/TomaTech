{"dependencies":[{"name":"./parseHermesStack","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":25},"end":{"line":16,"column":54}}],"key":"+0TK05UiAfoSFoPMCSY1aPHKwYE="}},{"name":"stacktrace-parser","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":46,"column":27},"end":{"line":46,"column":55}}],"key":"/USIDQIXWvbDieir50qMEeMzgbw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var parseHermesStack = require(_dependencyMap[0], \"./parseHermesStack\");\n  function convertHermesStack(stack) {\n    var frames = [];\n    for (var entry of stack.entries) {\n      if (entry.type !== 'FRAME') {\n        continue;\n      }\n      var location = entry.location,\n        functionName = entry.functionName;\n      if (location.type === 'NATIVE' || location.type === 'INTERNAL_BYTECODE') {\n        continue;\n      }\n      frames.push({\n        methodName: functionName,\n        file: location.sourceUrl,\n        lineNumber: location.line1Based,\n        column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n      });\n    }\n    return frames;\n  }\n  function parseErrorStack(errorStack) {\n    if (errorStack == null) {\n      return [];\n    }\n    var stacktraceParser = require(_dependencyMap[1], \"stacktrace-parser\");\n    var parsedStack = Array.isArray(errorStack) ? errorStack : global.HermesInternal ? convertHermesStack(parseHermesStack(errorStack)) : stacktraceParser.parse(errorStack).map(frame => ({\n      ...frame,\n      column: frame.column != null ? frame.column - 1 : null\n    }));\n    return parsedStack;\n  }\n  module.exports = parseErrorStack;\n});","lineCount":37,"map":[[2,2,11,0],[2,14,11,12],[4,2,16,0],[4,6,16,6,"parseHermesStack"],[4,22,16,22],[4,25,16,25,"require"],[4,32,16,32],[4,33,16,32,"_dependencyMap"],[4,47,16,32],[4,72,16,53],[4,73,16,54],[5,2,18,0],[5,11,18,9,"convertHermesStack"],[5,29,18,27,"convertHermesStack"],[5,30,18,28,"stack"],[5,35,18,52],[5,37,18,73],[6,4,19,2],[6,8,19,8,"frames"],[6,14,19,33],[6,17,19,36],[6,19,19,38],[7,4,20,2],[7,9,20,7],[7,13,20,13,"entry"],[7,18,20,18],[7,22,20,22,"stack"],[7,27,20,27],[7,28,20,28,"entries"],[7,35,20,35],[7,37,20,37],[8,6,21,4],[8,10,21,8,"entry"],[8,15,21,13],[8,16,21,14,"type"],[8,20,21,18],[8,25,21,23],[8,32,21,30],[8,34,21,32],[9,8,22,6],[10,6,23,4],[11,6,24,4],[11,10,24,11,"location"],[11,18,24,19],[11,21,24,37,"entry"],[11,26,24,42],[11,27,24,11,"location"],[11,35,24,19],[12,8,24,21,"functionName"],[12,20,24,33],[12,23,24,37,"entry"],[12,28,24,42],[12,29,24,21,"functionName"],[12,41,24,33],[13,6,25,4],[13,10,25,8,"location"],[13,18,25,16],[13,19,25,17,"type"],[13,23,25,21],[13,28,25,26],[13,36,25,34],[13,40,25,38,"location"],[13,48,25,46],[13,49,25,47,"type"],[13,53,25,51],[13,58,25,56],[13,77,25,75],[13,79,25,77],[14,8,26,6],[15,6,27,4],[16,6,28,4,"frames"],[16,12,28,10],[16,13,28,11,"push"],[16,17,28,15],[16,18,28,16],[17,8,29,6,"methodName"],[17,18,29,16],[17,20,29,18,"functionName"],[17,32,29,30],[18,8,30,6,"file"],[18,12,30,10],[18,14,30,12,"location"],[18,22,30,20],[18,23,30,21,"sourceUrl"],[18,32,30,30],[19,8,31,6,"lineNumber"],[19,18,31,16],[19,20,31,18,"location"],[19,28,31,26],[19,29,31,27,"line1Based"],[19,39,31,37],[20,8,32,6,"column"],[20,14,32,12],[20,16,33,8,"location"],[20,24,33,16],[20,25,33,17,"type"],[20,29,33,21],[20,34,33,26],[20,42,33,34],[20,45,34,12,"location"],[20,53,34,20],[20,54,34,21,"column1Based"],[20,66,34,33],[20,69,34,36],[20,70,34,37],[20,73,35,12,"location"],[20,81,35,20],[20,82,35,21,"virtualOffset0Based"],[21,6,36,4],[21,7,36,5],[21,8,36,6],[22,4,37,2],[23,4,38,2],[23,11,38,9,"frames"],[23,17,38,15],[24,2,39,0],[25,2,41,0],[25,11,41,9,"parseErrorStack"],[25,26,41,24,"parseErrorStack"],[25,27,41,25,"errorStack"],[25,37,41,44],[25,39,41,65],[26,4,42,2],[26,8,42,6,"errorStack"],[26,18,42,16],[26,22,42,20],[26,26,42,24],[26,28,42,26],[27,6,43,4],[27,13,43,11],[27,15,43,13],[28,4,44,2],[29,4,46,2],[29,8,46,8,"stacktraceParser"],[29,24,46,24],[29,27,46,27,"require"],[29,34,46,34],[29,35,46,34,"_dependencyMap"],[29,49,46,34],[29,73,46,54],[29,74,46,55],[30,4,47,2],[30,8,47,8,"parsedStack"],[30,19,47,19],[30,22,47,22,"Array"],[30,27,47,27],[30,28,47,28,"isArray"],[30,35,47,35],[30,36,47,36,"errorStack"],[30,46,47,46],[30,47,47,47],[30,50,48,6,"errorStack"],[30,60,48,16],[30,63,49,6,"global"],[30,69,49,12],[30,70,49,13,"HermesInternal"],[30,84,49,27],[30,87,50,8,"convertHermesStack"],[30,105,50,26],[30,106,50,27,"parseHermesStack"],[30,122,50,43],[30,123,50,44,"errorStack"],[30,133,50,54],[30,134,50,55],[30,135,50,56],[30,138,51,8,"stacktraceParser"],[30,154,51,24],[30,155,51,25,"parse"],[30,160,51,30],[30,161,51,31,"errorStack"],[30,171,51,41],[30,172,51,42],[30,173,51,43,"map"],[30,176,51,46],[30,177,51,48,"frame"],[30,182,51,53],[30,187,51,71],[31,6,52,10],[31,9,52,13,"frame"],[31,14,52,18],[32,6,53,10,"column"],[32,12,53,16],[32,14,53,18,"frame"],[32,19,53,23],[32,20,53,24,"column"],[32,26,53,30],[32,30,53,34],[32,34,53,38],[32,37,53,41,"frame"],[32,42,53,46],[32,43,53,47,"column"],[32,49,53,53],[32,52,53,56],[32,53,53,57],[32,56,53,60],[33,4,54,8],[33,5,54,9],[33,6,54,10],[33,7,54,11],[34,4,56,2],[34,11,56,9,"parsedStack"],[34,22,56,20],[35,2,57,0],[36,2,59,0,"module"],[36,8,59,6],[36,9,59,7,"exports"],[36,16,59,14],[36,19,59,17,"parseErrorStack"],[36,34,59,32],[37,0,59,33],[37,3]],"functionMap":{"names":["<global>","convertHermesStack","parseErrorStack","stacktraceParser.parse.map$argument_0"],"mappings":"AAA;ACiB;CDqB;AEE;+CCU;UDG;CFG"}},"type":"js/module"}]}