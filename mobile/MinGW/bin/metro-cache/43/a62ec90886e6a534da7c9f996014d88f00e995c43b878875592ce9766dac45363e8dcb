{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveHrefStringWithSegments = exports.resolveHref = void 0;\n  /** Resolve an href object into a fully qualified, relative href. */\n  const resolveHref = href => {\n    if (typeof href === 'string') {\n      return (0, exports.resolveHref)({\n        pathname: href\n      });\n    }\n    const path = href.pathname ?? '';\n    if (!href?.params) {\n      return path;\n    }\n    const {\n      pathname,\n      params\n    } = createQualifiedPathname(path, Object.assign({}, href.params));\n    const paramsString = createQueryParams(params);\n    return pathname + (paramsString ? `?${paramsString}` : '');\n  };\n  exports.resolveHref = resolveHref;\n  function resolveHrefStringWithSegments(href, {\n    segments = [],\n    params = {}\n  } = {}, {\n    relativeToDirectory\n  } = {}) {\n    if (href.startsWith('.')) {\n      // Resolve base path by merging the current segments with the params\n      let base = segments?.map(segment => {\n        if (!segment.startsWith('[')) return segment;\n        if (segment.startsWith('[...')) {\n          segment = segment.slice(4, -1);\n          const param = params[segment];\n          if (Array.isArray(param)) {\n            return param.join('/');\n          } else {\n            return param?.split(',')?.join('/') ?? '';\n          }\n        } else {\n          segment = segment.slice(1, -1);\n          return params[segment];\n        }\n      }).filter(Boolean).join('/') ?? '/';\n      if (relativeToDirectory) {\n        base = `${base}/`;\n      }\n      const url = new URL(href, `http://hostname/${base}`);\n      href = `${url.pathname}${url.search}`;\n    }\n    return href;\n  }\n  exports.resolveHrefStringWithSegments = resolveHrefStringWithSegments;\n  function createQualifiedPathname(pathname, params) {\n    for (const [key, value = ''] of Object.entries(params)) {\n      const dynamicKey = `[${key}]`;\n      const deepDynamicKey = `[...${key}]`;\n      if (pathname.includes(dynamicKey)) {\n        pathname = pathname.replace(dynamicKey, encodeParam(value));\n      } else if (pathname.includes(deepDynamicKey)) {\n        pathname = pathname.replace(deepDynamicKey, encodeParam(value));\n      } else {\n        continue;\n      }\n      delete params[key];\n    }\n    return {\n      pathname,\n      params\n    };\n  }\n  function encodeParam(param) {\n    if (Array.isArray(param)) {\n      return param.map(p => encodeParam(p)).join('/');\n    }\n    return encodeURIComponent(param.toString());\n  }\n  function createQueryParams(params) {\n    return Object.entries(params)\n    // Allow nullish params\n    .filter(([, value]) => value != null).map(([key, value]) => `${key}=${encodeURIComponent(value.toString())}`).join('&');\n  }\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"resolveHrefStringWithSegments"],[7,39,3,37],[7,42,3,40,"exports"],[7,49,3,47],[7,50,3,48,"resolveHref"],[7,61,3,59],[7,64,3,62],[7,69,3,67],[7,70,3,68],[8,2,4,0],[9,2,5,0],[9,8,5,6,"resolveHref"],[9,19,5,17],[9,22,5,21,"href"],[9,26,5,25],[9,30,5,30],[10,4,6,4],[10,8,6,8],[10,15,6,15,"href"],[10,19,6,19],[10,24,6,24],[10,32,6,32],[10,34,6,34],[11,6,7,8],[11,13,7,15],[11,14,7,16],[11,15,7,17],[11,17,7,19,"exports"],[11,24,7,26],[11,25,7,27,"resolveHref"],[11,36,7,38],[11,38,7,40],[12,8,7,42,"pathname"],[12,16,7,50],[12,18,7,52,"href"],[13,6,7,57],[13,7,7,58],[13,8,7,59],[14,4,8,4],[15,4,9,4],[15,10,9,10,"path"],[15,14,9,14],[15,17,9,17,"href"],[15,21,9,21],[15,22,9,22,"pathname"],[15,30,9,30],[15,34,9,34],[15,36,9,36],[16,4,10,4],[16,8,10,8],[16,9,10,9,"href"],[16,13,10,13],[16,15,10,15,"params"],[16,21,10,21],[16,23,10,23],[17,6,11,8],[17,13,11,15,"path"],[17,17,11,19],[18,4,12,4],[19,4,13,4],[19,10,13,10],[20,6,13,12,"pathname"],[20,14,13,20],[21,6,13,22,"params"],[22,4,13,29],[22,5,13,30],[22,8,13,33,"createQualifiedPathname"],[22,31,13,56],[22,32,13,57,"path"],[22,36,13,61],[22,38,13,61,"Object"],[22,44,13,61],[22,45,13,61,"assign"],[22,51,13,61],[22,56,14,11,"href"],[22,60,14,15],[22,61,14,16,"params"],[22,67,14,22],[22,68,15,5],[22,69,15,6],[23,4,16,4],[23,10,16,10,"paramsString"],[23,22,16,22],[23,25,16,25,"createQueryParams"],[23,42,16,42],[23,43,16,43,"params"],[23,49,16,49],[23,50,16,50],[24,4,17,4],[24,11,17,11,"pathname"],[24,19,17,19],[24,23,17,23,"paramsString"],[24,35,17,35],[24,38,17,38],[24,42,17,42,"paramsString"],[24,54,17,54],[24,56,17,56],[24,59,17,59],[24,61,17,61],[24,62,17,62],[25,2,18,0],[25,3,18,1],[26,2,19,0,"exports"],[26,9,19,7],[26,10,19,8,"resolveHref"],[26,21,19,19],[26,24,19,22,"resolveHref"],[26,35,19,33],[27,2,20,0],[27,11,20,9,"resolveHrefStringWithSegments"],[27,40,20,38,"resolveHrefStringWithSegments"],[27,41,20,39,"href"],[27,45,20,43],[27,47,20,45],[28,4,20,47,"segments"],[28,12,20,55],[28,15,20,58],[28,17,20,60],[29,4,20,62,"params"],[29,10,20,68],[29,13,20,71],[29,14,20,72],[30,2,20,74],[30,3,20,75],[30,6,20,78],[30,7,20,79],[30,8,20,80],[30,10,20,82],[31,4,20,84,"relativeToDirectory"],[32,2,20,104],[32,3,20,105],[32,6,20,108],[32,7,20,109],[32,8,20,110],[32,10,20,112],[33,4,21,4],[33,8,21,8,"href"],[33,12,21,12],[33,13,21,13,"startsWith"],[33,23,21,23],[33,24,21,24],[33,27,21,27],[33,28,21,28],[33,30,21,30],[34,6,22,8],[35,6,23,8],[35,10,23,12,"base"],[35,14,23,16],[35,17,23,19,"segments"],[35,25,23,27],[35,27,24,14,"map"],[35,30,24,17],[35,31,24,19,"segment"],[35,38,24,26],[35,42,24,31],[36,8,25,12],[36,12,25,16],[36,13,25,17,"segment"],[36,20,25,24],[36,21,25,25,"startsWith"],[36,31,25,35],[36,32,25,36],[36,35,25,39],[36,36,25,40],[36,38,26,16],[36,45,26,23,"segment"],[36,52,26,30],[37,8,27,12],[37,12,27,16,"segment"],[37,19,27,23],[37,20,27,24,"startsWith"],[37,30,27,34],[37,31,27,35],[37,37,27,41],[37,38,27,42],[37,40,27,44],[38,10,28,16,"segment"],[38,17,28,23],[38,20,28,26,"segment"],[38,27,28,33],[38,28,28,34,"slice"],[38,33,28,39],[38,34,28,40],[38,35,28,41],[38,37,28,43],[38,38,28,44],[38,39,28,45],[38,40,28,46],[39,10,29,16],[39,16,29,22,"param"],[39,21,29,27],[39,24,29,30,"params"],[39,30,29,36],[39,31,29,37,"segment"],[39,38,29,44],[39,39,29,45],[40,10,30,16],[40,14,30,20,"Array"],[40,19,30,25],[40,20,30,26,"isArray"],[40,27,30,33],[40,28,30,34,"param"],[40,33,30,39],[40,34,30,40],[40,36,30,42],[41,12,31,20],[41,19,31,27,"param"],[41,24,31,32],[41,25,31,33,"join"],[41,29,31,37],[41,30,31,38],[41,33,31,41],[41,34,31,42],[42,10,32,16],[42,11,32,17],[42,17,33,21],[43,12,34,20],[43,19,34,27,"param"],[43,24,34,32],[43,26,34,34,"split"],[43,31,34,39],[43,32,34,40],[43,35,34,43],[43,36,34,44],[43,38,34,46,"join"],[43,42,34,50],[43,43,34,51],[43,46,34,54],[43,47,34,55],[43,51,34,59],[43,53,34,61],[44,10,35,16],[45,8,36,12],[45,9,36,13],[45,15,37,17],[46,10,38,16,"segment"],[46,17,38,23],[46,20,38,26,"segment"],[46,27,38,33],[46,28,38,34,"slice"],[46,33,38,39],[46,34,38,40],[46,35,38,41],[46,37,38,43],[46,38,38,44],[46,39,38,45],[46,40,38,46],[47,10,39,16],[47,17,39,23,"params"],[47,23,39,29],[47,24,39,30,"segment"],[47,31,39,37],[47,32,39,38],[48,8,40,12],[49,6,41,8],[49,7,41,9],[49,8,41,10],[49,9,42,13,"filter"],[49,15,42,19],[49,16,42,20,"Boolean"],[49,23,42,27],[49,24,42,28],[49,25,43,13,"join"],[49,29,43,17],[49,30,43,18],[49,33,43,21],[49,34,43,22],[49,38,43,26],[49,41,43,29],[50,6,44,8],[50,10,44,12,"relativeToDirectory"],[50,29,44,31],[50,31,44,33],[51,8,45,12,"base"],[51,12,45,16],[51,15,45,19],[51,18,45,22,"base"],[51,22,45,26],[51,25,45,29],[52,6,46,8],[53,6,47,8],[53,12,47,14,"url"],[53,15,47,17],[53,18,47,20],[53,22,47,24,"URL"],[53,25,47,27],[53,26,47,28,"href"],[53,30,47,32],[53,32,47,34],[53,51,47,53,"base"],[53,55,47,57],[53,57,47,59],[53,58,47,60],[54,6,48,8,"href"],[54,10,48,12],[54,13,48,15],[54,16,48,18,"url"],[54,19,48,21],[54,20,48,22,"pathname"],[54,28,48,30],[54,31,48,33,"url"],[54,34,48,36],[54,35,48,37,"search"],[54,41,48,43],[54,43,48,45],[55,4,49,4],[56,4,50,4],[56,11,50,11,"href"],[56,15,50,15],[57,2,51,0],[58,2,52,0,"exports"],[58,9,52,7],[58,10,52,8,"resolveHrefStringWithSegments"],[58,39,52,37],[58,42,52,40,"resolveHrefStringWithSegments"],[58,71,52,69],[59,2,53,0],[59,11,53,9,"createQualifiedPathname"],[59,34,53,32,"createQualifiedPathname"],[59,35,53,33,"pathname"],[59,43,53,41],[59,45,53,43,"params"],[59,51,53,49],[59,53,53,51],[60,4,54,4],[60,9,54,9],[60,15,54,15],[60,16,54,16,"key"],[60,19,54,19],[60,21,54,21,"value"],[60,26,54,26],[60,29,54,29],[60,31,54,31],[60,32,54,32],[60,36,54,36,"Object"],[60,42,54,42],[60,43,54,43,"entries"],[60,50,54,50],[60,51,54,51,"params"],[60,57,54,57],[60,58,54,58],[60,60,54,60],[61,6,55,8],[61,12,55,14,"dynamicKey"],[61,22,55,24],[61,25,55,27],[61,29,55,31,"key"],[61,32,55,34],[61,35,55,37],[62,6,56,8],[62,12,56,14,"deepDynamicKey"],[62,26,56,28],[62,29,56,31],[62,36,56,38,"key"],[62,39,56,41],[62,42,56,44],[63,6,57,8],[63,10,57,12,"pathname"],[63,18,57,20],[63,19,57,21,"includes"],[63,27,57,29],[63,28,57,30,"dynamicKey"],[63,38,57,40],[63,39,57,41],[63,41,57,43],[64,8,58,12,"pathname"],[64,16,58,20],[64,19,58,23,"pathname"],[64,27,58,31],[64,28,58,32,"replace"],[64,35,58,39],[64,36,58,40,"dynamicKey"],[64,46,58,50],[64,48,58,52,"encodeParam"],[64,59,58,63],[64,60,58,64,"value"],[64,65,58,69],[64,66,58,70],[64,67,58,71],[65,6,59,8],[65,7,59,9],[65,13,60,13],[65,17,60,17,"pathname"],[65,25,60,25],[65,26,60,26,"includes"],[65,34,60,34],[65,35,60,35,"deepDynamicKey"],[65,49,60,49],[65,50,60,50],[65,52,60,52],[66,8,61,12,"pathname"],[66,16,61,20],[66,19,61,23,"pathname"],[66,27,61,31],[66,28,61,32,"replace"],[66,35,61,39],[66,36,61,40,"deepDynamicKey"],[66,50,61,54],[66,52,61,56,"encodeParam"],[66,63,61,67],[66,64,61,68,"value"],[66,69,61,73],[66,70,61,74],[66,71,61,75],[67,6,62,8],[67,7,62,9],[67,13,63,13],[68,8,64,12],[69,6,65,8],[70,6,66,8],[70,13,66,15,"params"],[70,19,66,21],[70,20,66,22,"key"],[70,23,66,25],[70,24,66,26],[71,4,67,4],[72,4,68,4],[72,11,68,11],[73,6,68,13,"pathname"],[73,14,68,21],[74,6,68,23,"params"],[75,4,68,30],[75,5,68,31],[76,2,69,0],[77,2,70,0],[77,11,70,9,"encodeParam"],[77,22,70,20,"encodeParam"],[77,23,70,21,"param"],[77,28,70,26],[77,30,70,28],[78,4,71,4],[78,8,71,8,"Array"],[78,13,71,13],[78,14,71,14,"isArray"],[78,21,71,21],[78,22,71,22,"param"],[78,27,71,27],[78,28,71,28],[78,30,71,30],[79,6,72,8],[79,13,72,15,"param"],[79,18,72,20],[79,19,72,21,"map"],[79,22,72,24],[79,23,72,26,"p"],[79,24,72,27],[79,28,72,32,"encodeParam"],[79,39,72,43],[79,40,72,44,"p"],[79,41,72,45],[79,42,72,46],[79,43,72,47],[79,44,72,48,"join"],[79,48,72,52],[79,49,72,53],[79,52,72,56],[79,53,72,57],[80,4,73,4],[81,4,74,4],[81,11,74,11,"encodeURIComponent"],[81,29,74,29],[81,30,74,30,"param"],[81,35,74,35],[81,36,74,36,"toString"],[81,44,74,44],[81,45,74,45],[81,46,74,46],[81,47,74,47],[82,2,75,0],[83,2,76,0],[83,11,76,9,"createQueryParams"],[83,28,76,26,"createQueryParams"],[83,29,76,27,"params"],[83,35,76,33],[83,37,76,35],[84,4,77,4],[84,11,77,12,"Object"],[84,17,77,18],[84,18,77,19,"entries"],[84,25,77,26],[84,26,77,27,"params"],[84,32,77,33],[85,4,78,8],[86,4,78,8],[86,5,79,9,"filter"],[86,11,79,15],[86,12,79,16],[86,13,79,17],[86,16,79,20,"value"],[86,21,79,25],[86,22,79,26],[86,27,79,31,"value"],[86,32,79,36],[86,36,79,40],[86,40,79,44],[86,41,79,45],[86,42,80,9,"map"],[86,45,80,12],[86,46,80,13],[86,47,80,14],[86,48,80,15,"key"],[86,51,80,18],[86,53,80,20,"value"],[86,58,80,25],[86,59,80,26],[86,64,80,31],[86,67,80,34,"key"],[86,70,80,37],[86,74,80,41,"encodeURIComponent"],[86,92,80,59],[86,93,80,60,"value"],[86,98,80,65],[86,99,80,66,"toString"],[86,107,80,74],[86,108,80,75],[86,109,80,76],[86,110,80,77],[86,112,80,79],[86,113,80,80],[86,114,81,9,"join"],[86,118,81,13],[86,119,81,14],[86,122,81,17],[86,123,81,18],[87,2,82,0],[88,0,82,1],[88,3]],"functionMap":{"names":["<global>","resolveHref","resolveHrefStringWithSegments","segments.map$argument_0","createQualifiedPathname","encodeParam","param.map$argument_0","createQueryParams","Object.entries.filter$argument_0","Object.entries.filter.map$argument_0"],"mappings":"AAA;oBCI;CDa;AEE;kBCI;SDiB;CFU;AIE;CJgB;AKC;yBCE,qBD;CLG;AOC;gBCG,4BD;aEC,kEF;CPE"}},"type":"js/module"}]}