{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":152,"column":2}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":152,"column":2}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../../Network/RCTNetworking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":53}}],"key":"wySpsWJSjIQ5Ial9e44CE8RyR7A="}},{"name":"../../Utilities/DevLoadingView","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":60}}],"key":"0lNfgsVSaZT6xuORL0X+WRqSWkw="}},{"name":"../../Utilities/HMRClient","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":50}}],"key":"LgBf4jLtCmwaRryTgQUTgtwHEdY="}},{"name":"./getDevServer","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}],"key":"PEcM6TbyS4rBYfu5y89u4bAVQj8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _RCTNetworking = _interopRequireDefault(require(_dependencyMap[2], \"../../Network/RCTNetworking\"));\n  var _DevLoadingView = _interopRequireDefault(require(_dependencyMap[3], \"../../Utilities/DevLoadingView\"));\n  var _HMRClient = _interopRequireDefault(require(_dependencyMap[4], \"../../Utilities/HMRClient\"));\n  var _getDevServer2 = _interopRequireDefault(require(_dependencyMap[5], \"./getDevServer\"));\n  var pendingRequests = 0;\n  var cachedPromisesByUrl = new Map();\n  function asyncRequest(url) {\n    var id = null;\n    var responseText = null;\n    var headers = null;\n    var dataListener;\n    var completeListener;\n    var responseListener;\n    var incrementalDataListener;\n    return new Promise((resolve, reject) => {\n      dataListener = _RCTNetworking.default.addListener('didReceiveNetworkData', _ref => {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          requestId = _ref2[0],\n          response = _ref2[1];\n        if (requestId === id) {\n          responseText = response;\n        }\n      });\n      incrementalDataListener = _RCTNetworking.default.addListener('didReceiveNetworkIncrementalData', _ref3 => {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          requestId = _ref4[0],\n          data = _ref4[1];\n        if (requestId === id) {\n          if (responseText != null) {\n            responseText += data;\n          } else {\n            responseText = data;\n          }\n        }\n      });\n      responseListener = _RCTNetworking.default.addListener('didReceiveNetworkResponse', _ref5 => {\n        var _ref6 = (0, _slicedToArray2.default)(_ref5, 3),\n          requestId = _ref6[0],\n          status = _ref6[1],\n          responseHeaders = _ref6[2];\n        if (requestId === id) {\n          headers = responseHeaders;\n        }\n      });\n      completeListener = _RCTNetworking.default.addListener('didCompleteNetworkResponse', _ref7 => {\n        var _ref8 = (0, _slicedToArray2.default)(_ref7, 2),\n          requestId = _ref8[0],\n          error = _ref8[1];\n        if (requestId === id) {\n          if (error) {\n            reject(error);\n          } else {\n            resolve({\n              body: responseText,\n              headers\n            });\n          }\n        }\n      });\n      _RCTNetworking.default.sendRequest('GET', 'asyncRequest', url, {}, '', 'text', true, 0, requestId => {\n        id = requestId;\n      }, true);\n    }).finally(() => {\n      dataListener?.remove();\n      completeListener?.remove();\n      responseListener?.remove();\n      incrementalDataListener?.remove();\n    });\n  }\n  function buildUrlForBundle(bundlePathAndQuery) {\n    var _getDevServer = (0, _getDevServer2.default)(),\n      serverUrl = _getDevServer.url;\n    return serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '');\n  }\n  module.exports = function (bundlePathAndQuery) {\n    var requestUrl = buildUrlForBundle(bundlePathAndQuery);\n    var loadPromise = cachedPromisesByUrl.get(requestUrl);\n    if (loadPromise) {\n      return loadPromise;\n    }\n    _DevLoadingView.default.showMessage('Downloading...', 'load');\n    ++pendingRequests;\n    loadPromise = asyncRequest(requestUrl).then(_ref9 => {\n      var body = _ref9.body,\n        headers = _ref9.headers;\n      if (headers['Content-Type'] != null && headers['Content-Type'].indexOf('application/json') >= 0) {\n        throw new Error(JSON.parse(body).message || `Unknown error fetching '${bundlePathAndQuery}'`);\n      }\n      _HMRClient.default.registerBundle(requestUrl);\n      if (global.globalEvalWithSourceUrl) {\n        global.globalEvalWithSourceUrl(body, requestUrl);\n      } else {\n        eval(body);\n      }\n    }).catch(e => {\n      cachedPromisesByUrl.delete(requestUrl);\n      throw e;\n    }).finally(() => {\n      if (! --pendingRequests) {\n        _DevLoadingView.default.hide();\n      }\n    });\n    cachedPromisesByUrl.set(requestUrl, loadPromise);\n    return loadPromise;\n  };\n});","lineCount":109,"map":[[4,2,12,0],[4,6,12,0,"_RCTNetworking"],[4,20,12,0],[4,23,12,0,"_interopRequireDefault"],[4,45,12,0],[4,46,12,0,"require"],[4,53,12,0],[4,54,12,0,"_dependencyMap"],[4,68,12,0],[5,2,13,0],[5,6,13,0,"_DevLoadingView"],[5,21,13,0],[5,24,13,0,"_interopRequireDefault"],[5,46,13,0],[5,47,13,0,"require"],[5,54,13,0],[5,55,13,0,"_dependencyMap"],[5,69,13,0],[6,2,14,0],[6,6,14,0,"_HMRClient"],[6,16,14,0],[6,19,14,0,"_interopRequireDefault"],[6,41,14,0],[6,42,14,0,"require"],[6,49,14,0],[6,50,14,0,"_dependencyMap"],[6,64,14,0],[7,2,15,0],[7,6,15,0,"_getDevServer2"],[7,20,15,0],[7,23,15,0,"_interopRequireDefault"],[7,45,15,0],[7,46,15,0,"require"],[7,53,15,0],[7,54,15,0,"_dependencyMap"],[7,68,15,0],[8,2,19,0],[8,6,19,4,"pendingRequests"],[8,21,19,19],[8,24,19,22],[8,25,19,23],[9,2,21,0],[9,6,21,6,"cachedPromisesByUrl"],[9,25,21,25],[9,28,21,28],[9,32,21,32,"Map"],[9,35,21,35],[9,36,21,59],[9,37,21,60],[10,2,23,0],[10,11,23,9,"asyncRequest"],[10,23,23,21,"asyncRequest"],[10,24,24,2,"url"],[10,27,24,13],[10,29,25,56],[11,4,26,2],[11,8,26,6,"id"],[11,10,26,8],[11,13,26,11],[11,17,26,15],[12,4,27,2],[12,8,27,6,"responseText"],[12,20,27,18],[12,23,27,21],[12,27,27,25],[13,4,28,2],[13,8,28,6,"headers"],[13,15,28,13],[13,18,28,16],[13,22,28,20],[14,4,29,2],[14,8,29,6,"dataListener"],[14,20,29,18],[15,4,30,2],[15,8,30,6,"completeListener"],[15,24,30,22],[16,4,31,2],[16,8,31,6,"responseListener"],[16,24,31,22],[17,4,32,2],[17,8,32,6,"incrementalDataListener"],[17,31,32,29],[18,4,33,2],[18,11,33,9],[18,15,33,13,"Promise"],[18,22,33,20],[18,23,34,4],[18,24,34,5,"resolve"],[18,31,34,12],[18,33,34,14,"reject"],[18,39,34,20],[18,44,34,25],[19,6,35,6,"dataListener"],[19,18,35,18],[19,21,35,21,"Networking"],[19,43,35,31],[19,44,35,32,"addListener"],[19,55,35,43],[19,56,36,8],[19,79,36,31],[19,81,37,8,"_ref"],[19,85,37,8],[19,89,37,35],[20,8,37,35],[20,12,37,35,"_ref2"],[20,17,37,35],[20,24,37,35,"_slicedToArray2"],[20,39,37,35],[20,40,37,35,"default"],[20,47,37,35],[20,49,37,35,"_ref"],[20,53,37,35],[21,10,37,10,"requestId"],[21,19,37,19],[21,22,37,19,"_ref2"],[21,27,37,19],[22,10,37,21,"response"],[22,18,37,29],[22,21,37,29,"_ref2"],[22,26,37,29],[23,8,38,10],[23,12,38,14,"requestId"],[23,21,38,23],[23,26,38,28,"id"],[23,28,38,30],[23,30,38,32],[24,10,39,12,"responseText"],[24,22,39,24],[24,25,39,27,"response"],[24,33,39,35],[25,8,40,10],[26,6,41,8],[26,7,42,6],[26,8,42,7],[27,6,43,6,"incrementalDataListener"],[27,29,43,29],[27,32,43,32,"Networking"],[27,54,43,42],[27,55,43,43,"addListener"],[27,66,43,54],[27,67,44,8],[27,101,44,42],[27,103,45,8,"_ref3"],[27,108,45,8],[27,112,45,31],[28,8,45,31],[28,12,45,31,"_ref4"],[28,17,45,31],[28,24,45,31,"_slicedToArray2"],[28,39,45,31],[28,40,45,31,"default"],[28,47,45,31],[28,49,45,31,"_ref3"],[28,54,45,31],[29,10,45,10,"requestId"],[29,19,45,19],[29,22,45,19,"_ref4"],[29,27,45,19],[30,10,45,21,"data"],[30,14,45,25],[30,17,45,25,"_ref4"],[30,22,45,25],[31,8,46,10],[31,12,46,14,"requestId"],[31,21,46,23],[31,26,46,28,"id"],[31,28,46,30],[31,30,46,32],[32,10,47,12],[32,14,47,16,"responseText"],[32,26,47,28],[32,30,47,32],[32,34,47,36],[32,36,47,38],[33,12,48,14,"responseText"],[33,24,48,26],[33,28,48,30,"data"],[33,32,48,34],[34,10,49,12],[34,11,49,13],[34,17,49,19],[35,12,50,14,"responseText"],[35,24,50,26],[35,27,50,29,"data"],[35,31,50,33],[36,10,51,12],[37,8,52,10],[38,6,53,8],[38,7,54,6],[38,8,54,7],[39,6,55,6,"responseListener"],[39,22,55,22],[39,25,55,25,"Networking"],[39,47,55,35],[39,48,55,36,"addListener"],[39,59,55,47],[39,60,56,8],[39,87,56,35],[39,89,57,8,"_ref5"],[39,94,57,8],[39,98,57,50],[40,8,57,50],[40,12,57,50,"_ref6"],[40,17,57,50],[40,24,57,50,"_slicedToArray2"],[40,39,57,50],[40,40,57,50,"default"],[40,47,57,50],[40,49,57,50,"_ref5"],[40,54,57,50],[41,10,57,10,"requestId"],[41,19,57,19],[41,22,57,19,"_ref6"],[41,27,57,19],[42,10,57,21,"status"],[42,16,57,27],[42,19,57,27,"_ref6"],[42,24,57,27],[43,10,57,29,"responseHeaders"],[43,25,57,44],[43,28,57,44,"_ref6"],[43,33,57,44],[44,8,58,10],[44,12,58,14,"requestId"],[44,21,58,23],[44,26,58,28,"id"],[44,28,58,30],[44,30,58,32],[45,10,59,12,"headers"],[45,17,59,19],[45,20,59,22,"responseHeaders"],[45,35,59,37],[46,8,60,10],[47,6,61,8],[47,7,62,6],[47,8,62,7],[48,6,63,6,"completeListener"],[48,22,63,22],[48,25,63,25,"Networking"],[48,47,63,35],[48,48,63,36,"addListener"],[48,59,63,47],[48,60,64,8],[48,88,64,36],[48,90,65,8,"_ref7"],[48,95,65,8],[48,99,65,32],[49,8,65,32],[49,12,65,32,"_ref8"],[49,17,65,32],[49,24,65,32,"_slicedToArray2"],[49,39,65,32],[49,40,65,32,"default"],[49,47,65,32],[49,49,65,32,"_ref7"],[49,54,65,32],[50,10,65,10,"requestId"],[50,19,65,19],[50,22,65,19,"_ref8"],[50,27,65,19],[51,10,65,21,"error"],[51,15,65,26],[51,18,65,26,"_ref8"],[51,23,65,26],[52,8,66,10],[52,12,66,14,"requestId"],[52,21,66,23],[52,26,66,28,"id"],[52,28,66,30],[52,30,66,32],[53,10,67,12],[53,14,67,16,"error"],[53,19,67,21],[53,21,67,23],[54,12,68,14,"reject"],[54,18,68,20],[54,19,68,21,"error"],[54,24,68,26],[54,25,68,27],[55,10,69,12],[55,11,69,13],[55,17,69,19],[56,12,71,14,"resolve"],[56,19,71,21],[56,20,71,22],[57,14,71,23,"body"],[57,18,71,27],[57,20,71,29,"responseText"],[57,32,71,41],[58,14,71,43,"headers"],[59,12,71,50],[59,13,71,51],[59,14,71,52],[60,10,72,12],[61,8,73,10],[62,6,74,8],[62,7,75,6],[62,8,75,7],[63,6,76,6,"Networking"],[63,28,76,16],[63,29,76,17,"sendRequest"],[63,40,76,28],[63,41,77,8],[63,46,77,13],[63,48,78,8],[63,62,78,22],[63,64,79,8,"url"],[63,67,79,11],[63,69,80,8],[63,70,80,9],[63,71,80,10],[63,73,81,8],[63,75,81,10],[63,77,82,8],[63,83,82,14],[63,85,83,8],[63,89,83,12],[63,91,84,8],[63,92,84,9],[63,94,85,8,"requestId"],[63,103,85,17],[63,107,85,21],[64,8,86,10,"id"],[64,10,86,12],[64,13,86,15,"requestId"],[64,22,86,24],[65,6,87,8],[65,7,87,9],[65,9,88,8],[65,13,89,6],[65,14,89,7],[66,4,90,4],[66,5,91,2],[66,6,91,3],[66,7,91,4,"finally"],[66,14,91,11],[66,15,91,12],[66,21,91,18],[67,6,92,4,"dataListener"],[67,18,92,16],[67,20,92,18,"remove"],[67,26,92,24],[67,27,92,25],[67,28,92,26],[68,6,93,4,"completeListener"],[68,22,93,20],[68,24,93,22,"remove"],[68,30,93,28],[68,31,93,29],[68,32,93,30],[69,6,94,4,"responseListener"],[69,22,94,20],[69,24,94,22,"remove"],[69,30,94,28],[69,31,94,29],[69,32,94,30],[70,6,95,4,"incrementalDataListener"],[70,29,95,27],[70,31,95,29,"remove"],[70,37,95,35],[70,38,95,36],[70,39,95,37],[71,4,96,2],[71,5,96,3],[71,6,96,4],[72,2,97,0],[73,2,99,0],[73,11,99,9,"buildUrlForBundle"],[73,28,99,26,"buildUrlForBundle"],[73,29,99,27,"bundlePathAndQuery"],[73,47,99,53],[73,49,99,55],[74,4,100,2],[74,8,100,2,"_getDevServer"],[74,21,100,2],[74,24,100,27],[74,28,100,27,"getDevServer"],[74,50,100,39],[74,52,100,40],[74,53,100,41],[75,6,100,14,"serverUrl"],[75,15,100,23],[75,18,100,23,"_getDevServer"],[75,31,100,23],[75,32,100,9,"url"],[75,35,100,12],[76,4,101,2],[76,11,102,4,"serverUrl"],[76,20,102,13],[76,21,102,14,"replace"],[76,28,102,21],[76,29,102,22],[76,35,102,28],[76,37,102,30],[76,39,102,32],[76,40,102,33],[76,43,102,36],[76,46,102,39],[76,49,102,42,"bundlePathAndQuery"],[76,67,102,60],[76,68,102,61,"replace"],[76,75,102,68],[76,76,102,69],[76,82,102,75],[76,84,102,77],[76,86,102,79],[76,87,102,80],[77,2,104,0],[78,2,106,0,"module"],[78,8,106,6],[78,9,106,7,"exports"],[78,16,106,14],[78,19,106,17],[78,29,106,27,"bundlePathAndQuery"],[78,47,106,53],[78,49,106,70],[79,4,107,2],[79,8,107,8,"requestUrl"],[79,18,107,18],[79,21,107,21,"buildUrlForBundle"],[79,38,107,38],[79,39,107,39,"bundlePathAndQuery"],[79,57,107,57],[79,58,107,58],[80,4,108,2],[80,8,108,6,"loadPromise"],[80,19,108,17],[80,22,108,20,"cachedPromisesByUrl"],[80,41,108,39],[80,42,108,40,"get"],[80,45,108,43],[80,46,108,44,"requestUrl"],[80,56,108,54],[80,57,108,55],[81,4,110,2],[81,8,110,6,"loadPromise"],[81,19,110,17],[81,21,110,19],[82,6,111,4],[82,13,111,11,"loadPromise"],[82,24,111,22],[83,4,112,2],[84,4,113,2,"DevLoadingView"],[84,27,113,16],[84,28,113,17,"showMessage"],[84,39,113,28],[84,40,113,29],[84,56,113,45],[84,58,113,47],[84,64,113,53],[84,65,113,54],[85,4,114,2],[85,6,114,4,"pendingRequests"],[85,21,114,19],[86,4,116,2,"loadPromise"],[86,15,116,13],[86,18,116,16,"asyncRequest"],[86,30,116,28],[86,31,116,29,"requestUrl"],[86,41,116,39],[86,42,116,40],[86,43,117,5,"then"],[86,47,117,9],[86,48,117,16,"_ref9"],[86,53,117,16],[86,57,117,37],[87,6,117,37],[87,10,117,18,"body"],[87,14,117,22],[87,17,117,22,"_ref9"],[87,22,117,22],[87,23,117,18,"body"],[87,27,117,22],[88,8,117,24,"headers"],[88,15,117,31],[88,18,117,31,"_ref9"],[88,23,117,31],[88,24,117,24,"headers"],[88,31,117,31],[89,6,118,6],[89,10,119,8,"headers"],[89,17,119,15],[89,18,119,16],[89,32,119,30],[89,33,119,31],[89,37,119,35],[89,41,119,39],[89,45,120,8,"headers"],[89,52,120,15],[89,53,120,16],[89,67,120,30],[89,68,120,31],[89,69,120,32,"indexOf"],[89,76,120,39],[89,77,120,40],[89,95,120,58],[89,96,120,59],[89,100,120,63],[89,101,120,64],[89,103,121,8],[90,8,123,8],[90,14,123,14],[90,18,123,18,"Error"],[90,23,123,23],[90,24,124,10,"JSON"],[90,28,124,14],[90,29,124,15,"parse"],[90,34,124,20],[90,35,124,21,"body"],[90,39,124,25],[90,40,124,26],[90,41,124,27,"message"],[90,48,124,34],[90,52,125,12],[90,79,125,39,"bundlePathAndQuery"],[90,97,125,57],[90,100,126,8],[90,101,126,9],[91,6,127,6],[92,6,129,6,"HMRClient"],[92,24,129,15],[92,25,129,16,"registerBundle"],[92,39,129,30],[92,40,129,31,"requestUrl"],[92,50,129,41],[92,51,129,42],[93,6,133,6],[93,10,133,10,"global"],[93,16,133,16],[93,17,133,17,"globalEvalWithSourceUrl"],[93,40,133,40],[93,42,133,42],[94,8,134,8,"global"],[94,14,134,14],[94,15,134,15,"globalEvalWithSourceUrl"],[94,38,134,38],[94,39,134,39,"body"],[94,43,134,43],[94,45,134,45,"requestUrl"],[94,55,134,55],[94,56,134,56],[95,6,135,6],[95,7,135,7],[95,13,135,13],[96,8,137,8,"eval"],[96,12,137,12],[96,13,137,13,"body"],[96,17,137,17],[96,18,137,18],[97,6,138,6],[98,4,139,4],[98,5,139,5],[98,6,139,6],[98,7,140,5,"catch"],[98,12,140,10],[98,13,140,17,"e"],[98,14,140,18],[98,18,140,22],[99,6,141,6,"cachedPromisesByUrl"],[99,25,141,25],[99,26,141,26,"delete"],[99,32,141,32],[99,33,141,33,"requestUrl"],[99,43,141,43],[99,44,141,44],[100,6,142,6],[100,12,142,12,"e"],[100,13,142,13],[101,4,143,4],[101,5,143,5],[101,6,143,6],[101,7,144,5,"finally"],[101,14,144,12],[101,15,144,13],[101,21,144,19],[102,6,145,6],[102,10,145,10],[102,11,145,11],[102,14,145,13,"pendingRequests"],[102,29,145,28],[102,31,145,30],[103,8,146,8,"DevLoadingView"],[103,31,146,22],[103,32,146,23,"hide"],[103,36,146,27],[103,37,146,28],[103,38,146,29],[104,6,147,6],[105,4,148,4],[105,5,148,5],[105,6,148,6],[106,4,150,2,"cachedPromisesByUrl"],[106,23,150,21],[106,24,150,22,"set"],[106,27,150,25],[106,28,150,26,"requestUrl"],[106,38,150,36],[106,40,150,38,"loadPromise"],[106,51,150,49],[106,52,150,50],[107,4,151,2],[107,11,151,9,"loadPromise"],[107,22,151,20],[108,2,152,0],[108,3,152,1],[109,0,152,2],[109,3]],"functionMap":{"names":["<global>","asyncRequest","Promise$argument_0","Networking.addListener$argument_1","Networking.sendRequest$argument_8","Promise._finally$argument_0","buildUrlForBundle","module.exports","asyncRequest.then$argument_0","asyncRequest.then._catch$argument_0","asyncRequest.then._catch._finally$argument_0"],"mappings":"AAA;ACsB;ICW;QCG;SDI;QCI;SDQ;QCI;SDI;QCI;SDS;QEW;SFE;KDG;YIC;GJK;CDC;AME;CNK;iBOE;gBCW;KDsB;iBEC;KFG;aGC;KHI;CPI"}},"type":"js/module"}]}