{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":46,"index":4855}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":46,"index":4855}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":58,"index":73}}],"key":"vzJhU8p+EXFUpX28ANa6h4NbBWk="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":74},"end":{"line":4,"column":31,"index":105}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"./NavigationBuilderContext.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":106},"end":{"line":5,"column":73,"index":179}}],"key":"wXMcIJWUD66R6uBdlKglbjBdJPs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationCache = useNavigationCache;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _routers = require(_dependencyMap[2], \"@react-navigation/routers\");\n  var React = _interopRequireWildcard(require(_dependencyMap[3], \"react\"));\n  var _NavigationBuilderContext = require(_dependencyMap[4], \"./NavigationBuilderContext.js\");\n  var _excluded = [\"emit\"];\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Hook to cache navigation objects for each screen in the navigator.\n   * It's important to cache them to make sure navigation objects don't change between renders.\n   * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\n   */\n  function useNavigationCache(_ref) {\n    var state = _ref.state,\n      getState = _ref.getState,\n      navigation = _ref.navigation,\n      setOptions = _ref.setOptions,\n      router = _ref.router,\n      emitter = _ref.emitter;\n    var _React$useContext = React.useContext(_NavigationBuilderContext.NavigationBuilderContext),\n      stackRef = _React$useContext.stackRef;\n    var base = React.useMemo(() => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var emit = navigation.emit,\n        rest = (0, _objectWithoutProperties2.default)(navigation, _excluded);\n      var actions = {\n        ...router.actionCreators,\n        ..._routers.CommonActions\n      };\n      var dispatch = () => {\n        throw new Error('Actions cannot be dispatched from a placeholder screen.');\n      };\n      var helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = dispatch;\n        return acc;\n      }, {});\n      return {\n        ...rest,\n        ...helpers,\n        addListener: () => {\n          // Event listeners are not supported for placeholder screens\n\n          return () => {\n            // Empty function\n          };\n        },\n        removeListener: () => {\n          // Event listeners are not supported for placeholder screens\n        },\n        dispatch,\n        getParent: id => {\n          if (id !== undefined && id === rest.getId()) {\n            return base;\n          }\n          return rest.getParent(id);\n        },\n        setOptions: () => {\n          throw new Error('Options cannot be set from a placeholder screen.');\n        },\n        isFocused: () => false\n      };\n    }, [navigation, router.actionCreators]);\n\n    // Cache object which holds navigation objects for each screen\n    // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\n    // In reality, these deps will rarely change, if ever\n    var cache = React.useMemo(() => ({\n      current: {}\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [base, getState, navigation, setOptions, emitter]);\n    cache.current = state.routes.reduce((acc, route) => {\n      var previous = cache.current[route.key];\n      if (previous) {\n        // If a cached navigation object already exists, reuse it\n        acc[route.key] = previous;\n      } else {\n        var dispatch = thunk => {\n          var action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n          if (action != null) {\n            navigation.dispatch({\n              source: route.key,\n              ...action\n            });\n          }\n        };\n        var withStack = callback => {\n          var isStackSet = false;\n          try {\n            if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n              // Capture the stack trace for devtools\n              stackRef.current = new Error().stack;\n              isStackSet = true;\n            }\n            callback();\n          } finally {\n            if (isStackSet && stackRef) {\n              stackRef.current = undefined;\n            }\n          }\n        };\n        var actions = {\n          ...router.actionCreators,\n          ..._routers.CommonActions\n        };\n        var helpers = Object.keys(actions).reduce((acc, name) => {\n          acc[name] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            return withStack(() =>\n            // @ts-expect-error: name is a valid key, but TypeScript is dumb\n            dispatch(actions[name](...args)));\n          };\n          return acc;\n        }, {});\n        acc[route.key] = {\n          ...base,\n          ...helpers,\n          // FIXME: too much work to fix the types for now\n          ...emitter.create(route.key),\n          dispatch: thunk => withStack(() => dispatch(thunk)),\n          getParent: id => {\n            if (id !== undefined && id === base.getId()) {\n              // If the passed id is the same as the current navigation id,\n              // we return the cached navigation object for the relevant route\n              return acc[route.key];\n            }\n            return base.getParent(id);\n          },\n          setOptions: options => {\n            setOptions(o => ({\n              ...o,\n              [route.key]: {\n                ...o[route.key],\n                ...options\n              }\n            }));\n          },\n          isFocused: () => {\n            var state = base.getState();\n            if (state.routes[state.index].key !== route.key) {\n              return false;\n            }\n\n            // If the current screen is focused, we also need to check if parent navigator is focused\n            // This makes sure that we return the focus state in the whole tree, not just this navigator\n            return navigation ? navigation.isFocused() : true;\n          }\n        };\n      }\n      return acc;\n    }, {});\n    return {\n      base,\n      navigations: cache.current\n    };\n  }\n});","lineCount":167,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useNavigationCache"],[8,28,1,13],[8,31,1,13,"useNavigationCache"],[8,49,1,13],[9,2,1,13],[9,6,1,13,"_objectWithoutProperties2"],[9,31,1,13],[9,34,1,13,"_interopRequireDefault"],[9,56,1,13],[9,57,1,13,"require"],[9,64,1,13],[9,65,1,13,"_dependencyMap"],[9,79,1,13],[10,2,3,0],[10,6,3,0,"_routers"],[10,14,3,0],[10,17,3,0,"require"],[10,24,3,0],[10,25,3,0,"_dependencyMap"],[10,39,3,0],[11,2,4,0],[11,6,4,0,"React"],[11,11,4,0],[11,14,4,0,"_interopRequireWildcard"],[11,37,4,0],[11,38,4,0,"require"],[11,45,4,0],[11,46,4,0,"_dependencyMap"],[11,60,4,0],[12,2,5,0],[12,6,5,0,"_NavigationBuilderContext"],[12,31,5,0],[12,34,5,0,"require"],[12,41,5,0],[12,42,5,0,"_dependencyMap"],[12,56,5,0],[13,2,5,73],[13,6,5,73,"_excluded"],[13,15,5,73],[14,2,5,73],[14,11,5,73,"_getRequireWildcardCache"],[14,36,5,73,"e"],[14,37,5,73],[14,66,5,73,"WeakMap"],[14,73,5,73],[14,92,5,73,"r"],[14,93,5,73],[14,100,5,73,"WeakMap"],[14,107,5,73],[14,111,5,73,"t"],[14,112,5,73],[14,119,5,73,"WeakMap"],[14,126,5,73],[14,138,5,73,"_getRequireWildcardCache"],[14,162,5,73],[14,174,5,73,"_getRequireWildcardCache"],[14,175,5,73,"e"],[14,176,5,73],[14,187,5,73,"e"],[14,188,5,73],[14,191,5,73,"t"],[14,192,5,73],[14,195,5,73,"r"],[14,196,5,73],[14,201,5,73,"e"],[14,202,5,73],[15,2,5,73],[15,11,5,73,"_interopRequireWildcard"],[15,35,5,73,"e"],[15,36,5,73],[15,38,5,73,"r"],[15,39,5,73],[15,48,5,73,"r"],[15,49,5,73],[15,53,5,73,"e"],[15,54,5,73],[15,58,5,73,"e"],[15,59,5,73],[15,60,5,73,"__esModule"],[15,70,5,73],[15,79,5,73,"e"],[15,80,5,73],[15,95,5,73,"e"],[15,96,5,73],[15,119,5,73,"e"],[15,120,5,73],[15,145,5,73,"e"],[15,146,5,73],[15,157,5,73,"default"],[15,164,5,73],[15,166,5,73,"e"],[15,167,5,73],[15,175,5,73,"t"],[15,176,5,73],[15,179,5,73,"_getRequireWildcardCache"],[15,203,5,73],[15,204,5,73,"r"],[15,205,5,73],[15,212,5,73,"t"],[15,213,5,73],[15,217,5,73,"t"],[15,218,5,73],[15,219,5,73,"has"],[15,222,5,73],[15,223,5,73,"e"],[15,224,5,73],[15,234,5,73,"t"],[15,235,5,73],[15,236,5,73,"get"],[15,239,5,73],[15,240,5,73,"e"],[15,241,5,73],[15,248,5,73,"n"],[15,249,5,73],[15,254,5,73,"__proto__"],[15,263,5,73],[15,273,5,73,"a"],[15,274,5,73],[15,277,5,73,"Object"],[15,283,5,73],[15,284,5,73,"defineProperty"],[15,298,5,73],[15,302,5,73,"Object"],[15,308,5,73],[15,309,5,73,"getOwnPropertyDescriptor"],[15,333,5,73],[15,344,5,73,"u"],[15,345,5,73],[15,349,5,73,"e"],[15,350,5,73],[15,370,5,73,"u"],[15,371,5,73],[15,378,5,73,"hasOwnProperty"],[15,392,5,73],[15,393,5,73,"call"],[15,397,5,73],[15,398,5,73,"e"],[15,399,5,73],[15,401,5,73,"u"],[15,402,5,73],[15,411,5,73,"i"],[15,412,5,73],[15,415,5,73,"a"],[15,416,5,73],[15,419,5,73,"Object"],[15,425,5,73],[15,426,5,73,"getOwnPropertyDescriptor"],[15,450,5,73],[15,451,5,73,"e"],[15,452,5,73],[15,454,5,73,"u"],[15,455,5,73],[15,465,5,73,"i"],[15,466,5,73],[15,471,5,73,"i"],[15,472,5,73],[15,473,5,73,"get"],[15,476,5,73],[15,480,5,73,"i"],[15,481,5,73],[15,482,5,73,"set"],[15,485,5,73],[15,489,5,73,"Object"],[15,495,5,73],[15,496,5,73,"defineProperty"],[15,510,5,73],[15,511,5,73,"n"],[15,512,5,73],[15,514,5,73,"u"],[15,515,5,73],[15,517,5,73,"i"],[15,518,5,73],[15,522,5,73,"n"],[15,523,5,73],[15,524,5,73,"u"],[15,525,5,73],[15,529,5,73,"e"],[15,530,5,73],[15,531,5,73,"u"],[15,532,5,73],[15,544,5,73,"n"],[15,545,5,73],[15,546,5,73,"default"],[15,553,5,73],[15,556,5,73,"e"],[15,557,5,73],[15,559,5,73,"t"],[15,560,5,73],[15,564,5,73,"t"],[15,565,5,73],[15,566,5,73,"set"],[15,569,5,73],[15,570,5,73,"e"],[15,571,5,73],[15,573,5,73,"n"],[15,574,5,73],[15,577,5,73,"n"],[15,578,5,73],[16,2,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[20,0,10,0],[21,2,11,7],[21,11,11,16,"useNavigationCache"],[21,29,11,34,"useNavigationCache"],[21,30,11,34,"_ref"],[21,34,11,34],[21,36,18,3],[22,4,18,3],[22,8,12,2,"state"],[22,13,12,7],[22,16,12,7,"_ref"],[22,20,12,7],[22,21,12,2,"state"],[22,26,12,7],[23,6,13,2,"getState"],[23,14,13,10],[23,17,13,10,"_ref"],[23,21,13,10],[23,22,13,2,"getState"],[23,30,13,10],[24,6,14,2,"navigation"],[24,16,14,12],[24,19,14,12,"_ref"],[24,23,14,12],[24,24,14,2,"navigation"],[24,34,14,12],[25,6,15,2,"setOptions"],[25,16,15,12],[25,19,15,12,"_ref"],[25,23,15,12],[25,24,15,2,"setOptions"],[25,34,15,12],[26,6,16,2,"router"],[26,12,16,8],[26,15,16,8,"_ref"],[26,19,16,8],[26,20,16,2,"router"],[26,26,16,8],[27,6,17,2,"emitter"],[27,13,17,9],[27,16,17,9,"_ref"],[27,20,17,9],[27,21,17,2,"emitter"],[27,28,17,9],[28,4,19,2],[28,8,19,2,"_React$useContext"],[28,25,19,2],[28,28,21,6,"React"],[28,33,21,11],[28,34,21,12,"useContext"],[28,44,21,22],[28,45,21,23,"NavigationBuilderContext"],[28,95,21,47],[28,96,21,48],[29,6,20,4,"stackRef"],[29,14,20,12],[29,17,20,12,"_React$useContext"],[29,34,20,12],[29,35,20,4,"stackRef"],[29,43,20,12],[30,4,22,2],[30,8,22,8,"base"],[30,12,22,12],[30,15,22,15,"React"],[30,20,22,20],[30,21,22,21,"useMemo"],[30,28,22,28],[30,29,22,29],[30,35,22,35],[31,6,23,4],[32,6,24,4],[32,10,25,6,"emit"],[32,14,25,10],[32,17,27,8,"navigation"],[32,27,27,18],[32,28,25,6,"emit"],[32,32,25,10],[33,8,26,9,"rest"],[33,12,26,13],[33,19,26,13,"_objectWithoutProperties2"],[33,44,26,13],[33,45,26,13,"default"],[33,52,26,13],[33,54,27,8,"navigation"],[33,64,27,18],[33,66,27,18,"_excluded"],[33,75,27,18],[34,6,28,4],[34,10,28,10,"actions"],[34,17,28,17],[34,20,28,20],[35,8,29,6],[35,11,29,9,"router"],[35,17,29,15],[35,18,29,16,"actionCreators"],[35,32,29,30],[36,8,30,6],[36,11,30,9,"CommonActions"],[37,6,31,4],[37,7,31,5],[38,6,32,4],[38,10,32,10,"dispatch"],[38,18,32,18],[38,21,32,21,"dispatch"],[38,22,32,21],[38,27,32,27],[39,8,33,6],[39,14,33,12],[39,18,33,16,"Error"],[39,23,33,21],[39,24,33,22],[39,81,33,79],[39,82,33,80],[40,6,34,4],[40,7,34,5],[41,6,35,4],[41,10,35,10,"helpers"],[41,17,35,17],[41,20,35,20,"Object"],[41,26,35,26],[41,27,35,27,"keys"],[41,31,35,31],[41,32,35,32,"actions"],[41,39,35,39],[41,40,35,40],[41,41,35,41,"reduce"],[41,47,35,47],[41,48,35,48],[41,49,35,49,"acc"],[41,52,35,52],[41,54,35,54,"name"],[41,58,35,58],[41,63,35,63],[42,8,36,6,"acc"],[42,11,36,9],[42,12,36,10,"name"],[42,16,36,14],[42,17,36,15],[42,20,36,18,"dispatch"],[42,28,36,26],[43,8,37,6],[43,15,37,13,"acc"],[43,18,37,16],[44,6,38,4],[44,7,38,5],[44,9,38,7],[44,10,38,8],[44,11,38,9],[44,12,38,10],[45,6,39,4],[45,13,39,11],[46,8,40,6],[46,11,40,9,"rest"],[46,15,40,13],[47,8,41,6],[47,11,41,9,"helpers"],[47,18,41,16],[48,8,42,6,"addListener"],[48,19,42,17],[48,21,42,19,"addListener"],[48,22,42,19],[48,27,42,25],[49,10,43,8],[51,10,45,8],[51,17,45,15],[51,23,45,21],[52,12,46,10],[53,10,46,10],[53,11,47,9],[54,8,48,6],[54,9,48,7],[55,8,49,6,"removeListener"],[55,22,49,20],[55,24,49,22,"removeListener"],[55,25,49,22],[55,30,49,28],[56,10,50,8],[57,8,50,8],[57,9,51,7],[58,8,52,6,"dispatch"],[58,16,52,14],[59,8,53,6,"getParent"],[59,17,53,15],[59,19,53,17,"id"],[59,21,53,19],[59,25,53,23],[60,10,54,8],[60,14,54,12,"id"],[60,16,54,14],[60,21,54,19,"undefined"],[60,30,54,28],[60,34,54,32,"id"],[60,36,54,34],[60,41,54,39,"rest"],[60,45,54,43],[60,46,54,44,"getId"],[60,51,54,49],[60,52,54,50],[60,53,54,51],[60,55,54,53],[61,12,55,10],[61,19,55,17,"base"],[61,23,55,21],[62,10,56,8],[63,10,57,8],[63,17,57,15,"rest"],[63,21,57,19],[63,22,57,20,"getParent"],[63,31,57,29],[63,32,57,30,"id"],[63,34,57,32],[63,35,57,33],[64,8,58,6],[64,9,58,7],[65,8,59,6,"setOptions"],[65,18,59,16],[65,20,59,18,"setOptions"],[65,21,59,18],[65,26,59,24],[66,10,60,8],[66,16,60,14],[66,20,60,18,"Error"],[66,25,60,23],[66,26,60,24],[66,76,60,74],[66,77,60,75],[67,8,61,6],[67,9,61,7],[68,8,62,6,"isFocused"],[68,17,62,15],[68,19,62,17,"isFocused"],[68,20,62,17],[68,25,62,23],[69,6,63,4],[69,7,63,5],[70,4,64,2],[70,5,64,3],[70,7,64,5],[70,8,64,6,"navigation"],[70,18,64,16],[70,20,64,18,"router"],[70,26,64,24],[70,27,64,25,"actionCreators"],[70,41,64,39],[70,42,64,40],[70,43,64,41],[72,4,66,2],[73,4,67,2],[74,4,68,2],[75,4,69,2],[75,8,69,8,"cache"],[75,13,69,13],[75,16,69,16,"React"],[75,21,69,21],[75,22,69,22,"useMemo"],[75,29,69,29],[75,30,69,30],[75,37,69,37],[76,6,70,4,"current"],[76,13,70,11],[76,15,70,13],[76,16,70,14],[77,4,71,2],[77,5,71,3],[77,6,71,4],[78,4,72,2],[79,4,73,2],[79,5,73,3,"base"],[79,9,73,7],[79,11,73,9,"getState"],[79,19,73,17],[79,21,73,19,"navigation"],[79,31,73,29],[79,33,73,31,"setOptions"],[79,43,73,41],[79,45,73,43,"emitter"],[79,52,73,50],[79,53,73,51],[79,54,73,52],[80,4,74,2,"cache"],[80,9,74,7],[80,10,74,8,"current"],[80,17,74,15],[80,20,74,18,"state"],[80,25,74,23],[80,26,74,24,"routes"],[80,32,74,30],[80,33,74,31,"reduce"],[80,39,74,37],[80,40,74,38],[80,41,74,39,"acc"],[80,44,74,42],[80,46,74,44,"route"],[80,51,74,49],[80,56,74,54],[81,6,75,4],[81,10,75,10,"previous"],[81,18,75,18],[81,21,75,21,"cache"],[81,26,75,26],[81,27,75,27,"current"],[81,34,75,34],[81,35,75,35,"route"],[81,40,75,40],[81,41,75,41,"key"],[81,44,75,44],[81,45,75,45],[82,6,76,4],[82,10,76,8,"previous"],[82,18,76,16],[82,20,76,18],[83,8,77,6],[84,8,78,6,"acc"],[84,11,78,9],[84,12,78,10,"route"],[84,17,78,15],[84,18,78,16,"key"],[84,21,78,19],[84,22,78,20],[84,25,78,23,"previous"],[84,33,78,31],[85,6,79,4],[85,7,79,5],[85,13,79,11],[86,8,80,6],[86,12,80,12,"dispatch"],[86,20,80,20],[86,23,80,23,"thunk"],[86,28,80,28],[86,32,80,32],[87,10,81,8],[87,14,81,14,"action"],[87,20,81,20],[87,23,81,23],[87,30,81,30,"thunk"],[87,35,81,35],[87,40,81,40],[87,50,81,50],[87,53,81,53,"thunk"],[87,58,81,58],[87,59,81,59,"getState"],[87,67,81,67],[87,68,81,68],[87,69,81,69],[87,70,81,70],[87,73,81,73,"thunk"],[87,78,81,78],[88,10,82,8],[88,14,82,12,"action"],[88,20,82,18],[88,24,82,22],[88,28,82,26],[88,30,82,28],[89,12,83,10,"navigation"],[89,22,83,20],[89,23,83,21,"dispatch"],[89,31,83,29],[89,32,83,30],[90,14,84,12,"source"],[90,20,84,18],[90,22,84,20,"route"],[90,27,84,25],[90,28,84,26,"key"],[90,31,84,29],[91,14,85,12],[91,17,85,15,"action"],[92,12,86,10],[92,13,86,11],[92,14,86,12],[93,10,87,8],[94,8,88,6],[94,9,88,7],[95,8,89,6],[95,12,89,12,"withStack"],[95,21,89,21],[95,24,89,24,"callback"],[95,32,89,32],[95,36,89,36],[96,10,90,8],[96,14,90,12,"isStackSet"],[96,24,90,22],[96,27,90,25],[96,32,90,30],[97,10,91,8],[97,14,91,12],[98,12,92,10],[98,16,92,14,"process"],[98,23,92,21],[98,24,92,22,"env"],[98,27,92,25],[98,28,92,26,"NODE_ENV"],[98,36,92,34],[98,41,92,39],[98,53,92,51],[98,57,92,55,"stackRef"],[98,65,92,63],[98,69,92,67],[98,70,92,68,"stackRef"],[98,78,92,76],[98,79,92,77,"current"],[98,86,92,84],[98,88,92,86],[99,14,93,12],[100,14,94,12,"stackRef"],[100,22,94,20],[100,23,94,21,"current"],[100,30,94,28],[100,33,94,31],[100,37,94,35,"Error"],[100,42,94,40],[100,43,94,41],[100,44,94,42],[100,45,94,43,"stack"],[100,50,94,48],[101,14,95,12,"isStackSet"],[101,24,95,22],[101,27,95,25],[101,31,95,29],[102,12,96,10],[103,12,97,10,"callback"],[103,20,97,18],[103,21,97,19],[103,22,97,20],[104,10,98,8],[104,11,98,9],[104,20,98,18],[105,12,99,10],[105,16,99,14,"isStackSet"],[105,26,99,24],[105,30,99,28,"stackRef"],[105,38,99,36],[105,40,99,38],[106,14,100,12,"stackRef"],[106,22,100,20],[106,23,100,21,"current"],[106,30,100,28],[106,33,100,31,"undefined"],[106,42,100,40],[107,12,101,10],[108,10,102,8],[109,8,103,6],[109,9,103,7],[110,8,104,6],[110,12,104,12,"actions"],[110,19,104,19],[110,22,104,22],[111,10,105,8],[111,13,105,11,"router"],[111,19,105,17],[111,20,105,18,"actionCreators"],[111,34,105,32],[112,10,106,8],[112,13,106,11,"CommonActions"],[113,8,107,6],[113,9,107,7],[114,8,108,6],[114,12,108,12,"helpers"],[114,19,108,19],[114,22,108,22,"Object"],[114,28,108,28],[114,29,108,29,"keys"],[114,33,108,33],[114,34,108,34,"actions"],[114,41,108,41],[114,42,108,42],[114,43,108,43,"reduce"],[114,49,108,49],[114,50,108,50],[114,51,108,51,"acc"],[114,54,108,54],[114,56,108,56,"name"],[114,60,108,60],[114,65,108,65],[115,10,109,8,"acc"],[115,13,109,11],[115,14,109,12,"name"],[115,18,109,16],[115,19,109,17],[115,22,109,20],[116,12,109,20],[116,21,109,20,"_len"],[116,25,109,20],[116,28,109,20,"arguments"],[116,37,109,20],[116,38,109,20,"length"],[116,44,109,20],[116,46,109,24,"args"],[116,50,109,28],[116,57,109,28,"Array"],[116,62,109,28],[116,63,109,28,"_len"],[116,67,109,28],[116,70,109,28,"_key"],[116,74,109,28],[116,80,109,28,"_key"],[116,84,109,28],[116,87,109,28,"_len"],[116,91,109,28],[116,93,109,28,"_key"],[116,97,109,28],[117,14,109,24,"args"],[117,18,109,28],[117,19,109,28,"_key"],[117,23,109,28],[117,27,109,28,"arguments"],[117,36,109,28],[117,37,109,28,"_key"],[117,41,109,28],[118,12,109,28],[119,12,109,28],[119,19,109,33,"withStack"],[119,28,109,42],[119,29,109,43],[120,12,110,8],[121,12,111,8,"dispatch"],[121,20,111,16],[121,21,111,17,"actions"],[121,28,111,24],[121,29,111,25,"name"],[121,33,111,29],[121,34,111,30],[121,35,111,31],[121,38,111,34,"args"],[121,42,111,38],[121,43,111,39],[121,44,111,40],[121,45,111,41],[122,10,111,41],[123,10,112,8],[123,17,112,15,"acc"],[123,20,112,18],[124,8,113,6],[124,9,113,7],[124,11,113,9],[124,12,113,10],[124,13,113,11],[124,14,113,12],[125,8,114,6,"acc"],[125,11,114,9],[125,12,114,10,"route"],[125,17,114,15],[125,18,114,16,"key"],[125,21,114,19],[125,22,114,20],[125,25,114,23],[126,10,115,8],[126,13,115,11,"base"],[126,17,115,15],[127,10,116,8],[127,13,116,11,"helpers"],[127,20,116,18],[128,10,117,8],[129,10,118,8],[129,13,118,11,"emitter"],[129,20,118,18],[129,21,118,19,"create"],[129,27,118,25],[129,28,118,26,"route"],[129,33,118,31],[129,34,118,32,"key"],[129,37,118,35],[129,38,118,36],[130,10,119,8,"dispatch"],[130,18,119,16],[130,20,119,18,"thunk"],[130,25,119,23],[130,29,119,27,"withStack"],[130,38,119,36],[130,39,119,37],[130,45,119,43,"dispatch"],[130,53,119,51],[130,54,119,52,"thunk"],[130,59,119,57],[130,60,119,58],[130,61,119,59],[131,10,120,8,"getParent"],[131,19,120,17],[131,21,120,19,"id"],[131,23,120,21],[131,27,120,25],[132,12,121,10],[132,16,121,14,"id"],[132,18,121,16],[132,23,121,21,"undefined"],[132,32,121,30],[132,36,121,34,"id"],[132,38,121,36],[132,43,121,41,"base"],[132,47,121,45],[132,48,121,46,"getId"],[132,53,121,51],[132,54,121,52],[132,55,121,53],[132,57,121,55],[133,14,122,12],[134,14,123,12],[135,14,124,12],[135,21,124,19,"acc"],[135,24,124,22],[135,25,124,23,"route"],[135,30,124,28],[135,31,124,29,"key"],[135,34,124,32],[135,35,124,33],[136,12,125,10],[137,12,126,10],[137,19,126,17,"base"],[137,23,126,21],[137,24,126,22,"getParent"],[137,33,126,31],[137,34,126,32,"id"],[137,36,126,34],[137,37,126,35],[138,10,127,8],[138,11,127,9],[139,10,128,8,"setOptions"],[139,20,128,18],[139,22,128,20,"options"],[139,29,128,27],[139,33,128,31],[140,12,129,10,"setOptions"],[140,22,129,20],[140,23,129,21,"o"],[140,24,129,22],[140,29,129,27],[141,14,130,12],[141,17,130,15,"o"],[141,18,130,16],[142,14,131,12],[142,15,131,13,"route"],[142,20,131,18],[142,21,131,19,"key"],[142,24,131,22],[142,27,131,25],[143,16,132,14],[143,19,132,17,"o"],[143,20,132,18],[143,21,132,19,"route"],[143,26,132,24],[143,27,132,25,"key"],[143,30,132,28],[143,31,132,29],[144,16,133,14],[144,19,133,17,"options"],[145,14,134,12],[146,12,135,10],[146,13,135,11],[146,14,135,12],[146,15,135,13],[147,10,136,8],[147,11,136,9],[148,10,137,8,"isFocused"],[148,19,137,17],[148,21,137,19,"isFocused"],[148,22,137,19],[148,27,137,25],[149,12,138,10],[149,16,138,16,"state"],[149,21,138,21],[149,24,138,24,"base"],[149,28,138,28],[149,29,138,29,"getState"],[149,37,138,37],[149,38,138,38],[149,39,138,39],[150,12,139,10],[150,16,139,14,"state"],[150,21,139,19],[150,22,139,20,"routes"],[150,28,139,26],[150,29,139,27,"state"],[150,34,139,32],[150,35,139,33,"index"],[150,40,139,38],[150,41,139,39],[150,42,139,40,"key"],[150,45,139,43],[150,50,139,48,"route"],[150,55,139,53],[150,56,139,54,"key"],[150,59,139,57],[150,61,139,59],[151,14,140,12],[151,21,140,19],[151,26,140,24],[152,12,141,10],[154,12,143,10],[155,12,144,10],[156,12,145,10],[156,19,145,17,"navigation"],[156,29,145,27],[156,32,145,30,"navigation"],[156,42,145,40],[156,43,145,41,"isFocused"],[156,52,145,50],[156,53,145,51],[156,54,145,52],[156,57,145,55],[156,61,145,59],[157,10,146,8],[158,8,147,6],[158,9,147,7],[159,6,148,4],[160,6,149,4],[160,13,149,11,"acc"],[160,16,149,14],[161,4,150,2],[161,5,150,3],[161,7,150,5],[161,8,150,6],[161,9,150,7],[161,10,150,8],[162,4,151,2],[162,11,151,9],[163,6,152,4,"base"],[163,10,152,8],[164,6,153,4,"navigations"],[164,17,153,15],[164,19,153,17,"cache"],[164,24,153,22],[164,25,153,23,"current"],[165,4,154,2],[165,5,154,3],[166,2,155,0],[167,0,155,1],[167,3]],"functionMap":{"names":["<global>","useNavigationCache","React.useMemo$argument_0","dispatch","Object.keys.reduce$argument_0","addListener","<anonymous>","removeListener","getParent","setOptions","isFocused","state.routes.reduce$argument_0","withStack","acc.name","withStack$argument_0","acc.route.key.dispatch","acc.route.key.getParent","acc.route.key.setOptions","setOptions$argument_0","acc.route.key.isFocused"],"mappings":"AAA;OCU;6BCW;qBCU;KDE;gDEC;KFG;mBGI;eCG;SDE;OHC;sBKC;OLE;iBME;ONK;kBOC;OPE;iBQC,WR;GDE;8BCK;IDE;sCUG;uBRM;OQQ;wBCC;ODc;kDPK;oBSC,uBC;wCDE,CT;OOE;kBIM,mBD,qBC,CJ;mBKC;SLO;oBMC;qBCC;YDM;SNC;mBQC;SRS;GVI;CDK"}},"type":"js/module"}]}