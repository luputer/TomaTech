{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":306,"column":0,"index":8166}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":306,"column":0,"index":8166}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./PlatformChecker","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":273},"end":{"line":10,"column":43,"index":316}}],"key":"tkmI0BF0tb+eF9KPjOiRa9ClHxA="}},{"name":"./errors","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":373},"end":{"line":12,"column":43,"index":416}}],"key":"4gauzrUSeggH9+YCQ8KLL3A3kuM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* eslint-disable @typescript-eslint/no-namespace */\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withReanimatedTimer = exports.setUpTests = exports.getAnimatedStyle = exports.advanceAnimationByTime = exports.advanceAnimationByFrame = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _PlatformChecker = require(_dependencyMap[2], \"./PlatformChecker\");\n  var _errors = require(_dependencyMap[3], \"./errors\");\n  var defaultFramerateConfig = {\n    fps: 60\n  };\n  var isEmpty = obj => Object.keys(obj).length === 0;\n  var getStylesFromObject = obj => {\n    return obj === undefined ? {} : Object.fromEntries(Object.entries(obj).map(_ref => {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        property = _ref2[0],\n        value = _ref2[1];\n      return [property, value._isReanimatedSharedValue ? value.value : value];\n    }));\n  };\n  var getCurrentStyle = component => {\n    var styleObject = component.props.style;\n    var currentStyle = {};\n    if (Array.isArray(styleObject)) {\n      // It is possible that style may contain nested arrays. Currently, neither `StyleSheet.flatten` nor `flattenArray` solve this issue.\n      // Hence, we're not handling nested arrays at the moment - this is a known limitation of the current implementation.\n      styleObject.forEach(style => {\n        currentStyle = {\n          ...currentStyle,\n          ...style\n        };\n      });\n      return currentStyle;\n    }\n    var jestInlineStyles = component.props.jestInlineStyle;\n    var jestAnimatedStyleValue = component.props.jestAnimatedStyle?.value;\n    if (Array.isArray(jestInlineStyles)) {\n      for (var obj of jestInlineStyles) {\n        if ('jestAnimatedStyle' in obj) {\n          continue;\n        }\n        var _inlineStyles = getStylesFromObject(obj);\n        currentStyle = {\n          ...currentStyle,\n          ..._inlineStyles\n        };\n      }\n      currentStyle = {\n        ...styleObject,\n        ...currentStyle,\n        ...jestAnimatedStyleValue\n      };\n      return currentStyle;\n    }\n    var inlineStyles = getStylesFromObject(jestInlineStyles);\n    currentStyle = isEmpty(jestAnimatedStyleValue) ? {\n      ...styleObject,\n      ...inlineStyles\n    } : {\n      ...styleObject,\n      ...jestAnimatedStyleValue\n    };\n    return currentStyle;\n  };\n  var checkEqual = (current, expected) => {\n    if (Array.isArray(expected)) {\n      if (!Array.isArray(current) || expected.length !== current.length) {\n        return false;\n      }\n      for (var i = 0; i < current.length; i++) {\n        if (!checkEqual(current[i], expected[i])) {\n          return false;\n        }\n      }\n    } else if (typeof current === 'object' && current) {\n      if (typeof expected !== 'object' || !expected) {\n        return false;\n      }\n      for (var property in expected) {\n        if (!checkEqual(current[property], expected[property])) {\n          return false;\n        }\n      }\n    } else {\n      return current === expected;\n    }\n    return true;\n  };\n  var findStyleDiff = (current, expected, shouldMatchAllProps) => {\n    var diffs = [];\n    var isEqual = true;\n    var property;\n    for (property in expected) {\n      if (!checkEqual(current[property], expected[property])) {\n        isEqual = false;\n        diffs.push({\n          property,\n          current: current[property],\n          expect: expected[property]\n        });\n      }\n    }\n    if (shouldMatchAllProps && Object.keys(current).length !== Object.keys(expected).length) {\n      isEqual = false;\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      var _property;\n      for (_property in current) {\n        if (expected[_property] === undefined) {\n          diffs.push({\n            property: _property,\n            current: current[_property],\n            expect: expected[_property]\n          });\n        }\n      }\n    }\n    return {\n      isEqual,\n      diffs\n    };\n  };\n  var compareStyle = (component, expectedStyle, config) => {\n    if (!component.props.style) {\n      return {\n        message: () => `Component doesn't have a style.`,\n        pass: false\n      };\n    }\n    var shouldMatchAllProps = config.shouldMatchAllProps;\n    var currentStyle = getCurrentStyle(component);\n    var _findStyleDiff = findStyleDiff(currentStyle, expectedStyle, shouldMatchAllProps),\n      isEqual = _findStyleDiff.isEqual,\n      diffs = _findStyleDiff.diffs;\n    if (isEqual) {\n      return {\n        message: () => 'ok',\n        pass: true\n      };\n    }\n    var currentStyleStr = JSON.stringify(currentStyle);\n    var expectedStyleStr = JSON.stringify(expectedStyle);\n    var differences = diffs.map(diff => `- '${diff.property}' should be ${JSON.stringify(diff.expect)}, but is ${JSON.stringify(diff.current)}`).join('\\n');\n    return {\n      message: () => `Expected: ${expectedStyleStr}\\nReceived: ${currentStyleStr}\\n\\nDifferences:\\n${differences}`,\n      pass: false\n    };\n  };\n  var frameTime = Math.round(1000 / defaultFramerateConfig.fps);\n  var beforeTest = () => {\n    jest.useFakeTimers();\n  };\n  var afterTest = () => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  };\n  var withReanimatedTimer = animationTest => {\n    console.warn('This method is deprecated, you should define your own before and after test hooks to enable jest.useFakeTimers(). Check out the documentation for details on testing');\n    beforeTest();\n    animationTest();\n    afterTest();\n  };\n  exports.withReanimatedTimer = withReanimatedTimer;\n  var advanceAnimationByTime = function () {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : frameTime;\n    console.warn('This method is deprecated, use jest.advanceTimersByTime directly');\n    jest.advanceTimersByTime(time);\n    jest.runOnlyPendingTimers();\n  };\n  exports.advanceAnimationByTime = advanceAnimationByTime;\n  var advanceAnimationByFrame = count => {\n    console.warn('This method is deprecated, use jest.advanceTimersByTime directly');\n    jest.advanceTimersByTime(count * frameTime);\n    jest.runOnlyPendingTimers();\n  };\n  exports.advanceAnimationByFrame = advanceAnimationByFrame;\n  var requireFunction = (0, _PlatformChecker.isJest)() ? require : () => {\n    throw new _errors.ReanimatedError('`setUpTests` is available only in Jest environment.');\n  };\n  var setUpTests = function () {\n    var userFramerateConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var expect = global.expect;\n    if (expect === undefined) {\n      var expectModule = requireFunction('expect');\n      expect = expectModule;\n      // Starting from Jest 28, \"expect\" package uses named exports instead of default export.\n      // So, requiring \"expect\" package doesn't give direct access to \"expect\" function anymore.\n      // It gives access to the module object instead.\n      // We use this info to detect if the project uses Jest 28 or higher.\n      if (typeof expect === 'object') {\n        var jestGlobals = requireFunction('@jest/globals');\n        expect = jestGlobals.expect;\n      }\n      if (expect === undefined || expect.extend === undefined) {\n        expect = expectModule.default;\n      }\n    }\n    var framerateConfig = {\n      ...defaultFramerateConfig,\n      ...userFramerateConfig\n    };\n    frameTime = Math.round(1000 / framerateConfig.fps);\n    expect.extend({\n      toHaveAnimatedStyle(component, expectedStyle) {\n        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return compareStyle(component, expectedStyle, config);\n      }\n    });\n  };\n  exports.setUpTests = setUpTests;\n  var getAnimatedStyle = component => {\n    return getCurrentStyle(\n    // This type assertion is needed to get type checking in the following\n    // functions since `ReactTestInstance` has its `props` defined as `any`.\n    component);\n  };\n  exports.getAnimatedStyle = getAnimatedStyle;\n});","lineCount":221,"map":[[2,2,1,0],[3,2,2,0],[3,14,2,12],[5,2,2,13],[5,6,2,13,"_interopRequireDefault"],[5,28,2,13],[5,31,2,13,"require"],[5,38,2,13],[5,39,2,13,"_dependencyMap"],[5,53,2,13],[6,2,2,13,"Object"],[6,8,2,13],[6,9,2,13,"defineProperty"],[6,23,2,13],[6,24,2,13,"exports"],[6,31,2,13],[7,4,2,13,"value"],[7,9,2,13],[8,2,2,13],[9,2,2,13,"exports"],[9,9,2,13],[9,10,2,13,"withReanimatedTimer"],[9,29,2,13],[9,32,2,13,"exports"],[9,39,2,13],[9,40,2,13,"setUpTests"],[9,50,2,13],[9,53,2,13,"exports"],[9,60,2,13],[9,61,2,13,"getAnimatedStyle"],[9,77,2,13],[9,80,2,13,"exports"],[9,87,2,13],[9,88,2,13,"advanceAnimationByTime"],[9,110,2,13],[9,113,2,13,"exports"],[9,120,2,13],[9,121,2,13,"advanceAnimationByFrame"],[9,144,2,13],[10,2,2,13],[10,6,2,13,"_slicedToArray2"],[10,21,2,13],[10,24,2,13,"_interopRequireDefault"],[10,46,2,13],[10,47,2,13,"require"],[10,54,2,13],[10,55,2,13,"_dependencyMap"],[10,69,2,13],[11,2,10,0],[11,6,10,0,"_PlatformChecker"],[11,22,10,0],[11,25,10,0,"require"],[11,32,10,0],[11,33,10,0,"_dependencyMap"],[11,47,10,0],[12,2,12,0],[12,6,12,0,"_errors"],[12,13,12,0],[12,16,12,0,"require"],[12,23,12,0],[12,24,12,0,"_dependencyMap"],[12,38,12,0],[13,2,27,0],[13,6,27,6,"defaultFramerateConfig"],[13,28,27,28],[13,31,27,31],[14,4,28,2,"fps"],[14,7,28,5],[14,9,28,7],[15,2,29,0],[15,3,29,1],[16,2,31,0],[16,6,31,6,"isEmpty"],[16,13,31,13],[16,16,31,17,"obj"],[16,19,31,28],[16,23,31,33,"Object"],[16,29,31,39],[16,30,31,40,"keys"],[16,34,31,44],[16,35,31,45,"obj"],[16,38,31,48],[16,39,31,49],[16,40,31,50,"length"],[16,46,31,56],[16,51,31,61],[16,52,31,62],[17,2,32,0],[17,6,32,6,"getStylesFromObject"],[17,25,32,25],[17,28,32,29,"obj"],[17,31,32,40],[17,35,32,45],[18,4,33,2],[18,11,33,9,"obj"],[18,14,33,12],[18,19,33,17,"undefined"],[18,28,33,26],[18,31,34,6],[18,32,34,7],[18,33,34,8],[18,36,35,6,"Object"],[18,42,35,12],[18,43,35,13,"fromEntries"],[18,54,35,24],[18,55,36,8,"Object"],[18,61,36,14],[18,62,36,15,"entries"],[18,69,36,22],[18,70,36,23,"obj"],[18,73,36,26],[18,74,36,27],[18,75,36,28,"map"],[18,78,36,31],[18,79,36,32,"_ref"],[18,83,36,32],[19,6,36,32],[19,10,36,32,"_ref2"],[19,15,36,32],[19,22,36,32,"_slicedToArray2"],[19,37,36,32],[19,38,36,32,"default"],[19,45,36,32],[19,47,36,32,"_ref"],[19,51,36,32],[20,8,36,34,"property"],[20,16,36,42],[20,19,36,42,"_ref2"],[20,24,36,42],[21,8,36,44,"value"],[21,13,36,49],[21,16,36,49,"_ref2"],[21,21,36,49],[22,6,36,49],[22,13,36,55],[22,14,37,10,"property"],[22,22,37,18],[22,24,38,10,"value"],[22,29,38,15],[22,30,38,16,"_isReanimatedSharedValue"],[22,54,38,40],[22,57,38,43,"value"],[22,62,38,48],[22,63,38,49,"value"],[22,68,38,54],[22,71,38,57,"value"],[22,76,38,62],[22,77,39,9],[23,4,39,9],[23,6,40,6],[23,7,40,7],[24,2,41,0],[24,3,41,1],[25,2,50,0],[25,6,50,6,"getCurrentStyle"],[25,21,50,21],[25,24,50,25,"component"],[25,33,50,49],[25,37,50,68],[26,4,51,2],[26,8,51,8,"styleObject"],[26,19,51,19],[26,22,51,22,"component"],[26,31,51,31],[26,32,51,32,"props"],[26,37,51,37],[26,38,51,38,"style"],[26,43,51,43],[27,4,53,2],[27,8,53,6,"currentStyle"],[27,20,53,18],[27,23,53,21],[27,24,53,22],[27,25,53,23],[28,4,55,2],[28,8,55,6,"Array"],[28,13,55,11],[28,14,55,12,"isArray"],[28,21,55,19],[28,22,55,20,"styleObject"],[28,33,55,31],[28,34,55,32],[28,36,55,34],[29,6,56,4],[30,6,57,4],[31,6,58,4,"styleObject"],[31,17,58,15],[31,18,58,16,"forEach"],[31,25,58,23],[31,26,58,25,"style"],[31,31,58,30],[31,35,58,35],[32,8,59,6,"currentStyle"],[32,20,59,18],[32,23,59,21],[33,10,60,8],[33,13,60,11,"currentStyle"],[33,25,60,23],[34,10,61,8],[34,13,61,11,"style"],[35,8,62,6],[35,9,62,7],[36,6,63,4],[36,7,63,5],[36,8,63,6],[37,6,65,4],[37,13,65,11,"currentStyle"],[37,25,65,23],[38,4,66,2],[39,4,68,2],[39,8,68,8,"jestInlineStyles"],[39,24,68,24],[39,27,68,27,"component"],[39,36,68,36],[39,37,68,37,"props"],[39,42,68,42],[39,43,68,43,"jestInlineStyle"],[39,58,68,77],[40,4,69,2],[40,8,69,8,"jestAnimatedStyleValue"],[40,30,69,30],[40,33,69,33,"component"],[40,42,69,42],[40,43,69,43,"props"],[40,48,69,48],[40,49,69,49,"jestAnimatedStyle"],[40,66,69,66],[40,68,69,68,"value"],[40,73,69,73],[41,4,71,2],[41,8,71,6,"Array"],[41,13,71,11],[41,14,71,12,"isArray"],[41,21,71,19],[41,22,71,20,"jestInlineStyles"],[41,38,71,36],[41,39,71,37],[41,41,71,39],[42,6,72,4],[42,11,72,9],[42,15,72,15,"obj"],[42,18,72,18],[42,22,72,22,"jestInlineStyles"],[42,38,72,38],[42,40,72,40],[43,8,73,6],[43,12,73,10],[43,31,73,29],[43,35,73,33,"obj"],[43,38,73,36],[43,40,73,38],[44,10,74,8],[45,8,75,6],[46,8,77,6],[46,12,77,12,"inlineStyles"],[46,25,77,24],[46,28,77,27,"getStylesFromObject"],[46,47,77,46],[46,48,77,47,"obj"],[46,51,77,50],[46,52,77,51],[47,8,79,6,"currentStyle"],[47,20,79,18],[47,23,79,21],[48,10,80,8],[48,13,80,11,"currentStyle"],[48,25,80,23],[49,10,81,8],[49,13,81,11,"inlineStyles"],[50,8,82,6],[50,9,82,7],[51,6,83,4],[52,6,85,4,"currentStyle"],[52,18,85,16],[52,21,85,19],[53,8,86,6],[53,11,86,9,"styleObject"],[53,22,86,20],[54,8,87,6],[54,11,87,9,"currentStyle"],[54,23,87,21],[55,8,88,6],[55,11,88,9,"jestAnimatedStyleValue"],[56,6,89,4],[56,7,89,5],[57,6,91,4],[57,13,91,11,"currentStyle"],[57,25,91,23],[58,4,92,2],[59,4,94,2],[59,8,94,8,"inlineStyles"],[59,20,94,20],[59,23,94,23,"getStylesFromObject"],[59,42,94,42],[59,43,94,43,"jestInlineStyles"],[59,59,94,59],[59,60,94,60],[60,4,96,2,"currentStyle"],[60,16,96,14],[60,19,96,17,"isEmpty"],[60,26,96,24],[60,27,96,25,"jestAnimatedStyleValue"],[60,49,96,57],[60,50,96,58],[60,53,97,6],[61,6,97,8],[61,9,97,11,"styleObject"],[61,20,97,22],[62,6,97,24],[62,9,97,27,"inlineStyles"],[63,4,97,40],[63,5,97,41],[63,8,98,6],[64,6,98,8],[64,9,98,11,"styleObject"],[64,20,98,22],[65,6,98,24],[65,9,98,27,"jestAnimatedStyleValue"],[66,4,98,50],[66,5,98,51],[67,4,100,2],[67,11,100,9,"currentStyle"],[67,23,100,21],[68,2,101,0],[68,3,101,1],[69,2,103,0],[69,6,103,6,"checkEqual"],[69,16,103,16],[69,19,103,19,"checkEqual"],[69,20,103,27,"current"],[69,27,103,41],[69,29,103,43,"expected"],[69,37,103,58],[69,42,103,63],[70,4,104,2],[70,8,104,6,"Array"],[70,13,104,11],[70,14,104,12,"isArray"],[70,21,104,19],[70,22,104,20,"expected"],[70,30,104,28],[70,31,104,29],[70,33,104,31],[71,6,105,4],[71,10,105,8],[71,11,105,9,"Array"],[71,16,105,14],[71,17,105,15,"isArray"],[71,24,105,22],[71,25,105,23,"current"],[71,32,105,30],[71,33,105,31],[71,37,105,35,"expected"],[71,45,105,43],[71,46,105,44,"length"],[71,52,105,50],[71,57,105,55,"current"],[71,64,105,62],[71,65,105,63,"length"],[71,71,105,69],[71,73,105,71],[72,8,106,6],[72,15,106,13],[72,20,106,18],[73,6,107,4],[74,6,108,4],[74,11,108,9],[74,15,108,13,"i"],[74,16,108,14],[74,19,108,17],[74,20,108,18],[74,22,108,20,"i"],[74,23,108,21],[74,26,108,24,"current"],[74,33,108,31],[74,34,108,32,"length"],[74,40,108,38],[74,42,108,40,"i"],[74,43,108,41],[74,45,108,43],[74,47,108,45],[75,8,109,6],[75,12,109,10],[75,13,109,11,"checkEqual"],[75,23,109,21],[75,24,109,22,"current"],[75,31,109,29],[75,32,109,30,"i"],[75,33,109,31],[75,34,109,32],[75,36,109,34,"expected"],[75,44,109,42],[75,45,109,43,"i"],[75,46,109,44],[75,47,109,45],[75,48,109,46],[75,50,109,48],[76,10,110,8],[76,17,110,15],[76,22,110,20],[77,8,111,6],[78,6,112,4],[79,4,113,2],[79,5,113,3],[79,11,113,9],[79,15,113,13],[79,22,113,20,"current"],[79,29,113,27],[79,34,113,32],[79,42,113,40],[79,46,113,44,"current"],[79,53,113,51],[79,55,113,53],[80,6,114,4],[80,10,114,8],[80,17,114,15,"expected"],[80,25,114,23],[80,30,114,28],[80,38,114,36],[80,42,114,40],[80,43,114,41,"expected"],[80,51,114,49],[80,53,114,51],[81,8,115,6],[81,15,115,13],[81,20,115,18],[82,6,116,4],[83,6,117,4],[83,11,117,9],[83,15,117,15,"property"],[83,23,117,23],[83,27,117,27,"expected"],[83,35,117,35],[83,37,117,37],[84,8,118,6],[84,12,118,10],[84,13,118,11,"checkEqual"],[84,23,118,21],[84,24,118,22,"current"],[84,31,118,29],[84,32,118,30,"property"],[84,40,118,38],[84,41,118,39],[84,43,118,41,"expected"],[84,51,118,49],[84,52,118,50,"property"],[84,60,118,58],[84,61,118,59],[84,62,118,60],[84,64,118,62],[85,10,119,8],[85,17,119,15],[85,22,119,20],[86,8,120,6],[87,6,121,4],[88,4,122,2],[88,5,122,3],[88,11,122,9],[89,6,123,4],[89,13,123,11,"current"],[89,20,123,18],[89,25,123,23,"expected"],[89,33,123,31],[90,4,124,2],[91,4,125,2],[91,11,125,9],[91,15,125,13],[92,2,126,0],[92,3,126,1],[93,2,128,0],[93,6,128,6,"findStyleDiff"],[93,19,128,19],[93,22,128,22,"findStyleDiff"],[93,23,129,2,"current"],[93,30,129,23],[93,32,130,2,"expected"],[93,40,130,24],[93,42,131,2,"shouldMatchAllProps"],[93,61,131,31],[93,66,132,5],[94,4,133,2],[94,8,133,8,"diffs"],[94,13,133,13],[94,16,133,16],[94,18,133,18],[95,4,134,2],[95,8,134,6,"isEqual"],[95,15,134,13],[95,18,134,16],[95,22,134,20],[96,4,135,2],[96,8,135,6,"property"],[96,16,135,34],[97,4,136,2],[97,9,136,7,"property"],[97,17,136,15],[97,21,136,19,"expected"],[97,29,136,27],[97,31,136,29],[98,6,137,4],[98,10,137,8],[98,11,137,9,"checkEqual"],[98,21,137,19],[98,22,137,20,"current"],[98,29,137,27],[98,30,137,28,"property"],[98,38,137,36],[98,39,137,37],[98,41,137,39,"expected"],[98,49,137,47],[98,50,137,48,"property"],[98,58,137,56],[98,59,137,57],[98,60,137,58],[98,62,137,60],[99,8,138,6,"isEqual"],[99,15,138,13],[99,18,138,16],[99,23,138,21],[100,8,139,6,"diffs"],[100,13,139,11],[100,14,139,12,"push"],[100,18,139,16],[100,19,139,17],[101,10,140,8,"property"],[101,18,140,16],[102,10,141,8,"current"],[102,17,141,15],[102,19,141,17,"current"],[102,26,141,24],[102,27,141,25,"property"],[102,35,141,33],[102,36,141,34],[103,10,142,8,"expect"],[103,16,142,14],[103,18,142,16,"expected"],[103,26,142,24],[103,27,142,25,"property"],[103,35,142,33],[104,8,143,6],[104,9,143,7],[104,10,143,8],[105,6,144,4],[106,4,145,2],[107,4,147,2],[107,8,148,4,"shouldMatchAllProps"],[107,27,148,23],[107,31,149,4,"Object"],[107,37,149,10],[107,38,149,11,"keys"],[107,42,149,15],[107,43,149,16,"current"],[107,50,149,23],[107,51,149,24],[107,52,149,25,"length"],[107,58,149,31],[107,63,149,36,"Object"],[107,69,149,42],[107,70,149,43,"keys"],[107,74,149,47],[107,75,149,48,"expected"],[107,83,149,56],[107,84,149,57],[107,85,149,58,"length"],[107,91,149,64],[107,93,150,4],[108,6,151,4,"isEqual"],[108,13,151,11],[108,16,151,14],[108,21,151,19],[109,6,152,4],[110,6,153,4],[110,10,153,8,"property"],[110,19,153,36],[111,6,154,4],[111,11,154,9,"property"],[111,20,154,17],[111,24,154,21,"current"],[111,31,154,28],[111,33,154,30],[112,8,155,6],[112,12,155,10,"expected"],[112,20,155,18],[112,21,155,19,"property"],[112,30,155,27],[112,31,155,28],[112,36,155,33,"undefined"],[112,45,155,42],[112,47,155,44],[113,10,156,8,"diffs"],[113,15,156,13],[113,16,156,14,"push"],[113,20,156,18],[113,21,156,19],[114,12,157,10,"property"],[114,20,157,18],[114,22,157,10,"property"],[114,31,157,18],[115,12,158,10,"current"],[115,19,158,17],[115,21,158,19,"current"],[115,28,158,26],[115,29,158,27,"property"],[115,38,158,35],[115,39,158,36],[116,12,159,10,"expect"],[116,18,159,16],[116,20,159,18,"expected"],[116,28,159,26],[116,29,159,27,"property"],[116,38,159,35],[117,10,160,8],[117,11,160,9],[117,12,160,10],[118,8,161,6],[119,6,162,4],[120,4,163,2],[121,4,165,2],[121,11,165,9],[122,6,165,11,"isEqual"],[122,13,165,18],[123,6,165,20,"diffs"],[124,4,165,26],[124,5,165,27],[125,2,166,0],[125,3,166,1],[126,2,168,0],[126,6,168,6,"compareStyle"],[126,18,168,18],[126,21,168,21,"compareStyle"],[126,22,169,2,"component"],[126,31,169,26],[126,33,170,2,"expectedStyle"],[126,46,170,29],[126,48,171,2,"config"],[126,54,171,35],[126,59,172,5],[127,4,173,2],[127,8,173,6],[127,9,173,7,"component"],[127,18,173,16],[127,19,173,17,"props"],[127,24,173,22],[127,25,173,23,"style"],[127,30,173,28],[127,32,173,30],[128,6,174,4],[128,13,174,11],[129,8,174,13,"message"],[129,15,174,20],[129,17,174,22,"message"],[129,18,174,22],[129,23,174,28],[129,56,174,61],[130,8,174,63,"pass"],[130,12,174,67],[130,14,174,69],[131,6,174,75],[131,7,174,76],[132,4,175,2],[133,4,176,2],[133,8,176,10,"shouldMatchAllProps"],[133,27,176,29],[133,30,176,34,"config"],[133,36,176,40],[133,37,176,10,"shouldMatchAllProps"],[133,56,176,29],[134,4,177,2],[134,8,177,8,"currentStyle"],[134,20,177,20],[134,23,177,23,"getCurrentStyle"],[134,38,177,38],[134,39,177,39,"component"],[134,48,177,48],[134,49,177,49],[135,4,178,2],[135,8,178,2,"_findStyleDiff"],[135,22,178,2],[135,25,178,29,"findStyleDiff"],[135,38,178,42],[135,39,179,4,"currentStyle"],[135,51,179,16],[135,53,180,4,"expectedStyle"],[135,66,180,17],[135,68,181,4,"shouldMatchAllProps"],[135,87,182,2],[135,88,182,3],[136,6,178,10,"isEqual"],[136,13,178,17],[136,16,178,17,"_findStyleDiff"],[136,30,178,17],[136,31,178,10,"isEqual"],[136,38,178,17],[137,6,178,19,"diffs"],[137,11,178,24],[137,14,178,24,"_findStyleDiff"],[137,28,178,24],[137,29,178,19,"diffs"],[137,34,178,24],[138,4,184,2],[138,8,184,6,"isEqual"],[138,15,184,13],[138,17,184,15],[139,6,185,4],[139,13,185,11],[140,8,185,13,"message"],[140,15,185,20],[140,17,185,22,"message"],[140,18,185,22],[140,23,185,28],[140,27,185,32],[141,8,185,34,"pass"],[141,12,185,38],[141,14,185,40],[142,6,185,45],[142,7,185,46],[143,4,186,2],[144,4,188,2],[144,8,188,8,"currentStyleStr"],[144,23,188,23],[144,26,188,26,"JSON"],[144,30,188,30],[144,31,188,31,"stringify"],[144,40,188,40],[144,41,188,41,"currentStyle"],[144,53,188,53],[144,54,188,54],[145,4,189,2],[145,8,189,8,"expectedStyleStr"],[145,24,189,24],[145,27,189,27,"JSON"],[145,31,189,31],[145,32,189,32,"stringify"],[145,41,189,41],[145,42,189,42,"expectedStyle"],[145,55,189,55],[145,56,189,56],[146,4,190,2],[146,8,190,8,"differences"],[146,19,190,19],[146,22,190,22,"diffs"],[146,27,190,27],[146,28,191,5,"map"],[146,31,191,8],[146,32,192,7,"diff"],[146,36,192,11],[146,40,193,8],[146,46,193,14,"diff"],[146,50,193,18],[146,51,193,19,"property"],[146,59,193,27],[146,74,193,42,"JSON"],[146,78,193,46],[146,79,193,47,"stringify"],[146,88,193,56],[146,89,194,10,"diff"],[146,93,194,14],[146,94,194,15,"expect"],[146,100,195,8],[146,101,195,9],[146,113,195,21,"JSON"],[146,117,195,25],[146,118,195,26,"stringify"],[146,127,195,35],[146,128,195,36,"diff"],[146,132,195,40],[146,133,195,41,"current"],[146,140,195,48],[146,141,195,49],[146,143,196,4],[146,144,196,5],[146,145,197,5,"join"],[146,149,197,9],[146,150,197,10],[146,154,197,14],[146,155,197,15],[147,4,199,2],[147,11,199,9],[148,6,200,4,"message"],[148,13,200,11],[148,15,200,13,"message"],[148,16,200,13],[148,21,201,6],[148,34,201,19,"expectedStyleStr"],[148,50,201,35],[148,65,201,50,"currentStyleStr"],[148,80,201,65],[148,101,201,86,"differences"],[148,112,201,97],[148,114,201,99],[149,6,202,4,"pass"],[149,10,202,8],[149,12,202,10],[150,4,203,2],[150,5,203,3],[151,2,204,0],[151,3,204,1],[152,2,206,0],[152,6,206,4,"frameTime"],[152,15,206,13],[152,18,206,16,"Math"],[152,22,206,20],[152,23,206,21,"round"],[152,28,206,26],[152,29,206,27],[152,33,206,31],[152,36,206,34,"defaultFramerateConfig"],[152,58,206,56],[152,59,206,57,"fps"],[152,62,206,60],[152,63,206,61],[153,2,208,0],[153,6,208,6,"beforeTest"],[153,16,208,16],[153,19,208,19,"beforeTest"],[153,20,208,19],[153,25,208,25],[154,4,209,2,"jest"],[154,8,209,6],[154,9,209,7,"useFakeTimers"],[154,22,209,20],[154,23,209,21],[154,24,209,22],[155,2,210,0],[155,3,210,1],[156,2,212,0],[156,6,212,6,"afterTest"],[156,15,212,15],[156,18,212,18,"afterTest"],[156,19,212,18],[156,24,212,24],[157,4,213,2,"jest"],[157,8,213,6],[157,9,213,7,"runOnlyPendingTimers"],[157,29,213,27],[157,30,213,28],[157,31,213,29],[158,4,214,2,"jest"],[158,8,214,6],[158,9,214,7,"useRealTimers"],[158,22,214,20],[158,23,214,21],[158,24,214,22],[159,2,215,0],[159,3,215,1],[160,2,217,7],[160,6,217,13,"withReanimatedTimer"],[160,25,217,32],[160,28,217,36,"animationTest"],[160,41,217,61],[160,45,217,66],[161,4,218,2,"console"],[161,11,218,9],[161,12,218,10,"warn"],[161,16,218,14],[161,17,219,4],[161,183,220,2],[161,184,220,3],[162,4,221,2,"beforeTest"],[162,14,221,12],[162,15,221,13],[162,16,221,14],[163,4,222,2,"animationTest"],[163,17,222,15],[163,18,222,16],[163,19,222,17],[164,4,223,2,"afterTest"],[164,13,223,11],[164,14,223,12],[164,15,223,13],[165,2,224,0],[165,3,224,1],[166,2,224,2,"exports"],[166,9,224,2],[166,10,224,2,"withReanimatedTimer"],[166,29,224,2],[166,32,224,2,"withReanimatedTimer"],[166,51,224,2],[167,2,226,7],[167,6,226,13,"advanceAnimationByTime"],[167,28,226,35],[167,31,226,38],[167,40,226,38,"advanceAnimationByTime"],[167,41,226,38],[167,43,226,60],[168,4,226,60],[168,8,226,39,"time"],[168,12,226,43],[168,15,226,43,"arguments"],[168,24,226,43],[168,25,226,43,"length"],[168,31,226,43],[168,39,226,43,"arguments"],[168,48,226,43],[168,56,226,43,"undefined"],[168,65,226,43],[168,68,226,43,"arguments"],[168,77,226,43],[168,83,226,46,"frameTime"],[168,92,226,55],[169,4,227,2,"console"],[169,11,227,9],[169,12,227,10,"warn"],[169,16,227,14],[169,17,228,4],[169,83,229,2],[169,84,229,3],[170,4,230,2,"jest"],[170,8,230,6],[170,9,230,7,"advanceTimersByTime"],[170,28,230,26],[170,29,230,27,"time"],[170,33,230,31],[170,34,230,32],[171,4,231,2,"jest"],[171,8,231,6],[171,9,231,7,"runOnlyPendingTimers"],[171,29,231,27],[171,30,231,28],[171,31,231,29],[172,2,232,0],[172,3,232,1],[173,2,232,2,"exports"],[173,9,232,2],[173,10,232,2,"advanceAnimationByTime"],[173,32,232,2],[173,35,232,2,"advanceAnimationByTime"],[173,57,232,2],[174,2,234,7],[174,6,234,13,"advanceAnimationByFrame"],[174,29,234,36],[174,32,234,40,"count"],[174,37,234,53],[174,41,234,58],[175,4,235,2,"console"],[175,11,235,9],[175,12,235,10,"warn"],[175,16,235,14],[175,17,236,4],[175,83,237,2],[175,84,237,3],[176,4,238,2,"jest"],[176,8,238,6],[176,9,238,7,"advanceTimersByTime"],[176,28,238,26],[176,29,238,27,"count"],[176,34,238,32],[176,37,238,35,"frameTime"],[176,46,238,44],[176,47,238,45],[177,4,239,2,"jest"],[177,8,239,6],[177,9,239,7,"runOnlyPendingTimers"],[177,29,239,27],[177,30,239,28],[177,31,239,29],[178,2,240,0],[178,3,240,1],[179,2,240,2,"exports"],[179,9,240,2],[179,10,240,2,"advanceAnimationByFrame"],[179,33,240,2],[179,36,240,2,"advanceAnimationByFrame"],[179,59,240,2],[180,2,242,0],[180,6,242,6,"requireFunction"],[180,21,242,21],[180,24,242,24],[180,28,242,24,"isJest"],[180,51,242,30],[180,53,242,31],[180,54,242,32],[180,57,243,4,"require"],[180,64,243,11],[180,67,244,4],[180,73,244,10],[181,4,245,6],[181,10,245,12],[181,14,245,16,"ReanimatedError"],[181,37,245,31],[181,38,246,8],[181,91,247,6],[181,92,247,7],[182,2,248,4],[182,3,248,5],[183,2,254,7],[183,6,254,13,"setUpTests"],[183,16,254,23],[183,19,254,26],[183,28,254,26,"setUpTests"],[183,29,254,26],[183,31,254,56],[184,4,254,56],[184,8,254,27,"userFramerateConfig"],[184,27,254,46],[184,30,254,46,"arguments"],[184,39,254,46],[184,40,254,46,"length"],[184,46,254,46],[184,54,254,46,"arguments"],[184,63,254,46],[184,71,254,46,"undefined"],[184,80,254,46],[184,83,254,46,"arguments"],[184,92,254,46],[184,98,254,49],[184,99,254,50],[184,100,254,51],[185,4,255,2],[185,8,255,6,"expect"],[185,14,255,25],[185,17,255,29,"global"],[185,23,255,35],[185,24,256,5,"expect"],[185,30,256,11],[186,4,257,2],[186,8,257,6,"expect"],[186,14,257,12],[186,19,257,17,"undefined"],[186,28,257,26],[186,30,257,28],[187,6,258,4],[187,10,258,10,"expectModule"],[187,22,258,22],[187,25,258,25,"requireFunction"],[187,40,258,40],[187,41,258,41],[187,49,258,49],[187,50,258,50],[188,6,259,4,"expect"],[188,12,259,10],[188,15,259,13,"expectModule"],[188,27,259,25],[189,6,260,4],[190,6,261,4],[191,6,262,4],[192,6,263,4],[193,6,264,4],[193,10,264,8],[193,17,264,15,"expect"],[193,23,264,21],[193,28,264,26],[193,36,264,34],[193,38,264,36],[194,8,265,6],[194,12,265,12,"jestGlobals"],[194,23,265,23],[194,26,265,26,"requireFunction"],[194,41,265,41],[194,42,265,42],[194,57,265,57],[194,58,265,58],[195,8,266,6,"expect"],[195,14,266,12],[195,17,266,15,"jestGlobals"],[195,28,266,26],[195,29,266,27,"expect"],[195,35,266,33],[196,6,267,4],[197,6,268,4],[197,10,268,8,"expect"],[197,16,268,14],[197,21,268,19,"undefined"],[197,30,268,28],[197,34,268,32,"expect"],[197,40,268,38],[197,41,268,39,"extend"],[197,47,268,45],[197,52,268,50,"undefined"],[197,61,268,59],[197,63,268,61],[198,8,269,6,"expect"],[198,14,269,12],[198,17,269,15,"expectModule"],[198,29,269,27],[198,30,269,28,"default"],[198,37,269,35],[199,6,270,4],[200,4,271,2],[201,4,273,2],[201,8,273,8,"framerateConfig"],[201,23,273,23],[201,26,273,26],[202,6,274,4],[202,9,274,7,"defaultFramerateConfig"],[202,31,274,29],[203,6,275,4],[203,9,275,7,"userFramerateConfig"],[204,4,276,2],[204,5,276,3],[205,4,277,2,"frameTime"],[205,13,277,11],[205,16,277,14,"Math"],[205,20,277,18],[205,21,277,19,"round"],[205,26,277,24],[205,27,277,25],[205,31,277,29],[205,34,277,32,"framerateConfig"],[205,49,277,47],[205,50,277,48,"fps"],[205,53,277,51],[205,54,277,52],[206,4,279,2,"expect"],[206,10,279,8],[206,11,279,9,"extend"],[206,17,279,15],[206,18,279,16],[207,6,280,4,"toHaveAnimatedStyle"],[207,25,280,23,"toHaveAnimatedStyle"],[207,26,281,6,"component"],[207,35,284,34],[207,37,285,6,"expectedStyle"],[207,50,285,33],[207,52,287,6],[208,8,287,6],[208,12,286,6,"config"],[208,18,286,39],[208,21,286,39,"arguments"],[208,30,286,39],[208,31,286,39,"length"],[208,37,286,39],[208,45,286,39,"arguments"],[208,54,286,39],[208,62,286,39,"undefined"],[208,71,286,39],[208,74,286,39,"arguments"],[208,83,286,39],[208,89,286,42],[208,90,286,43],[208,91,286,44],[209,8,288,6],[209,15,288,13,"compareStyle"],[209,27,288,25],[209,28,288,26,"component"],[209,37,288,35],[209,39,288,37,"expectedStyle"],[209,52,288,50],[209,54,288,52,"config"],[209,60,288,58],[209,61,288,59],[210,6,289,4],[211,4,290,2],[211,5,290,3],[211,6,290,4],[212,2,291,0],[212,3,291,1],[213,2,291,2,"exports"],[213,9,291,2],[213,10,291,2,"setUpTests"],[213,20,291,2],[213,23,291,2,"setUpTests"],[213,33,291,2],[214,2,299,7],[214,6,299,13,"getAnimatedStyle"],[214,22,299,29],[214,25,299,33,"component"],[214,34,299,61],[214,38,299,66],[215,4,300,2],[215,11,300,9,"getCurrentStyle"],[215,26,300,24],[216,4,301,4],[217,4,302,4],[218,4,303,4,"component"],[218,13,304,2],[218,14,304,3],[219,2,305,0],[219,3,305,1],[220,2,305,2,"exports"],[220,9,305,2],[220,10,305,2,"getAnimatedStyle"],[220,26,305,2],[220,29,305,2,"getAnimatedStyle"],[220,45,305,2],[221,0,305,2],[221,3]],"functionMap":{"names":["<global>","isEmpty","getStylesFromObject","Object.entries.map$argument_0","getCurrentStyle","styleObject.forEach$argument_0","checkEqual","findStyleDiff","compareStyle","message","diffs.map$argument_0","beforeTest","afterTest","withReanimatedTimer","advanceAnimationByTime","advanceAnimationByFrame","<anonymous>","setUpTests","expect.extend$argument_0.toHaveAnimatedStyle","getAnimatedStyle"],"mappings":"AAA;gBC8B,8CD;4BEC;gCCI;SDG;CFE;wBIS;wBCQ;KDK;CJsC;mBME;CNuB;sBOE;CPsC;qBQE;sBCM,uCD;sBCW,UD;MEO;mDFG;aCK;mGDC;CRG;mBWI;CXE;kBYE;CZG;mCaE;CbO;sCcE;CdM;uCeE;CfM;IgBI;KhBI;0BiBM;IC0B;KDS;CjBE;gCmBQ;CnBM"}},"type":"js/module"}]}