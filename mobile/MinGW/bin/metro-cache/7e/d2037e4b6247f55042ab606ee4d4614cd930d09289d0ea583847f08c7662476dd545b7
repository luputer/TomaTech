{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":230,"column":0,"index":6593}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":206},"end":{"line":10,"column":68,"index":274}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":275},"end":{"line":11,"column":45,"index":320}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeWebSocketModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":321},"end":{"line":12,"column":60,"index":381}}],"key":"Dj/4SJpAZslk3IS3t3drfDLHrjY="}},{"name":"base64-js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":382},"end":{"line":13,"column":31,"index":413}}],"key":"WsVgY7Y3wTb44B4uSuqCo4p+2Ho="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _NativeEventEmitter = _interopRequireDefault(require(_dependencyMap[1], \"../EventEmitter/NativeEventEmitter\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"../Utilities/Platform\"));\n  var _NativeWebSocketModule = _interopRequireDefault(require(_dependencyMap[3], \"./NativeWebSocketModule\"));\n  var _base64Js = _interopRequireDefault(require(_dependencyMap[4], \"base64-js\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   */\n\n  var originalRCTWebSocketConnect = _NativeWebSocketModule.default.connect;\n  var originalRCTWebSocketSend = _NativeWebSocketModule.default.send;\n  var originalRCTWebSocketSendBinary = _NativeWebSocketModule.default.sendBinary;\n  var originalRCTWebSocketClose = _NativeWebSocketModule.default.close;\n  var eventEmitter;\n  var subscriptions;\n  var closeCallback;\n  var sendCallback;\n  var connectCallback;\n  var onOpenCallback;\n  var onMessageCallback;\n  var onErrorCallback;\n  var onCloseCallback;\n  var isInterceptorEnabled = false;\n\n  /**\n   * A network interceptor which monkey-patches RCTWebSocketModule methods\n   * to gather all websocket network requests/responses, in order to show\n   * their information in the React Native inspector development tool.\n   */\n\n  var WebSocketInterceptor = {\n    /**\n     * Invoked when RCTWebSocketModule.close(...) is called.\n     */\n    setCloseCallback(callback) {\n      closeCallback = callback;\n    },\n    /**\n     * Invoked when RCTWebSocketModule.send(...) or sendBinary(...) is called.\n     */\n    setSendCallback(callback) {\n      sendCallback = callback;\n    },\n    /**\n     * Invoked when RCTWebSocketModule.connect(...) is called.\n     */\n    setConnectCallback(callback) {\n      connectCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketOpen\" happens.\n     */\n    setOnOpenCallback(callback) {\n      onOpenCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketMessage\" happens.\n     */\n    setOnMessageCallback(callback) {\n      onMessageCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketFailed\" happens.\n     */\n    setOnErrorCallback(callback) {\n      onErrorCallback = callback;\n    },\n    /**\n     * Invoked when event \"websocketClosed\" happens.\n     */\n    setOnCloseCallback(callback) {\n      onCloseCallback = callback;\n    },\n    isInterceptorEnabled() {\n      return isInterceptorEnabled;\n    },\n    _unregisterEvents() {\n      subscriptions.forEach(e => e.remove());\n      subscriptions = [];\n    },\n    /**\n     * Add listeners to the RCTWebSocketModule events to intercept them.\n     */\n    _registerEvents() {\n      subscriptions = [eventEmitter.addListener('websocketMessage', ev => {\n        if (onMessageCallback) {\n          onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);\n        }\n      }), eventEmitter.addListener('websocketOpen', ev => {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }), eventEmitter.addListener('websocketClosed', ev => {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {\n            code: ev.code,\n            reason: ev.reason\n          });\n        }\n      }), eventEmitter.addListener('websocketFailed', ev => {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {\n            message: ev.message\n          });\n        }\n      })];\n    },\n    enableInterception() {\n      if (isInterceptorEnabled) {\n        return;\n      }\n      eventEmitter = new _NativeEventEmitter.default(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      _Platform.default.OS !== 'ios' ? null : _NativeWebSocketModule.default);\n      WebSocketInterceptor._registerEvents();\n\n      // Override `connect` method for all RCTWebSocketModule requests\n      // to intercept the request url, protocols, options and socketId,\n      // then pass them through the `connectCallback`.\n      _NativeWebSocketModule.default.connect = function (url, protocols, options, socketId) {\n        if (connectCallback) {\n          connectCallback(url, protocols, options, socketId);\n        }\n        originalRCTWebSocketConnect.apply(this, arguments);\n      };\n\n      // Override `send` method for all RCTWebSocketModule requests to intercept\n      // the data sent, then pass them through the `sendCallback`.\n      _NativeWebSocketModule.default.send = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(data, socketId);\n        }\n        originalRCTWebSocketSend.apply(this, arguments);\n      };\n\n      // Override `sendBinary` method for all RCTWebSocketModule requests to\n      // intercept the data sent, then pass them through the `sendCallback`.\n      _NativeWebSocketModule.default.sendBinary = function (data, socketId) {\n        if (sendCallback) {\n          sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n        }\n        originalRCTWebSocketSendBinary.apply(this, arguments);\n      };\n\n      // Override `close` method for all RCTWebSocketModule requests to intercept\n      // the close information, then pass them through the `closeCallback`.\n      _NativeWebSocketModule.default.close = function () {\n        if (closeCallback) {\n          if (arguments.length === 3) {\n            closeCallback(arguments[0], arguments[1], arguments[2]);\n          } else {\n            closeCallback(null, null, arguments[0]);\n          }\n        }\n        originalRCTWebSocketClose.apply(this, arguments);\n      };\n      isInterceptorEnabled = true;\n    },\n    _arrayBufferToString(data) {\n      var value = _base64Js.default.toByteArray(data).buffer;\n      if (value === undefined || value === null) {\n        return '(no value)';\n      }\n      if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {\n        return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n      }\n      return value;\n    },\n    // Unpatch RCTWebSocketModule methods and remove the callbacks.\n    disableInterception() {\n      if (!isInterceptorEnabled) {\n        return;\n      }\n      isInterceptorEnabled = false;\n      _NativeWebSocketModule.default.send = originalRCTWebSocketSend;\n      _NativeWebSocketModule.default.sendBinary = originalRCTWebSocketSendBinary;\n      _NativeWebSocketModule.default.close = originalRCTWebSocketClose;\n      _NativeWebSocketModule.default.connect = originalRCTWebSocketConnect;\n      connectCallback = null;\n      closeCallback = null;\n      sendCallback = null;\n      onOpenCallback = null;\n      onMessageCallback = null;\n      onCloseCallback = null;\n      onErrorCallback = null;\n      WebSocketInterceptor._unregisterEvents();\n    }\n  };\n  module.exports = WebSocketInterceptor;\n});","lineCount":197,"map":[[3,2,10,0],[3,6,10,0,"_NativeEventEmitter"],[3,25,10,0],[3,28,10,0,"_interopRequireDefault"],[3,50,10,0],[3,51,10,0,"require"],[3,58,10,0],[3,59,10,0,"_dependencyMap"],[3,73,10,0],[4,2,11,0],[4,6,11,0,"_Platform"],[4,15,11,0],[4,18,11,0,"_interopRequireDefault"],[4,40,11,0],[4,41,11,0,"require"],[4,48,11,0],[4,49,11,0,"_dependencyMap"],[4,63,11,0],[5,2,12,0],[5,6,12,0,"_NativeWebSocketModule"],[5,28,12,0],[5,31,12,0,"_interopRequireDefault"],[5,53,12,0],[5,54,12,0,"require"],[5,61,12,0],[5,62,12,0,"_dependencyMap"],[5,76,12,0],[6,2,13,0],[6,6,13,0,"_base64Js"],[6,15,13,0],[6,18,13,0,"_interopRequireDefault"],[6,40,13,0],[6,41,13,0,"require"],[6,48,13,0],[6,49,13,0,"_dependencyMap"],[6,63,13,0],[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[16,2,15,0],[16,6,15,6,"originalRCTWebSocketConnect"],[16,33,15,33],[16,36,15,36,"NativeWebSocketModule"],[16,66,15,57],[16,67,15,58,"connect"],[16,74,15,65],[17,2,16,0],[17,6,16,6,"originalRCTWebSocketSend"],[17,30,16,30],[17,33,16,33,"NativeWebSocketModule"],[17,63,16,54],[17,64,16,55,"send"],[17,68,16,59],[18,2,17,0],[18,6,17,6,"originalRCTWebSocketSendBinary"],[18,36,17,36],[18,39,17,39,"NativeWebSocketModule"],[18,69,17,60],[18,70,17,61,"sendBinary"],[18,80,17,71],[19,2,18,0],[19,6,18,6,"originalRCTWebSocketClose"],[19,31,18,31],[19,34,18,34,"NativeWebSocketModule"],[19,64,18,55],[19,65,18,56,"close"],[19,70,18,61],[20,2,20,0],[20,6,20,4,"eventEmitter"],[20,18,20,16],[21,2,21,0],[21,6,21,4,"subscriptions"],[21,19,21,17],[22,2,23,0],[22,6,23,4,"closeCallback"],[22,19,23,17],[23,2,24,0],[23,6,24,4,"sendCallback"],[23,18,24,16],[24,2,25,0],[24,6,25,4,"connectCallback"],[24,21,25,19],[25,2,26,0],[25,6,26,4,"onOpenCallback"],[25,20,26,18],[26,2,27,0],[26,6,27,4,"onMessageCallback"],[26,23,27,21],[27,2,28,0],[27,6,28,4,"onErrorCallback"],[27,21,28,19],[28,2,29,0],[28,6,29,4,"onCloseCallback"],[28,21,29,19],[29,2,31,0],[29,6,31,4,"isInterceptorEnabled"],[29,26,31,24],[29,29,31,27],[29,34,31,32],[31,2,33,0],[32,0,34,0],[33,0,35,0],[34,0,36,0],[35,0,37,0],[37,2,39,0],[37,6,39,6,"WebSocketInterceptor"],[37,26,39,26],[37,29,39,29],[38,4,40,2],[39,0,41,0],[40,0,42,0],[41,4,43,2,"setCloseCallback"],[41,20,43,18,"setCloseCallback"],[41,21,43,19,"callback"],[41,29,43,27],[41,31,43,29],[42,6,44,4,"closeCallback"],[42,19,44,17],[42,22,44,20,"callback"],[42,30,44,28],[43,4,45,2],[43,5,45,3],[44,4,47,2],[45,0,48,0],[46,0,49,0],[47,4,50,2,"setSendCallback"],[47,19,50,17,"setSendCallback"],[47,20,50,18,"callback"],[47,28,50,26],[47,30,50,28],[48,6,51,4,"sendCallback"],[48,18,51,16],[48,21,51,19,"callback"],[48,29,51,27],[49,4,52,2],[49,5,52,3],[50,4,54,2],[51,0,55,0],[52,0,56,0],[53,4,57,2,"setConnectCallback"],[53,22,57,20,"setConnectCallback"],[53,23,57,21,"callback"],[53,31,57,29],[53,33,57,31],[54,6,58,4,"connectCallback"],[54,21,58,19],[54,24,58,22,"callback"],[54,32,58,30],[55,4,59,2],[55,5,59,3],[56,4,61,2],[57,0,62,0],[58,0,63,0],[59,4,64,2,"setOnOpenCallback"],[59,21,64,19,"setOnOpenCallback"],[59,22,64,20,"callback"],[59,30,64,28],[59,32,64,30],[60,6,65,4,"onOpenCallback"],[60,20,65,18],[60,23,65,21,"callback"],[60,31,65,29],[61,4,66,2],[61,5,66,3],[62,4,68,2],[63,0,69,0],[64,0,70,0],[65,4,71,2,"setOnMessageCallback"],[65,24,71,22,"setOnMessageCallback"],[65,25,71,23,"callback"],[65,33,71,31],[65,35,71,33],[66,6,72,4,"onMessageCallback"],[66,23,72,21],[66,26,72,24,"callback"],[66,34,72,32],[67,4,73,2],[67,5,73,3],[68,4,75,2],[69,0,76,0],[70,0,77,0],[71,4,78,2,"setOnErrorCallback"],[71,22,78,20,"setOnErrorCallback"],[71,23,78,21,"callback"],[71,31,78,29],[71,33,78,31],[72,6,79,4,"onErrorCallback"],[72,21,79,19],[72,24,79,22,"callback"],[72,32,79,30],[73,4,80,2],[73,5,80,3],[74,4,82,2],[75,0,83,0],[76,0,84,0],[77,4,85,2,"setOnCloseCallback"],[77,22,85,20,"setOnCloseCallback"],[77,23,85,21,"callback"],[77,31,85,29],[77,33,85,31],[78,6,86,4,"onCloseCallback"],[78,21,86,19],[78,24,86,22,"callback"],[78,32,86,30],[79,4,87,2],[79,5,87,3],[80,4,89,2,"isInterceptorEnabled"],[80,24,89,22,"isInterceptorEnabled"],[80,25,89,22],[80,27,89,25],[81,6,90,4],[81,13,90,11,"isInterceptorEnabled"],[81,33,90,31],[82,4,91,2],[82,5,91,3],[83,4,93,2,"_unregisterEvents"],[83,21,93,19,"_unregisterEvents"],[83,22,93,19],[83,24,93,22],[84,6,94,4,"subscriptions"],[84,19,94,17],[84,20,94,18,"forEach"],[84,27,94,25],[84,28,94,26,"e"],[84,29,94,27],[84,33,94,31,"e"],[84,34,94,32],[84,35,94,33,"remove"],[84,41,94,39],[84,42,94,40],[84,43,94,41],[84,44,94,42],[85,6,95,4,"subscriptions"],[85,19,95,17],[85,22,95,20],[85,24,95,22],[86,4,96,2],[86,5,96,3],[87,4,98,2],[88,0,99,0],[89,0,100,0],[90,4,101,2,"_registerEvents"],[90,19,101,17,"_registerEvents"],[90,20,101,17],[90,22,101,20],[91,6,102,4,"subscriptions"],[91,19,102,17],[91,22,102,20],[91,23,103,6,"eventEmitter"],[91,35,103,18],[91,36,103,19,"addListener"],[91,47,103,30],[91,48,103,31],[91,66,103,49],[91,68,103,51,"ev"],[91,70,103,53],[91,74,103,57],[92,8,104,8],[92,12,104,12,"onMessageCallback"],[92,29,104,29],[92,31,104,31],[93,10,105,10,"onMessageCallback"],[93,27,105,27],[93,28,106,12,"ev"],[93,30,106,14],[93,31,106,15,"id"],[93,33,106,17],[93,35,107,12,"ev"],[93,37,107,14],[93,38,107,15,"type"],[93,42,107,19],[93,47,107,24],[93,55,107,32],[93,58,108,16,"WebSocketInterceptor"],[93,78,108,36],[93,79,108,37,"_arrayBufferToString"],[93,99,108,57],[93,100,108,58,"ev"],[93,102,108,60],[93,103,108,61,"data"],[93,107,108,65],[93,108,108,66],[93,111,109,16,"ev"],[93,113,109,18],[93,114,109,19,"data"],[93,118,110,10],[93,119,110,11],[94,8,111,8],[95,6,112,6],[95,7,112,7],[95,8,112,8],[95,10,113,6,"eventEmitter"],[95,22,113,18],[95,23,113,19,"addListener"],[95,34,113,30],[95,35,113,31],[95,50,113,46],[95,52,113,48,"ev"],[95,54,113,50],[95,58,113,54],[96,8,114,8],[96,12,114,12,"onOpenCallback"],[96,26,114,26],[96,28,114,28],[97,10,115,10,"onOpenCallback"],[97,24,115,24],[97,25,115,25,"ev"],[97,27,115,27],[97,28,115,28,"id"],[97,30,115,30],[97,31,115,31],[98,8,116,8],[99,6,117,6],[99,7,117,7],[99,8,117,8],[99,10,118,6,"eventEmitter"],[99,22,118,18],[99,23,118,19,"addListener"],[99,34,118,30],[99,35,118,31],[99,52,118,48],[99,54,118,50,"ev"],[99,56,118,52],[99,60,118,56],[100,8,119,8],[100,12,119,12,"onCloseCallback"],[100,27,119,27],[100,29,119,29],[101,10,120,10,"onCloseCallback"],[101,25,120,25],[101,26,120,26,"ev"],[101,28,120,28],[101,29,120,29,"id"],[101,31,120,31],[101,33,120,33],[102,12,120,34,"code"],[102,16,120,38],[102,18,120,40,"ev"],[102,20,120,42],[102,21,120,43,"code"],[102,25,120,47],[103,12,120,49,"reason"],[103,18,120,55],[103,20,120,57,"ev"],[103,22,120,59],[103,23,120,60,"reason"],[104,10,120,66],[104,11,120,67],[104,12,120,68],[105,8,121,8],[106,6,122,6],[106,7,122,7],[106,8,122,8],[106,10,123,6,"eventEmitter"],[106,22,123,18],[106,23,123,19,"addListener"],[106,34,123,30],[106,35,123,31],[106,52,123,48],[106,54,123,50,"ev"],[106,56,123,52],[106,60,123,56],[107,8,124,8],[107,12,124,12,"onErrorCallback"],[107,27,124,27],[107,29,124,29],[108,10,125,10,"onErrorCallback"],[108,25,125,25],[108,26,125,26,"ev"],[108,28,125,28],[108,29,125,29,"id"],[108,31,125,31],[108,33,125,33],[109,12,125,34,"message"],[109,19,125,41],[109,21,125,43,"ev"],[109,23,125,45],[109,24,125,46,"message"],[110,10,125,53],[110,11,125,54],[110,12,125,55],[111,8,126,8],[112,6,127,6],[112,7,127,7],[112,8,127,8],[112,9,128,5],[113,4,129,2],[113,5,129,3],[114,4,131,2,"enableInterception"],[114,22,131,20,"enableInterception"],[114,23,131,20],[114,25,131,23],[115,6,132,4],[115,10,132,8,"isInterceptorEnabled"],[115,30,132,28],[115,32,132,30],[116,8,133,6],[117,6,134,4],[118,6,135,4,"eventEmitter"],[118,18,135,16],[118,21,135,19],[118,25,135,23,"NativeEventEmitter"],[118,52,135,41],[119,6,136,6],[120,6,137,6],[121,6,138,6,"Platform"],[121,23,138,14],[121,24,138,15,"OS"],[121,26,138,17],[121,31,138,22],[121,36,138,27],[121,39,138,30],[121,43,138,34],[121,46,138,37,"NativeWebSocketModule"],[121,76,139,4],[121,77,139,5],[122,6,140,4,"WebSocketInterceptor"],[122,26,140,24],[122,27,140,25,"_registerEvents"],[122,42,140,40],[122,43,140,41],[122,44,140,42],[124,6,142,4],[125,6,143,4],[126,6,144,4],[127,6,145,4,"NativeWebSocketModule"],[127,36,145,25],[127,37,145,26,"connect"],[127,44,145,33],[127,47,145,36],[127,57,146,6,"url"],[127,60,146,9],[127,62,147,6,"protocols"],[127,71,147,15],[127,73,148,6,"options"],[127,80,148,13],[127,82,149,6,"socketId"],[127,90,149,14],[127,92,150,6],[128,8,151,6],[128,12,151,10,"connectCallback"],[128,27,151,25],[128,29,151,27],[129,10,152,8,"connectCallback"],[129,25,152,23],[129,26,152,24,"url"],[129,29,152,27],[129,31,152,29,"protocols"],[129,40,152,38],[129,42,152,40,"options"],[129,49,152,47],[129,51,152,49,"socketId"],[129,59,152,57],[129,60,152,58],[130,8,153,6],[131,8,154,6,"originalRCTWebSocketConnect"],[131,35,154,33],[131,36,154,34,"apply"],[131,41,154,39],[131,42,154,40],[131,46,154,44],[131,48,154,46,"arguments"],[131,57,154,55],[131,58,154,56],[132,6,155,4],[132,7,155,5],[134,6,157,4],[135,6,158,4],[136,6,159,4,"NativeWebSocketModule"],[136,36,159,25],[136,37,159,26,"send"],[136,41,159,30],[136,44,159,33],[136,54,159,43,"data"],[136,58,159,47],[136,60,159,49,"socketId"],[136,68,159,57],[136,70,159,59],[137,8,160,6],[137,12,160,10,"sendCallback"],[137,24,160,22],[137,26,160,24],[138,10,161,8,"sendCallback"],[138,22,161,20],[138,23,161,21,"data"],[138,27,161,25],[138,29,161,27,"socketId"],[138,37,161,35],[138,38,161,36],[139,8,162,6],[140,8,163,6,"originalRCTWebSocketSend"],[140,32,163,30],[140,33,163,31,"apply"],[140,38,163,36],[140,39,163,37],[140,43,163,41],[140,45,163,43,"arguments"],[140,54,163,52],[140,55,163,53],[141,6,164,4],[141,7,164,5],[143,6,166,4],[144,6,167,4],[145,6,168,4,"NativeWebSocketModule"],[145,36,168,25],[145,37,168,26,"sendBinary"],[145,47,168,36],[145,50,168,39],[145,60,168,49,"data"],[145,64,168,53],[145,66,168,55,"socketId"],[145,74,168,63],[145,76,168,65],[146,8,169,6],[146,12,169,10,"sendCallback"],[146,24,169,22],[146,26,169,24],[147,10,170,8,"sendCallback"],[147,22,170,20],[147,23,170,21,"WebSocketInterceptor"],[147,43,170,41],[147,44,170,42,"_arrayBufferToString"],[147,64,170,62],[147,65,170,63,"data"],[147,69,170,67],[147,70,170,68],[147,72,170,70,"socketId"],[147,80,170,78],[147,81,170,79],[148,8,171,6],[149,8,172,6,"originalRCTWebSocketSendBinary"],[149,38,172,36],[149,39,172,37,"apply"],[149,44,172,42],[149,45,172,43],[149,49,172,47],[149,51,172,49,"arguments"],[149,60,172,58],[149,61,172,59],[150,6,173,4],[150,7,173,5],[152,6,175,4],[153,6,176,4],[154,6,177,4,"NativeWebSocketModule"],[154,36,177,25],[154,37,177,26,"close"],[154,42,177,31],[154,45,177,34],[154,57,177,46],[155,8,178,6],[155,12,178,10,"closeCallback"],[155,25,178,23],[155,27,178,25],[156,10,179,8],[156,14,179,12,"arguments"],[156,23,179,21],[156,24,179,22,"length"],[156,30,179,28],[156,35,179,33],[156,36,179,34],[156,38,179,36],[157,12,180,10,"closeCallback"],[157,25,180,23],[157,26,180,24,"arguments"],[157,35,180,33],[157,36,180,34],[157,37,180,35],[157,38,180,36],[157,40,180,38,"arguments"],[157,49,180,47],[157,50,180,48],[157,51,180,49],[157,52,180,50],[157,54,180,52,"arguments"],[157,63,180,61],[157,64,180,62],[157,65,180,63],[157,66,180,64],[157,67,180,65],[158,10,181,8],[158,11,181,9],[158,17,181,15],[159,12,182,10,"closeCallback"],[159,25,182,23],[159,26,182,24],[159,30,182,28],[159,32,182,30],[159,36,182,34],[159,38,182,36,"arguments"],[159,47,182,45],[159,48,182,46],[159,49,182,47],[159,50,182,48],[159,51,182,49],[160,10,183,8],[161,8,184,6],[162,8,185,6,"originalRCTWebSocketClose"],[162,33,185,31],[162,34,185,32,"apply"],[162,39,185,37],[162,40,185,38],[162,44,185,42],[162,46,185,44,"arguments"],[162,55,185,53],[162,56,185,54],[163,6,186,4],[163,7,186,5],[164,6,188,4,"isInterceptorEnabled"],[164,26,188,24],[164,29,188,27],[164,33,188,31],[165,4,189,2],[165,5,189,3],[166,4,191,2,"_arrayBufferToString"],[166,24,191,22,"_arrayBufferToString"],[166,25,191,23,"data"],[166,29,191,27],[166,31,191,29],[167,6,192,4],[167,10,192,10,"value"],[167,15,192,15],[167,18,192,18,"base64"],[167,35,192,24],[167,36,192,25,"toByteArray"],[167,47,192,36],[167,48,192,37,"data"],[167,52,192,41],[167,53,192,42],[167,54,192,43,"buffer"],[167,60,192,49],[168,6,193,4],[168,10,193,8,"value"],[168,15,193,13],[168,20,193,18,"undefined"],[168,29,193,27],[168,33,193,31,"value"],[168,38,193,36],[168,43,193,41],[168,47,193,45],[168,49,193,47],[169,8,194,6],[169,15,194,13],[169,27,194,25],[170,6,195,4],[171,6,196,4],[171,10,197,6],[171,17,197,13,"ArrayBuffer"],[171,28,197,24],[171,33,197,29],[171,44,197,40],[171,48,198,6],[171,55,198,13,"Uint8Array"],[171,65,198,23],[171,70,198,28],[171,81,198,39],[171,85,199,6,"value"],[171,90,199,11],[171,102,199,23,"ArrayBuffer"],[171,113,199,34],[171,115,200,6],[172,8,201,6],[172,15,201,13],[172,31,201,29,"String"],[172,37,201,35],[172,38,201,36,"Array"],[172,43,201,41],[172,44,201,42,"from"],[172,48,201,46],[172,49,201,47],[172,53,201,51,"Uint8Array"],[172,63,201,61],[172,64,201,62,"value"],[172,69,201,67],[172,70,201,68],[172,71,201,69],[172,72,201,70],[172,75,201,73],[173,6,202,4],[174,6,203,4],[174,13,203,11,"value"],[174,18,203,16],[175,4,204,2],[175,5,204,3],[176,4,206,2],[177,4,207,2,"disableInterception"],[177,23,207,21,"disableInterception"],[177,24,207,21],[177,26,207,24],[178,6,208,4],[178,10,208,8],[178,11,208,9,"isInterceptorEnabled"],[178,31,208,29],[178,33,208,31],[179,8,209,6],[180,6,210,4],[181,6,211,4,"isInterceptorEnabled"],[181,26,211,24],[181,29,211,27],[181,34,211,32],[182,6,212,4,"NativeWebSocketModule"],[182,36,212,25],[182,37,212,26,"send"],[182,41,212,30],[182,44,212,33,"originalRCTWebSocketSend"],[182,68,212,57],[183,6,213,4,"NativeWebSocketModule"],[183,36,213,25],[183,37,213,26,"sendBinary"],[183,47,213,36],[183,50,213,39,"originalRCTWebSocketSendBinary"],[183,80,213,69],[184,6,214,4,"NativeWebSocketModule"],[184,36,214,25],[184,37,214,26,"close"],[184,42,214,31],[184,45,214,34,"originalRCTWebSocketClose"],[184,70,214,59],[185,6,215,4,"NativeWebSocketModule"],[185,36,215,25],[185,37,215,26,"connect"],[185,44,215,33],[185,47,215,36,"originalRCTWebSocketConnect"],[185,74,215,63],[186,6,217,4,"connectCallback"],[186,21,217,19],[186,24,217,22],[186,28,217,26],[187,6,218,4,"closeCallback"],[187,19,218,17],[187,22,218,20],[187,26,218,24],[188,6,219,4,"sendCallback"],[188,18,219,16],[188,21,219,19],[188,25,219,23],[189,6,220,4,"onOpenCallback"],[189,20,220,18],[189,23,220,21],[189,27,220,25],[190,6,221,4,"onMessageCallback"],[190,23,221,21],[190,26,221,24],[190,30,221,28],[191,6,222,4,"onCloseCallback"],[191,21,222,19],[191,24,222,22],[191,28,222,26],[192,6,223,4,"onErrorCallback"],[192,21,223,19],[192,24,223,22],[192,28,223,26],[193,6,225,4,"WebSocketInterceptor"],[193,26,225,24],[193,27,225,25,"_unregisterEvents"],[193,44,225,42],[193,45,225,43],[193,46,225,44],[194,4,226,2],[195,2,227,0],[195,3,227,1],[196,2,229,0,"module"],[196,8,229,6],[196,9,229,7,"exports"],[196,16,229,14],[196,19,229,17,"WebSocketInterceptor"],[196,39,229,37],[197,0,229,38],[197,3]],"functionMap":{"names":["<global>","setCloseCallback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","isInterceptorEnabled","_unregisterEvents","subscriptions.forEach$argument_0","_registerEvents","eventEmitter.addListener$argument_1","enableInterception","NativeWebSocketModule.connect","NativeWebSocketModule.send","NativeWebSocketModule.sendBinary","NativeWebSocketModule.close","_arrayBufferToString","disableInterception"],"mappings":"AAA;EC0C;GDE;EEK;GFE;EGK;GHE;EIK;GJE;EKK;GLE;EMK;GNE;EOK;GPE;EQE;GRE;ESE;0BCC,eD;GTE;EWK;mDCE;ODS;gDCC;ODI;kDCC;ODI;kDCC;ODI;GXE;EaE;oCCc;KDU;iCEI;KFK;uCGI;KHK;kCII;KJS;GbG;EkBE;GlBa;EmBG;GnBmB"}},"type":"js/module"}]}