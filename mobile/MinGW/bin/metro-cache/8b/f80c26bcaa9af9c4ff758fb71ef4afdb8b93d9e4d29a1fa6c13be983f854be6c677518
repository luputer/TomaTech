{"dependencies":[{"name":"../ReactNative/I18nManager","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":20},"end":{"line":13,"column":57}}],"key":"U36v8RHnLXL3XXTrCQ30X31W4I4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var I18nManager = require(_dependencyMap[0], \"../ReactNative/I18nManager\");\n  function resolveBoxStyle(prefix, style) {\n    var hasParts = false;\n    var result = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    };\n    var styleForAll = style[prefix];\n    if (styleForAll != null) {\n      for (var key of Object.keys(result)) {\n        result[key] = styleForAll;\n      }\n      hasParts = true;\n    }\n    var styleForHorizontal = style[prefix + 'Horizontal'];\n    if (styleForHorizontal != null) {\n      result.left = styleForHorizontal;\n      result.right = styleForHorizontal;\n      hasParts = true;\n    } else {\n      var styleForLeft = style[prefix + 'Left'];\n      if (styleForLeft != null) {\n        result.left = styleForLeft;\n        hasParts = true;\n      }\n      var styleForRight = style[prefix + 'Right'];\n      if (styleForRight != null) {\n        result.right = styleForRight;\n        hasParts = true;\n      }\n      var styleForEnd = style[prefix + 'End'];\n      if (styleForEnd != null) {\n        var constants = I18nManager.getConstants();\n        if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\n          result.left = styleForEnd;\n        } else {\n          result.right = styleForEnd;\n        }\n        hasParts = true;\n      }\n      var styleForStart = style[prefix + 'Start'];\n      if (styleForStart != null) {\n        var _constants = I18nManager.getConstants();\n        if (_constants.isRTL && _constants.doLeftAndRightSwapInRTL) {\n          result.right = styleForStart;\n        } else {\n          result.left = styleForStart;\n        }\n        hasParts = true;\n      }\n    }\n    var styleForVertical = style[prefix + 'Vertical'];\n    if (styleForVertical != null) {\n      result.bottom = styleForVertical;\n      result.top = styleForVertical;\n      hasParts = true;\n    } else {\n      var styleForBottom = style[prefix + 'Bottom'];\n      if (styleForBottom != null) {\n        result.bottom = styleForBottom;\n        hasParts = true;\n      }\n      var styleForTop = style[prefix + 'Top'];\n      if (styleForTop != null) {\n        result.top = styleForTop;\n        hasParts = true;\n      }\n    }\n    return hasParts ? result : null;\n  }\n  module.exports = resolveBoxStyle;\n});","lineCount":77,"map":[[2,2,11,0],[2,14,11,12],[4,2,13,0],[4,6,13,6,"I18nManager"],[4,17,13,17],[4,20,13,20,"require"],[4,27,13,27],[4,28,13,27,"_dependencyMap"],[4,42,13,27],[4,75,13,56],[4,76,13,57],[5,2,25,0],[5,11,25,9,"resolveBoxStyle"],[5,26,25,24,"resolveBoxStyle"],[5,27,26,2,"prefix"],[5,33,26,16],[5,35,27,2,"style"],[5,40,27,15],[5,42,33,4],[6,4,34,2],[6,8,34,6,"hasParts"],[6,16,34,14],[6,19,34,17],[6,24,34,22],[7,4,35,2],[7,8,35,8,"result"],[7,14,35,14],[7,17,35,17],[8,6,36,4,"bottom"],[8,12,36,10],[8,14,36,12],[8,15,36,13],[9,6,37,4,"left"],[9,10,37,8],[9,12,37,10],[9,13,37,11],[10,6,38,4,"right"],[10,11,38,9],[10,13,38,11],[10,14,38,12],[11,6,39,4,"top"],[11,9,39,7],[11,11,39,9],[12,4,40,2],[12,5,40,3],[13,4,44,2],[13,8,44,8,"styleForAll"],[13,19,44,19],[13,22,44,22,"style"],[13,27,44,27],[13,28,44,28,"prefix"],[13,34,44,34],[13,35,44,35],[14,4,45,2],[14,8,45,6,"styleForAll"],[14,19,45,17],[14,23,45,21],[14,27,45,25],[14,29,45,27],[15,6,46,4],[15,11,46,9],[15,15,46,15,"key"],[15,18,46,18],[15,22,46,22,"Object"],[15,28,46,28],[15,29,46,29,"keys"],[15,33,46,33],[15,34,46,34,"result"],[15,40,46,40],[15,41,46,41],[15,43,46,43],[16,8,47,6,"result"],[16,14,47,12],[16,15,47,13,"key"],[16,18,47,16],[16,19,47,17],[16,22,47,20,"styleForAll"],[16,33,47,31],[17,6,48,4],[18,6,49,4,"hasParts"],[18,14,49,12],[18,17,49,15],[18,21,49,19],[19,4,50,2],[20,4,52,2],[20,8,52,8,"styleForHorizontal"],[20,26,52,26],[20,29,52,29,"style"],[20,34,52,34],[20,35,52,35,"prefix"],[20,41,52,41],[20,44,52,44],[20,56,52,56],[20,57,52,57],[21,4,53,2],[21,8,53,6,"styleForHorizontal"],[21,26,53,24],[21,30,53,28],[21,34,53,32],[21,36,53,34],[22,6,54,4,"result"],[22,12,54,10],[22,13,54,11,"left"],[22,17,54,15],[22,20,54,18,"styleForHorizontal"],[22,38,54,36],[23,6,55,4,"result"],[23,12,55,10],[23,13,55,11,"right"],[23,18,55,16],[23,21,55,19,"styleForHorizontal"],[23,39,55,37],[24,6,56,4,"hasParts"],[24,14,56,12],[24,17,56,15],[24,21,56,19],[25,4,57,2],[25,5,57,3],[25,11,57,9],[26,6,58,4],[26,10,58,10,"styleForLeft"],[26,22,58,22],[26,25,58,25,"style"],[26,30,58,30],[26,31,58,31,"prefix"],[26,37,58,37],[26,40,58,40],[26,46,58,46],[26,47,58,47],[27,6,59,4],[27,10,59,8,"styleForLeft"],[27,22,59,20],[27,26,59,24],[27,30,59,28],[27,32,59,30],[28,8,60,6,"result"],[28,14,60,12],[28,15,60,13,"left"],[28,19,60,17],[28,22,60,20,"styleForLeft"],[28,34,60,32],[29,8,61,6,"hasParts"],[29,16,61,14],[29,19,61,17],[29,23,61,21],[30,6,62,4],[31,6,64,4],[31,10,64,10,"styleForRight"],[31,23,64,23],[31,26,64,26,"style"],[31,31,64,31],[31,32,64,32,"prefix"],[31,38,64,38],[31,41,64,41],[31,48,64,48],[31,49,64,49],[32,6,65,4],[32,10,65,8,"styleForRight"],[32,23,65,21],[32,27,65,25],[32,31,65,29],[32,33,65,31],[33,8,66,6,"result"],[33,14,66,12],[33,15,66,13,"right"],[33,20,66,18],[33,23,66,21,"styleForRight"],[33,36,66,34],[34,8,67,6,"hasParts"],[34,16,67,14],[34,19,67,17],[34,23,67,21],[35,6,68,4],[36,6,70,4],[36,10,70,10,"styleForEnd"],[36,21,70,21],[36,24,70,24,"style"],[36,29,70,29],[36,30,70,30,"prefix"],[36,36,70,36],[36,39,70,39],[36,44,70,44],[36,45,70,45],[37,6,71,4],[37,10,71,8,"styleForEnd"],[37,21,71,19],[37,25,71,23],[37,29,71,27],[37,31,71,29],[38,8,72,6],[38,12,72,12,"constants"],[38,21,72,21],[38,24,72,24,"I18nManager"],[38,35,72,35],[38,36,72,36,"getConstants"],[38,48,72,48],[38,49,72,49],[38,50,72,50],[39,8,73,6],[39,12,73,10,"constants"],[39,21,73,19],[39,22,73,20,"isRTL"],[39,27,73,25],[39,31,73,29,"constants"],[39,40,73,38],[39,41,73,39,"doLeftAndRightSwapInRTL"],[39,64,73,62],[39,66,73,64],[40,10,74,8,"result"],[40,16,74,14],[40,17,74,15,"left"],[40,21,74,19],[40,24,74,22,"styleForEnd"],[40,35,74,33],[41,8,75,6],[41,9,75,7],[41,15,75,13],[42,10,76,8,"result"],[42,16,76,14],[42,17,76,15,"right"],[42,22,76,20],[42,25,76,23,"styleForEnd"],[42,36,76,34],[43,8,77,6],[44,8,78,6,"hasParts"],[44,16,78,14],[44,19,78,17],[44,23,78,21],[45,6,79,4],[46,6,80,4],[46,10,80,10,"styleForStart"],[46,23,80,23],[46,26,80,26,"style"],[46,31,80,31],[46,32,80,32,"prefix"],[46,38,80,38],[46,41,80,41],[46,48,80,48],[46,49,80,49],[47,6,81,4],[47,10,81,8,"styleForStart"],[47,23,81,21],[47,27,81,25],[47,31,81,29],[47,33,81,31],[48,8,82,6],[48,12,82,12,"constants"],[48,22,82,21],[48,25,82,24,"I18nManager"],[48,36,82,35],[48,37,82,36,"getConstants"],[48,49,82,48],[48,50,82,49],[48,51,82,50],[49,8,83,6],[49,12,83,10,"constants"],[49,22,83,19],[49,23,83,20,"isRTL"],[49,28,83,25],[49,32,83,29,"constants"],[49,42,83,38],[49,43,83,39,"doLeftAndRightSwapInRTL"],[49,66,83,62],[49,68,83,64],[50,10,84,8,"result"],[50,16,84,14],[50,17,84,15,"right"],[50,22,84,20],[50,25,84,23,"styleForStart"],[50,38,84,36],[51,8,85,6],[51,9,85,7],[51,15,85,13],[52,10,86,8,"result"],[52,16,86,14],[52,17,86,15,"left"],[52,21,86,19],[52,24,86,22,"styleForStart"],[52,37,86,35],[53,8,87,6],[54,8,88,6,"hasParts"],[54,16,88,14],[54,19,88,17],[54,23,88,21],[55,6,89,4],[56,4,90,2],[57,4,92,2],[57,8,92,8,"styleForVertical"],[57,24,92,24],[57,27,92,27,"style"],[57,32,92,32],[57,33,92,33,"prefix"],[57,39,92,39],[57,42,92,42],[57,52,92,52],[57,53,92,53],[58,4,93,2],[58,8,93,6,"styleForVertical"],[58,24,93,22],[58,28,93,26],[58,32,93,30],[58,34,93,32],[59,6,94,4,"result"],[59,12,94,10],[59,13,94,11,"bottom"],[59,19,94,17],[59,22,94,20,"styleForVertical"],[59,38,94,36],[60,6,95,4,"result"],[60,12,95,10],[60,13,95,11,"top"],[60,16,95,14],[60,19,95,17,"styleForVertical"],[60,35,95,33],[61,6,96,4,"hasParts"],[61,14,96,12],[61,17,96,15],[61,21,96,19],[62,4,97,2],[62,5,97,3],[62,11,97,9],[63,6,98,4],[63,10,98,10,"styleForBottom"],[63,24,98,24],[63,27,98,27,"style"],[63,32,98,32],[63,33,98,33,"prefix"],[63,39,98,39],[63,42,98,42],[63,50,98,50],[63,51,98,51],[64,6,99,4],[64,10,99,8,"styleForBottom"],[64,24,99,22],[64,28,99,26],[64,32,99,30],[64,34,99,32],[65,8,100,6,"result"],[65,14,100,12],[65,15,100,13,"bottom"],[65,21,100,19],[65,24,100,22,"styleForBottom"],[65,38,100,36],[66,8,101,6,"hasParts"],[66,16,101,14],[66,19,101,17],[66,23,101,21],[67,6,102,4],[68,6,104,4],[68,10,104,10,"styleForTop"],[68,21,104,21],[68,24,104,24,"style"],[68,29,104,29],[68,30,104,30,"prefix"],[68,36,104,36],[68,39,104,39],[68,44,104,44],[68,45,104,45],[69,6,105,4],[69,10,105,8,"styleForTop"],[69,21,105,19],[69,25,105,23],[69,29,105,27],[69,31,105,29],[70,8,106,6,"result"],[70,14,106,12],[70,15,106,13,"top"],[70,18,106,16],[70,21,106,19,"styleForTop"],[70,32,106,30],[71,8,107,6,"hasParts"],[71,16,107,14],[71,19,107,17],[71,23,107,21],[72,6,108,4],[73,4,109,2],[74,4,111,2],[74,11,111,9,"hasParts"],[74,19,111,17],[74,22,111,20,"result"],[74,28,111,26],[74,31,111,29],[74,35,111,33],[75,2,112,0],[76,2,114,0,"module"],[76,8,114,6],[76,9,114,7,"exports"],[76,16,114,14],[76,19,114,17,"resolveBoxStyle"],[76,34,114,32],[77,0,114,33],[77,3]],"functionMap":{"names":["<global>","resolveBoxStyle"],"mappings":"AAA;ACwB;CDuF"}},"type":"js/module"}]}