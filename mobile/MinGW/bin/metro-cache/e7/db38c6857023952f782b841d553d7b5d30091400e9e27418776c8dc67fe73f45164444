{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":257,"column":25}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":257,"column":25}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0},"end":{"line":257,"column":25}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":61}}],"key":"FRYs8b/TcYb52f7GsizAy66txAY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var LogBoxSymbolication = _interopRequireWildcard(require(_dependencyMap[3], \"./LogBoxSymbolication\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(frame => ({\n      column: frame?.location?.column,\n      file: frame.fileName,\n      lineNumber: frame?.location?.row,\n      methodName: frame.content,\n      collapse: false\n    }));\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: frame?.file || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        if (this.symbolicated.status !== 'PENDING') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(data => {\n            this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n          }, error => {\n            this.updateStatus(error, null, null, callback);\n          });\n          if (this.componentStack != null && this.componentStackType === 'stack') {\n            this.updateComponentStackStatus(null, null, null, callback);\n            var componentStackFrames = convertComponentStateToStack(this.componentStack);\n            LogBoxSymbolication.symbolicate(componentStackFrames, []).then(data => {\n              this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), null, callback);\n            }, error => {\n              this.updateComponentStackStatus(error, null, null, callback);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = exports.default = LogBoxLog;\n});","lineCount":179,"map":[[9,2,20,0],[9,6,20,0,"LogBoxSymbolication"],[9,25,20,0],[9,28,20,0,"_interopRequireWildcard"],[9,51,20,0],[9,52,20,0,"require"],[9,59,20,0],[9,60,20,0,"_dependencyMap"],[9,74,20,0],[10,2,20,61],[10,11,20,61,"_getRequireWildcardCache"],[10,36,20,61,"e"],[10,37,20,61],[10,66,20,61,"WeakMap"],[10,73,20,61],[10,92,20,61,"r"],[10,93,20,61],[10,100,20,61,"WeakMap"],[10,107,20,61],[10,111,20,61,"t"],[10,112,20,61],[10,119,20,61,"WeakMap"],[10,126,20,61],[10,138,20,61,"_getRequireWildcardCache"],[10,162,20,61],[10,174,20,61,"_getRequireWildcardCache"],[10,175,20,61,"e"],[10,176,20,61],[10,187,20,61,"e"],[10,188,20,61],[10,191,20,61,"t"],[10,192,20,61],[10,195,20,61,"r"],[10,196,20,61],[10,201,20,61,"e"],[10,202,20,61],[11,2,20,61],[11,11,20,61,"_interopRequireWildcard"],[11,35,20,61,"e"],[11,36,20,61],[11,38,20,61,"r"],[11,39,20,61],[11,48,20,61,"r"],[11,49,20,61],[11,53,20,61,"e"],[11,54,20,61],[11,58,20,61,"e"],[11,59,20,61],[11,60,20,61,"__esModule"],[11,70,20,61],[11,79,20,61,"e"],[11,80,20,61],[11,95,20,61,"e"],[11,96,20,61],[11,119,20,61,"e"],[11,120,20,61],[11,145,20,61,"e"],[11,146,20,61],[11,157,20,61,"default"],[11,164,20,61],[11,166,20,61,"e"],[11,167,20,61],[11,175,20,61,"t"],[11,176,20,61],[11,179,20,61,"_getRequireWildcardCache"],[11,203,20,61],[11,204,20,61,"r"],[11,205,20,61],[11,212,20,61,"t"],[11,213,20,61],[11,217,20,61,"t"],[11,218,20,61],[11,219,20,61,"has"],[11,222,20,61],[11,223,20,61,"e"],[11,224,20,61],[11,234,20,61,"t"],[11,235,20,61],[11,236,20,61,"get"],[11,239,20,61],[11,240,20,61,"e"],[11,241,20,61],[11,248,20,61,"n"],[11,249,20,61],[11,254,20,61,"__proto__"],[11,263,20,61],[11,273,20,61,"a"],[11,274,20,61],[11,277,20,61,"Object"],[11,283,20,61],[11,284,20,61,"defineProperty"],[11,298,20,61],[11,302,20,61,"Object"],[11,308,20,61],[11,309,20,61,"getOwnPropertyDescriptor"],[11,333,20,61],[11,344,20,61,"u"],[11,345,20,61],[11,349,20,61,"e"],[11,350,20,61],[11,370,20,61,"u"],[11,371,20,61],[11,378,20,61,"hasOwnProperty"],[11,392,20,61],[11,393,20,61,"call"],[11,397,20,61],[11,398,20,61,"e"],[11,399,20,61],[11,401,20,61,"u"],[11,402,20,61],[11,411,20,61,"i"],[11,412,20,61],[11,415,20,61,"a"],[11,416,20,61],[11,419,20,61,"Object"],[11,425,20,61],[11,426,20,61,"getOwnPropertyDescriptor"],[11,450,20,61],[11,451,20,61,"e"],[11,452,20,61],[11,454,20,61,"u"],[11,455,20,61],[11,465,20,61,"i"],[11,466,20,61],[11,471,20,61,"i"],[11,472,20,61],[11,473,20,61,"get"],[11,476,20,61],[11,480,20,61,"i"],[11,481,20,61],[11,482,20,61,"set"],[11,485,20,61],[11,489,20,61,"Object"],[11,495,20,61],[11,496,20,61,"defineProperty"],[11,510,20,61],[11,511,20,61,"n"],[11,512,20,61],[11,514,20,61,"u"],[11,515,20,61],[11,517,20,61,"i"],[11,518,20,61],[11,522,20,61,"n"],[11,523,20,61],[11,524,20,61,"u"],[11,525,20,61],[11,529,20,61,"e"],[11,530,20,61],[11,531,20,61,"u"],[11,532,20,61],[11,544,20,61,"n"],[11,545,20,61],[11,546,20,61,"default"],[11,553,20,61],[11,556,20,61,"e"],[11,557,20,61],[11,559,20,61,"t"],[11,560,20,61],[11,564,20,61,"t"],[11,565,20,61],[11,566,20,61,"set"],[11,569,20,61],[11,570,20,61,"e"],[11,571,20,61],[11,573,20,61,"n"],[11,574,20,61],[11,577,20,61,"n"],[11,578,20,61],[12,2,28,0],[12,11,28,9,"convertComponentStateToStack"],[12,39,28,37,"convertComponentStateToStack"],[12,40,28,38,"componentStack"],[12,54,28,68],[12,56,28,77],[13,4,29,2],[13,11,29,9,"componentStack"],[13,25,29,23],[13,26,29,24,"map"],[13,29,29,27],[13,30,29,28,"frame"],[13,35,29,33],[13,40,29,38],[14,6,30,4,"column"],[14,12,30,10],[14,14,30,12,"frame"],[14,19,30,17],[14,21,30,19,"location"],[14,29,30,27],[14,31,30,29,"column"],[14,37,30,35],[15,6,31,4,"file"],[15,10,31,8],[15,12,31,10,"frame"],[15,17,31,15],[15,18,31,16,"fileName"],[15,26,31,24],[16,6,32,4,"lineNumber"],[16,16,32,14],[16,18,32,16,"frame"],[16,23,32,21],[16,25,32,23,"location"],[16,33,32,31],[16,35,32,33,"row"],[16,38,32,36],[17,6,33,4,"methodName"],[17,16,33,14],[17,18,33,16,"frame"],[17,23,33,21],[17,24,33,22,"content"],[17,31,33,29],[18,6,34,4,"collapse"],[18,14,34,12],[18,16,34,14],[19,4,35,2],[19,5,35,3],[19,6,35,4],[19,7,35,5],[20,2,36,0],[21,2,38,0],[21,11,38,9,"convertStackToComponentStack"],[21,39,38,37,"convertStackToComponentStack"],[21,40,38,38,"stack"],[21,45,38,50],[21,47,38,68],[22,4,39,2],[22,8,39,8,"componentStack"],[22,22,39,22],[22,25,39,25],[22,27,39,27],[23,4,40,2],[23,9,40,7],[23,13,40,11,"i"],[23,14,40,12],[23,17,40,15],[23,18,40,16],[23,20,40,18,"i"],[23,21,40,19],[23,24,40,22,"stack"],[23,29,40,27],[23,30,40,28,"length"],[23,36,40,34],[23,38,40,36,"i"],[23,39,40,37],[23,41,40,39],[23,43,40,41],[24,6,41,4],[24,10,41,10,"frame"],[24,15,41,15],[24,18,41,18,"stack"],[24,23,41,23],[24,24,41,24,"i"],[24,25,41,25],[24,26,41,26],[25,6,43,4],[25,10,43,8,"frame"],[25,15,43,13],[25,16,43,14,"lineNumber"],[25,26,43,24],[25,30,43,28],[25,34,43,32],[25,38,43,36,"frame"],[25,43,43,41],[25,44,43,42,"column"],[25,50,43,48],[25,54,43,52],[25,58,43,56],[25,60,43,58],[26,8,44,6,"componentStack"],[26,22,44,20],[26,23,44,21,"push"],[26,27,44,25],[26,28,44,26],[27,10,45,8,"fileName"],[27,18,45,16],[27,20,45,18,"frame"],[27,25,45,23],[27,27,45,25,"file"],[27,31,45,29],[27,35,45,33],[27,37,45,35],[28,10,46,8,"location"],[28,18,46,16],[28,20,46,18],[29,12,47,10,"row"],[29,15,47,13],[29,17,47,15,"frame"],[29,22,47,20],[29,23,47,21,"lineNumber"],[29,33,47,31],[30,12,48,10,"column"],[30,18,48,16],[30,20,48,18,"frame"],[30,25,48,23],[30,26,48,24,"column"],[31,10,49,8],[31,11,49,9],[32,10,50,8,"content"],[32,17,50,15],[32,19,50,17,"frame"],[32,24,50,22],[32,25,50,23,"methodName"],[32,35,50,33],[33,10,51,8,"collapse"],[33,18,51,16],[33,20,51,18],[34,8,52,6],[34,9,52,7],[34,10,52,8],[35,6,53,4],[36,4,54,2],[37,4,55,2],[37,11,55,9,"componentStack"],[37,25,55,23],[38,2,56,0],[39,2,56,1],[39,6,72,6,"LogBoxLog"],[39,15,72,15],[40,4,108,2],[40,13,108,2,"LogBoxLog"],[40,23,108,14,"data"],[40,27,108,33],[40,29,108,35],[41,6,108,35],[41,10,108,35,"_classCallCheck2"],[41,26,108,35],[41,27,108,35,"default"],[41,34,108,35],[41,42,108,35,"LogBoxLog"],[41,51,108,35],[42,6,108,35],[42,11,84,2,"symbolicated"],[42,23,84,14],[42,26,88,67],[43,8,89,4,"error"],[43,13,89,9],[43,15,89,11],[43,19,89,15],[44,8,90,4,"stack"],[44,13,90,9],[44,15,90,11],[44,19,90,15],[45,8,91,4,"status"],[45,14,91,10],[45,16,91,12],[46,6,92,2],[46,7,92,3],[47,6,92,3],[47,11,93,2,"symbolicatedComponentStack"],[47,37,93,28],[47,40,101,76],[48,8,102,4,"error"],[48,13,102,9],[48,15,102,11],[48,19,102,15],[49,8,103,4,"componentStack"],[49,22,103,18],[49,24,103,20],[49,28,103,24],[50,8,104,4,"status"],[50,14,104,10],[50,16,104,12],[51,6,105,2],[51,7,105,3],[52,6,109,4],[52,10,109,8],[52,11,109,9,"level"],[52,16,109,14],[52,19,109,17,"data"],[52,23,109,21],[52,24,109,22,"level"],[52,29,109,27],[53,6,110,4],[53,10,110,8],[53,11,110,9,"type"],[53,15,110,13],[53,18,110,16,"data"],[53,22,110,20],[53,23,110,21,"type"],[53,27,110,25],[54,6,111,4],[54,10,111,8],[54,11,111,9,"message"],[54,18,111,16],[54,21,111,19,"data"],[54,25,111,23],[54,26,111,24,"message"],[54,33,111,31],[55,6,112,4],[55,10,112,8],[55,11,112,9,"stack"],[55,16,112,14],[55,19,112,17,"data"],[55,23,112,21],[55,24,112,22,"stack"],[55,29,112,27],[56,6,113,4],[56,10,113,8],[56,11,113,9,"category"],[56,19,113,17],[56,22,113,20,"data"],[56,26,113,24],[56,27,113,25,"category"],[56,35,113,33],[57,6,114,4],[57,10,114,8],[57,11,114,9,"componentStack"],[57,25,114,23],[57,28,114,26,"data"],[57,32,114,30],[57,33,114,31,"componentStack"],[57,47,114,45],[58,6,115,4],[58,10,115,8],[58,11,115,9,"componentStackType"],[58,29,115,27],[58,32,115,30,"data"],[58,36,115,34],[58,37,115,35,"componentStackType"],[58,55,115,53],[58,59,115,57],[58,67,115,65],[59,6,116,4],[59,10,116,8],[59,11,116,9,"codeFrame"],[59,20,116,18],[59,23,116,21,"data"],[59,27,116,25],[59,28,116,26,"codeFrame"],[59,37,116,35],[60,6,117,4],[60,10,117,8],[60,11,117,9,"isComponentError"],[60,27,117,25],[60,30,117,28,"data"],[60,34,117,32],[60,35,117,33,"isComponentError"],[60,51,117,49],[61,6,118,4],[61,10,118,8],[61,11,118,9,"extraData"],[61,20,118,18],[61,23,118,21,"data"],[61,27,118,25],[61,28,118,26,"extraData"],[61,37,118,35],[62,6,119,4],[62,10,119,8],[62,11,119,9,"count"],[62,16,119,14],[62,19,119,17],[62,20,119,18],[63,6,120,4],[63,10,120,8],[63,11,120,9,"onNotificationPress"],[63,30,120,28],[63,33,120,31,"data"],[63,37,120,35],[63,38,120,36,"onNotificationPress"],[63,57,120,55],[64,4,121,2],[65,4,121,3],[65,15,121,3,"_createClass2"],[65,28,121,3],[65,29,121,3,"default"],[65,36,121,3],[65,38,121,3,"LogBoxLog"],[65,47,121,3],[66,6,121,3,"key"],[66,9,121,3],[67,6,121,3,"value"],[67,11,121,3],[67,13,123,2],[67,22,123,2,"incrementCount"],[67,36,123,16,"incrementCount"],[67,37,123,16],[67,39,123,25],[68,8,124,4],[68,12,124,8],[68,13,124,9,"count"],[68,18,124,14],[68,22,124,18],[68,23,124,19],[69,6,125,2],[70,4,125,3],[71,6,125,3,"key"],[71,9,125,3],[72,6,125,3,"value"],[72,11,125,3],[72,13,127,2],[72,22,127,2,"getAvailableStack"],[72,39,127,19,"getAvailableStack"],[72,40,127,19],[72,42,127,29],[73,8,128,4],[73,15,128,11],[73,19,128,15],[73,20,128,16,"symbolicated"],[73,32,128,28],[73,33,128,29,"status"],[73,39,128,35],[73,44,128,40],[73,54,128,50],[73,57,129,8],[73,61,129,12],[73,62,129,13,"symbolicated"],[73,74,129,25],[73,75,129,26,"stack"],[73,80,129,31],[73,83,130,8],[73,87,130,12],[73,88,130,13,"stack"],[73,93,130,18],[74,6,131,2],[75,4,131,3],[76,6,131,3,"key"],[76,9,131,3],[77,6,131,3,"value"],[77,11,131,3],[77,13,133,2],[77,22,133,2,"getAvailableComponentStack"],[77,48,133,28,"getAvailableComponentStack"],[77,49,133,28],[77,51,133,47],[78,8,134,4],[78,12,134,8],[78,16,134,12],[78,17,134,13,"componentStackType"],[78,35,134,31],[78,40,134,36],[78,48,134,44],[78,50,134,46],[79,10,135,6],[79,17,135,13],[79,21,135,17],[79,22,135,18,"componentStack"],[79,36,135,32],[80,8,136,4],[81,8,137,4],[81,15,137,11],[81,19,137,15],[81,20,137,16,"symbolicatedComponentStack"],[81,46,137,42],[81,47,137,43,"status"],[81,53,137,49],[81,58,137,54],[81,68,137,64],[81,71,138,8],[81,75,138,12],[81,76,138,13,"symbolicatedComponentStack"],[81,102,138,39],[81,103,138,40,"componentStack"],[81,117,138,54],[81,120,139,8],[81,124,139,12],[81,125,139,13,"componentStack"],[81,139,139,27],[82,6,140,2],[83,4,140,3],[84,6,140,3,"key"],[84,9,140,3],[85,6,140,3,"value"],[85,11,140,3],[85,13,142,2],[85,22,142,2,"retrySymbolicate"],[85,38,142,18,"retrySymbolicate"],[85,39,142,19,"callback"],[85,47,142,67],[85,49,142,75],[86,8,143,4],[86,12,143,8],[86,16,143,12],[86,17,143,13,"symbolicated"],[86,29,143,25],[86,30,143,26,"status"],[86,36,143,32],[86,41,143,37],[86,51,143,47],[86,53,143,49],[87,10,144,6,"LogBoxSymbolication"],[87,29,144,25],[87,30,144,26,"deleteStack"],[87,41,144,37],[87,42,144,38],[87,46,144,42],[87,47,144,43,"stack"],[87,52,144,48],[87,53,144,49],[88,10,145,6],[88,14,145,10],[88,15,145,11,"handleSymbolicate"],[88,32,145,28],[88,33,145,29,"callback"],[88,41,145,37],[88,42,145,38],[89,8,146,4],[90,6,147,2],[91,4,147,3],[92,6,147,3,"key"],[92,9,147,3],[93,6,147,3,"value"],[93,11,147,3],[93,13,149,2],[93,22,149,2,"symbolicate"],[93,33,149,13,"symbolicate"],[93,34,149,14,"callback"],[93,42,149,62],[93,44,149,70],[94,8,150,4],[94,12,150,8],[94,16,150,12],[94,17,150,13,"symbolicated"],[94,29,150,25],[94,30,150,26,"status"],[94,36,150,32],[94,41,150,37],[94,47,150,43],[94,49,150,45],[95,10,151,6],[95,14,151,10],[95,15,151,11,"handleSymbolicate"],[95,32,151,28],[95,33,151,29,"callback"],[95,41,151,37],[95,42,151,38],[96,8,152,4],[97,6,153,2],[98,4,153,3],[99,6,153,3,"key"],[99,9,153,3],[100,6,153,3,"value"],[100,11,153,3],[100,13,155,2],[100,22,155,2,"handleSymbolicate"],[100,39,155,19,"handleSymbolicate"],[100,40,155,20,"callback"],[100,48,155,68],[100,50,155,76],[101,8,156,4],[101,12,156,8],[101,16,156,12],[101,17,156,13,"symbolicated"],[101,29,156,25],[101,30,156,26,"status"],[101,36,156,32],[101,41,156,37],[101,50,156,46],[101,52,156,48],[102,10,157,6],[102,14,157,10],[102,15,157,11,"updateStatus"],[102,27,157,23],[102,28,157,24],[102,32,157,28],[102,34,157,30],[102,38,157,34],[102,40,157,36],[102,44,157,40],[102,46,157,42,"callback"],[102,54,157,50],[102,55,157,51],[103,10,158,6,"LogBoxSymbolication"],[103,29,158,25],[103,30,158,26,"symbolicate"],[103,41,158,37],[103,42,158,38],[103,46,158,42],[103,47,158,43,"stack"],[103,52,158,48],[103,54,158,50],[103,58,158,54],[103,59,158,55,"extraData"],[103,68,158,64],[103,69,158,65],[103,70,158,66,"then"],[103,74,158,70],[103,75,159,8,"data"],[103,79,159,12],[103,83,159,16],[104,12,160,10],[104,16,160,14],[104,17,160,15,"updateStatus"],[104,29,160,27],[104,30,160,28],[104,34,160,32],[104,36,160,34,"data"],[104,40,160,38],[104,42,160,40,"stack"],[104,47,160,45],[104,49,160,47,"data"],[104,53,160,51],[104,55,160,53,"codeFrame"],[104,64,160,62],[104,66,160,64,"callback"],[104,74,160,72],[104,75,160,73],[105,10,161,8],[105,11,161,9],[105,13,162,8,"error"],[105,18,162,13],[105,22,162,17],[106,12,163,10],[106,16,163,14],[106,17,163,15,"updateStatus"],[106,29,163,27],[106,30,163,28,"error"],[106,35,163,33],[106,37,163,35],[106,41,163,39],[106,43,163,41],[106,47,163,45],[106,49,163,47,"callback"],[106,57,163,55],[106,58,163,56],[107,10,164,8],[107,11,165,6],[107,12,165,7],[108,10,166,6],[108,14,166,10],[108,18,166,14],[108,19,166,15,"componentStack"],[108,33,166,29],[108,37,166,33],[108,41,166,37],[108,45,166,41],[108,49,166,45],[108,50,166,46,"componentStackType"],[108,68,166,64],[108,73,166,69],[108,80,166,76],[108,82,166,78],[109,12,167,8],[109,16,167,12],[109,17,167,13,"updateComponentStackStatus"],[109,43,167,39],[109,44,167,40],[109,48,167,44],[109,50,167,46],[109,54,167,50],[109,56,167,52],[109,60,167,56],[109,62,167,58,"callback"],[109,70,167,66],[109,71,167,67],[110,12,168,8],[110,16,168,14,"componentStackFrames"],[110,36,168,34],[110,39,168,37,"convertComponentStateToStack"],[110,67,168,65],[110,68,169,10],[110,72,169,14],[110,73,169,15,"componentStack"],[110,87,170,8],[110,88,170,9],[111,12,171,8,"LogBoxSymbolication"],[111,31,171,27],[111,32,171,28,"symbolicate"],[111,43,171,39],[111,44,171,40,"componentStackFrames"],[111,64,171,60],[111,66,171,62],[111,68,171,64],[111,69,171,65],[111,70,171,66,"then"],[111,74,171,70],[111,75,172,10,"data"],[111,79,172,14],[111,83,172,18],[112,14,173,12],[112,18,173,16],[112,19,173,17,"updateComponentStackStatus"],[112,45,173,43],[112,46,174,14],[112,50,174,18],[112,52,175,14,"convertStackToComponentStack"],[112,80,175,42],[112,81,175,43,"data"],[112,85,175,47],[112,86,175,48,"stack"],[112,91,175,53],[112,92,175,54],[112,94,176,14],[112,98,176,18],[112,100,177,14,"callback"],[112,108,178,12],[112,109,178,13],[113,12,179,10],[113,13,179,11],[113,15,180,10,"error"],[113,20,180,15],[113,24,180,19],[114,14,181,12],[114,18,181,16],[114,19,181,17,"updateComponentStackStatus"],[114,45,181,43],[114,46,181,44,"error"],[114,51,181,49],[114,53,181,51],[114,57,181,55],[114,59,181,57],[114,63,181,61],[114,65,181,63,"callback"],[114,73,181,71],[114,74,181,72],[115,12,182,10],[115,13,183,8],[115,14,183,9],[116,10,184,6],[117,8,185,4],[118,6,186,2],[119,4,186,3],[120,6,186,3,"key"],[120,9,186,3],[121,6,186,3,"value"],[121,11,186,3],[121,13,188,2],[121,22,188,2,"updateStatus"],[121,34,188,14,"updateStatus"],[121,35,189,4,"error"],[121,40,189,17],[121,42,190,4,"stack"],[121,47,190,17],[121,49,191,4,"codeFrame"],[121,58,191,25],[121,60,192,4,"callback"],[121,68,192,52],[121,70,193,10],[122,8,194,4],[122,12,194,10,"lastStatus"],[122,22,194,20],[122,25,194,23],[122,29,194,27],[122,30,194,28,"symbolicated"],[122,42,194,40],[122,43,194,41,"status"],[122,49,194,47],[123,8,195,4],[123,12,195,8,"error"],[123,17,195,13],[123,21,195,17],[123,25,195,21],[123,27,195,23],[124,10,196,6],[124,14,196,10],[124,15,196,11,"symbolicated"],[124,27,196,23],[124,30,196,26],[125,12,197,8,"error"],[125,17,197,13],[126,12,198,8,"stack"],[126,17,198,13],[126,19,198,15],[126,23,198,19],[127,12,199,8,"status"],[127,18,199,14],[127,20,199,16],[128,10,200,6],[128,11,200,7],[129,8,201,4],[129,9,201,5],[129,15,201,11],[129,19,201,15,"stack"],[129,24,201,20],[129,28,201,24],[129,32,201,28],[129,34,201,30],[130,10,202,6],[130,14,202,10,"codeFrame"],[130,23,202,19],[130,25,202,21],[131,12,203,8],[131,16,203,12],[131,17,203,13,"codeFrame"],[131,26,203,22],[131,29,203,25,"codeFrame"],[131,38,203,34],[132,10,204,6],[133,10,206,6],[133,14,206,10],[133,15,206,11,"symbolicated"],[133,27,206,23],[133,30,206,26],[134,12,207,8,"error"],[134,17,207,13],[134,19,207,15],[134,23,207,19],[135,12,208,8,"stack"],[135,17,208,13],[136,12,209,8,"status"],[136,18,209,14],[136,20,209,16],[137,10,210,6],[137,11,210,7],[138,8,211,4],[138,9,211,5],[138,15,211,11],[139,10,212,6],[139,14,212,10],[139,15,212,11,"symbolicated"],[139,27,212,23],[139,30,212,26],[140,12,213,8,"error"],[140,17,213,13],[140,19,213,15],[140,23,213,19],[141,12,214,8,"stack"],[141,17,214,13],[141,19,214,15],[141,23,214,19],[142,12,215,8,"status"],[142,18,215,14],[142,20,215,16],[143,10,216,6],[143,11,216,7],[144,8,217,4],[145,8,219,4],[145,12,219,8,"callback"],[145,20,219,16],[145,24,219,20,"lastStatus"],[145,34,219,30],[145,39,219,35],[145,43,219,39],[145,44,219,40,"symbolicated"],[145,56,219,52],[145,57,219,53,"status"],[145,63,219,59],[145,65,219,61],[146,10,220,6,"callback"],[146,18,220,14],[146,19,220,15],[146,23,220,19],[146,24,220,20,"symbolicated"],[146,36,220,32],[146,37,220,33,"status"],[146,43,220,39],[146,44,220,40],[147,8,221,4],[148,6,222,2],[149,4,222,3],[150,6,222,3,"key"],[150,9,222,3],[151,6,222,3,"value"],[151,11,222,3],[151,13,224,2],[151,22,224,2,"updateComponentStackStatus"],[151,48,224,28,"updateComponentStackStatus"],[151,49,225,4,"error"],[151,54,225,17],[151,56,226,4,"componentStack"],[151,70,226,35],[151,72,227,4,"codeFrame"],[151,81,227,25],[151,83,228,4,"callback"],[151,91,228,52],[151,93,229,10],[152,8,230,4],[152,12,230,10,"lastStatus"],[152,22,230,20],[152,25,230,23],[152,29,230,27],[152,30,230,28,"symbolicatedComponentStack"],[152,56,230,54],[152,57,230,55,"status"],[152,63,230,61],[153,8,231,4],[153,12,231,8,"error"],[153,17,231,13],[153,21,231,17],[153,25,231,21],[153,27,231,23],[154,10,232,6],[154,14,232,10],[154,15,232,11,"symbolicatedComponentStack"],[154,41,232,37],[154,44,232,40],[155,12,233,8,"error"],[155,17,233,13],[156,12,234,8,"componentStack"],[156,26,234,22],[156,28,234,24],[156,32,234,28],[157,12,235,8,"status"],[157,18,235,14],[157,20,235,16],[158,10,236,6],[158,11,236,7],[159,8,237,4],[159,9,237,5],[159,15,237,11],[159,19,237,15,"componentStack"],[159,33,237,29],[159,37,237,33],[159,41,237,37],[159,43,237,39],[160,10,238,6],[160,14,238,10],[160,15,238,11,"symbolicatedComponentStack"],[160,41,238,37],[160,44,238,40],[161,12,239,8,"error"],[161,17,239,13],[161,19,239,15],[161,23,239,19],[162,12,240,8,"componentStack"],[162,26,240,22],[163,12,241,8,"status"],[163,18,241,14],[163,20,241,16],[164,10,242,6],[164,11,242,7],[165,8,243,4],[165,9,243,5],[165,15,243,11],[166,10,244,6],[166,14,244,10],[166,15,244,11,"symbolicatedComponentStack"],[166,41,244,37],[166,44,244,40],[167,12,245,8,"error"],[167,17,245,13],[167,19,245,15],[167,23,245,19],[168,12,246,8,"componentStack"],[168,26,246,22],[168,28,246,24],[168,32,246,28],[169,12,247,8,"status"],[169,18,247,14],[169,20,247,16],[170,10,248,6],[170,11,248,7],[171,8,249,4],[172,8,251,4],[172,12,251,8,"callback"],[172,20,251,16],[172,24,251,20,"lastStatus"],[172,34,251,30],[172,39,251,35],[172,43,251,39],[172,44,251,40,"symbolicatedComponentStack"],[172,70,251,66],[172,71,251,67,"status"],[172,77,251,73],[172,79,251,75],[173,10,252,6,"callback"],[173,18,252,14],[173,19,252,15],[173,23,252,19],[173,24,252,20,"symbolicatedComponentStack"],[173,50,252,46],[173,51,252,47,"status"],[173,57,252,53],[173,58,252,54],[174,8,253,4],[175,6,254,2],[176,4,254,3],[177,2,254,3],[178,2,254,3],[178,6,254,3,"_default"],[178,14,254,3],[178,17,254,3,"exports"],[178,24,254,3],[178,25,254,3,"default"],[178,32,254,3],[178,35,257,15,"LogBoxLog"],[178,44,257,24],[179,0,257,24],[179,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECoC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLK;EME;GNI;EOE;QCI;SDE;QEC;SFE;UCQ;WDO;UEC;WFE;GPI;EUE;GVkC;EWE;GX8B;CJC"}},"type":"js/module"}]}