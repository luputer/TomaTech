{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isTypedRoute = exports.stripInvisibleSegmentsFromPath = exports.stripGroupSegmentsFromPath = exports.removeFileSystemDots = exports.removeSupportedExtensions = exports.getContextKey = exports.getNameFromFilePath = exports.matchArrayGroupName = exports.matchLastGroupName = exports.matchGroupName = exports.testNotFound = exports.matchDeepDynamicRouteName = exports.matchDynamicName = void 0;\n  /** Match `[page]` -> `page` */\n  function matchDynamicName(name) {\n    // Don't match `...` or `[` or `]` inside the brackets\n    // eslint-disable-next-line no-useless-escape\n    return name.match(/^\\[([^[\\](?:\\.\\.\\.)]+?)\\]$/)?.[1];\n  }\n  exports.matchDynamicName = matchDynamicName;\n  /** Match `[...page]` -> `page` */\n  function matchDeepDynamicRouteName(name) {\n    return name.match(/^\\[\\.\\.\\.([^/]+?)\\]$/)?.[1];\n  }\n  exports.matchDeepDynamicRouteName = matchDeepDynamicRouteName;\n  /** Test `/` -> `page` */\n  function testNotFound(name) {\n    return /\\+not-found$/.test(name);\n  }\n  exports.testNotFound = testNotFound;\n  /** Match `(page)` -> `page` */\n  function matchGroupName(name) {\n    return name.match(/^(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+)\\).*?$/)?.[1];\n  }\n  exports.matchGroupName = matchGroupName;\n  /** Match `(app)/(page)` -> `page` */\n  function matchLastGroupName(name) {\n    return name.match(/.*(?:\\/|^)\\(([^\\\\/\\s]+)\\)[^\\s]*$/)?.[1];\n  }\n  exports.matchLastGroupName = matchLastGroupName;\n  /** Match the first array group name `(a,b,c)/(d,c)` -> `'a,b,c'` */\n  function matchArrayGroupName(name) {\n    return name.match(/(?:[^\\\\(\\\\)])*?\\(([^\\\\/]+,[^\\\\/]+)\\).*?$/)?.[1];\n  }\n  exports.matchArrayGroupName = matchArrayGroupName;\n  function getNameFromFilePath(name) {\n    return removeSupportedExtensions(removeFileSystemDots(name));\n  }\n  exports.getNameFromFilePath = getNameFromFilePath;\n  function getContextKey(name) {\n    // The root path is `` (empty string) so always prepend `/` to ensure\n    // there is some value.\n    var normal = '/' + getNameFromFilePath(name);\n    if (!normal.endsWith('_layout')) {\n      return normal;\n    }\n    return normal.replace(/\\/?_layout$/, '');\n  }\n  exports.getContextKey = getContextKey;\n  /** Remove `.js`, `.ts`, `.jsx`, `.tsx` */\n  function removeSupportedExtensions(name) {\n    return name.replace(/(\\+api)?\\.[jt]sx?$/g, '');\n  }\n  exports.removeSupportedExtensions = removeSupportedExtensions;\n  // Remove any amount of `./` and `../` from the start of the string\n  function removeFileSystemDots(filePath) {\n    return filePath.replace(/^(?:\\.\\.?\\/)+/g, '');\n  }\n  exports.removeFileSystemDots = removeFileSystemDots;\n  function stripGroupSegmentsFromPath(path) {\n    return path.split('/').reduce((acc, v) => {\n      if (matchGroupName(v) == null) {\n        acc.push(v);\n      }\n      return acc;\n    }, []).join('/');\n  }\n  exports.stripGroupSegmentsFromPath = stripGroupSegmentsFromPath;\n  function stripInvisibleSegmentsFromPath(path) {\n    return stripGroupSegmentsFromPath(path).replace(/\\/?index$/, '');\n  }\n  exports.stripInvisibleSegmentsFromPath = stripInvisibleSegmentsFromPath;\n  /**\n   * Match:\n   *  - _layout files, +html, +not-found, string+api, etc\n   *  - Routes can still use `+`, but it cannot be in the last segment.\n   */\n  function isTypedRoute(name) {\n    return !name.startsWith('+') && name.match(/(_layout|[^/]*?\\+[^/]*?)\\.[tj]sx?$/) === null;\n  }\n  exports.isTypedRoute = isTypedRoute;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"isTypedRoute"],[7,22,3,20],[7,25,3,23,"exports"],[7,32,3,30],[7,33,3,31,"stripInvisibleSegmentsFromPath"],[7,63,3,61],[7,66,3,64,"exports"],[7,73,3,71],[7,74,3,72,"stripGroupSegmentsFromPath"],[7,100,3,98],[7,103,3,101,"exports"],[7,110,3,108],[7,111,3,109,"removeFileSystemDots"],[7,131,3,129],[7,134,3,132,"exports"],[7,141,3,139],[7,142,3,140,"removeSupportedExtensions"],[7,167,3,165],[7,170,3,168,"exports"],[7,177,3,175],[7,178,3,176,"getContextKey"],[7,191,3,189],[7,194,3,192,"exports"],[7,201,3,199],[7,202,3,200,"getNameFromFilePath"],[7,221,3,219],[7,224,3,222,"exports"],[7,231,3,229],[7,232,3,230,"matchArrayGroupName"],[7,251,3,249],[7,254,3,252,"exports"],[7,261,3,259],[7,262,3,260,"matchLastGroupName"],[7,280,3,278],[7,283,3,281,"exports"],[7,290,3,288],[7,291,3,289,"matchGroupName"],[7,305,3,303],[7,308,3,306,"exports"],[7,315,3,313],[7,316,3,314,"testNotFound"],[7,328,3,326],[7,331,3,329,"exports"],[7,338,3,336],[7,339,3,337,"matchDeepDynamicRouteName"],[7,364,3,362],[7,367,3,365,"exports"],[7,374,3,372],[7,375,3,373,"matchDynamicName"],[7,391,3,389],[7,394,3,392],[7,399,3,397],[7,400,3,398],[8,2,4,0],[9,2,5,0],[9,11,5,9,"matchDynamicName"],[9,27,5,25,"matchDynamicName"],[9,28,5,26,"name"],[9,32,5,30],[9,34,5,32],[10,4,6,4],[11,4,7,4],[12,4,8,4],[12,11,8,11,"name"],[12,15,8,15],[12,16,8,16,"match"],[12,21,8,21],[12,22,8,22],[12,50,8,50],[12,51,8,51],[12,54,8,54],[12,55,8,55],[12,56,8,56],[13,2,9,0],[14,2,10,0,"exports"],[14,9,10,7],[14,10,10,8,"matchDynamicName"],[14,26,10,24],[14,29,10,27,"matchDynamicName"],[14,45,10,43],[15,2,11,0],[16,2,12,0],[16,11,12,9,"matchDeepDynamicRouteName"],[16,36,12,34,"matchDeepDynamicRouteName"],[16,37,12,35,"name"],[16,41,12,39],[16,43,12,41],[17,4,13,4],[17,11,13,11,"name"],[17,15,13,15],[17,16,13,16,"match"],[17,21,13,21],[17,22,13,22],[17,44,13,44],[17,45,13,45],[17,48,13,48],[17,49,13,49],[17,50,13,50],[18,2,14,0],[19,2,15,0,"exports"],[19,9,15,7],[19,10,15,8,"matchDeepDynamicRouteName"],[19,35,15,33],[19,38,15,36,"matchDeepDynamicRouteName"],[19,63,15,61],[20,2,16,0],[21,2,17,0],[21,11,17,9,"testNotFound"],[21,23,17,21,"testNotFound"],[21,24,17,22,"name"],[21,28,17,26],[21,30,17,28],[22,4,18,4],[22,11,18,11],[22,25,18,25],[22,26,18,26,"test"],[22,30,18,30],[22,31,18,31,"name"],[22,35,18,35],[22,36,18,36],[23,2,19,0],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"testNotFound"],[24,22,20,20],[24,25,20,23,"testNotFound"],[24,37,20,35],[25,2,21,0],[26,2,22,0],[26,11,22,9,"matchGroupName"],[26,25,22,23,"matchGroupName"],[26,26,22,24,"name"],[26,30,22,28],[26,32,22,30],[27,4,23,4],[27,11,23,11,"name"],[27,15,23,15],[27,16,23,16,"match"],[27,21,23,21],[27,22,23,22],[27,57,23,57],[27,58,23,58],[27,61,23,61],[27,62,23,62],[27,63,23,63],[28,2,24,0],[29,2,25,0,"exports"],[29,9,25,7],[29,10,25,8,"matchGroupName"],[29,24,25,22],[29,27,25,25,"matchGroupName"],[29,41,25,39],[30,2,26,0],[31,2,27,0],[31,11,27,9,"matchLastGroupName"],[31,29,27,27,"matchLastGroupName"],[31,30,27,28,"name"],[31,34,27,32],[31,36,27,34],[32,4,28,4],[32,11,28,11,"name"],[32,15,28,15],[32,16,28,16,"match"],[32,21,28,21],[32,22,28,22],[32,56,28,56],[32,57,28,57],[32,60,28,60],[32,61,28,61],[32,62,28,62],[33,2,29,0],[34,2,30,0,"exports"],[34,9,30,7],[34,10,30,8,"matchLastGroupName"],[34,28,30,26],[34,31,30,29,"matchLastGroupName"],[34,49,30,47],[35,2,31,0],[36,2,32,0],[36,11,32,9,"matchArrayGroupName"],[36,30,32,28,"matchArrayGroupName"],[36,31,32,29,"name"],[36,35,32,33],[36,37,32,35],[37,4,33,4],[37,11,33,11,"name"],[37,15,33,15],[37,16,33,16,"match"],[37,21,33,21],[37,22,33,22],[37,64,33,64],[37,65,33,65],[37,68,33,68],[37,69,33,69],[37,70,33,70],[38,2,34,0],[39,2,35,0,"exports"],[39,9,35,7],[39,10,35,8,"matchArrayGroupName"],[39,29,35,27],[39,32,35,30,"matchArrayGroupName"],[39,51,35,49],[40,2,36,0],[40,11,36,9,"getNameFromFilePath"],[40,30,36,28,"getNameFromFilePath"],[40,31,36,29,"name"],[40,35,36,33],[40,37,36,35],[41,4,37,4],[41,11,37,11,"removeSupportedExtensions"],[41,36,37,36],[41,37,37,37,"removeFileSystemDots"],[41,57,37,57],[41,58,37,58,"name"],[41,62,37,62],[41,63,37,63],[41,64,37,64],[42,2,38,0],[43,2,39,0,"exports"],[43,9,39,7],[43,10,39,8,"getNameFromFilePath"],[43,29,39,27],[43,32,39,30,"getNameFromFilePath"],[43,51,39,49],[44,2,40,0],[44,11,40,9,"getContextKey"],[44,24,40,22,"getContextKey"],[44,25,40,23,"name"],[44,29,40,27],[44,31,40,29],[45,4,41,4],[46,4,42,4],[47,4,43,4],[47,8,43,10,"normal"],[47,14,43,16],[47,17,43,19],[47,20,43,22],[47,23,43,25,"getNameFromFilePath"],[47,42,43,44],[47,43,43,45,"name"],[47,47,43,49],[47,48,43,50],[48,4,44,4],[48,8,44,8],[48,9,44,9,"normal"],[48,15,44,15],[48,16,44,16,"endsWith"],[48,24,44,24],[48,25,44,25],[48,34,44,34],[48,35,44,35],[48,37,44,37],[49,6,45,8],[49,13,45,15,"normal"],[49,19,45,21],[50,4,46,4],[51,4,47,4],[51,11,47,11,"normal"],[51,17,47,17],[51,18,47,18,"replace"],[51,25,47,25],[51,26,47,26],[51,39,47,39],[51,41,47,41],[51,43,47,43],[51,44,47,44],[52,2,48,0],[53,2,49,0,"exports"],[53,9,49,7],[53,10,49,8,"getContextKey"],[53,23,49,21],[53,26,49,24,"getContextKey"],[53,39,49,37],[54,2,50,0],[55,2,51,0],[55,11,51,9,"removeSupportedExtensions"],[55,36,51,34,"removeSupportedExtensions"],[55,37,51,35,"name"],[55,41,51,39],[55,43,51,41],[56,4,52,4],[56,11,52,11,"name"],[56,15,52,15],[56,16,52,16,"replace"],[56,23,52,23],[56,24,52,24],[56,45,52,45],[56,47,52,47],[56,49,52,49],[56,50,52,50],[57,2,53,0],[58,2,54,0,"exports"],[58,9,54,7],[58,10,54,8,"removeSupportedExtensions"],[58,35,54,33],[58,38,54,36,"removeSupportedExtensions"],[58,63,54,61],[59,2,55,0],[60,2,56,0],[60,11,56,9,"removeFileSystemDots"],[60,31,56,29,"removeFileSystemDots"],[60,32,56,30,"filePath"],[60,40,56,38],[60,42,56,40],[61,4,57,4],[61,11,57,11,"filePath"],[61,19,57,19],[61,20,57,20,"replace"],[61,27,57,27],[61,28,57,28],[61,44,57,44],[61,46,57,46],[61,48,57,48],[61,49,57,49],[62,2,58,0],[63,2,59,0,"exports"],[63,9,59,7],[63,10,59,8,"removeFileSystemDots"],[63,30,59,28],[63,33,59,31,"removeFileSystemDots"],[63,53,59,51],[64,2,60,0],[64,11,60,9,"stripGroupSegmentsFromPath"],[64,37,60,35,"stripGroupSegmentsFromPath"],[64,38,60,36,"path"],[64,42,60,40],[64,44,60,42],[65,4,61,4],[65,11,61,11,"path"],[65,15,61,15],[65,16,62,9,"split"],[65,21,62,14],[65,22,62,15],[65,25,62,18],[65,26,62,19],[65,27,63,9,"reduce"],[65,33,63,15],[65,34,63,16],[65,35,63,17,"acc"],[65,38,63,20],[65,40,63,22,"v"],[65,41,63,23],[65,46,63,28],[66,6,64,8],[66,10,64,12,"matchGroupName"],[66,24,64,26],[66,25,64,27,"v"],[66,26,64,28],[66,27,64,29],[66,31,64,33],[66,35,64,37],[66,37,64,39],[67,8,65,12,"acc"],[67,11,65,15],[67,12,65,16,"push"],[67,16,65,20],[67,17,65,21,"v"],[67,18,65,22],[67,19,65,23],[68,6,66,8],[69,6,67,8],[69,13,67,15,"acc"],[69,16,67,18],[70,4,68,4],[70,5,68,5],[70,7,68,7],[70,9,68,9],[70,10,68,10],[70,11,69,9,"join"],[70,15,69,13],[70,16,69,14],[70,19,69,17],[70,20,69,18],[71,2,70,0],[72,2,71,0,"exports"],[72,9,71,7],[72,10,71,8,"stripGroupSegmentsFromPath"],[72,36,71,34],[72,39,71,37,"stripGroupSegmentsFromPath"],[72,65,71,63],[73,2,72,0],[73,11,72,9,"stripInvisibleSegmentsFromPath"],[73,41,72,39,"stripInvisibleSegmentsFromPath"],[73,42,72,40,"path"],[73,46,72,44],[73,48,72,46],[74,4,73,4],[74,11,73,11,"stripGroupSegmentsFromPath"],[74,37,73,37],[74,38,73,38,"path"],[74,42,73,42],[74,43,73,43],[74,44,73,44,"replace"],[74,51,73,51],[74,52,73,52],[74,63,73,63],[74,65,73,65],[74,67,73,67],[74,68,73,68],[75,2,74,0],[76,2,75,0,"exports"],[76,9,75,7],[76,10,75,8,"stripInvisibleSegmentsFromPath"],[76,40,75,38],[76,43,75,41,"stripInvisibleSegmentsFromPath"],[76,73,75,71],[77,2,76,0],[78,0,77,0],[79,0,78,0],[80,0,79,0],[81,0,80,0],[82,2,81,0],[82,11,81,9,"isTypedRoute"],[82,23,81,21,"isTypedRoute"],[82,24,81,22,"name"],[82,28,81,26],[82,30,81,28],[83,4,82,4],[83,11,82,11],[83,12,82,12,"name"],[83,16,82,16],[83,17,82,17,"startsWith"],[83,27,82,27],[83,28,82,28],[83,31,82,31],[83,32,82,32],[83,36,82,36,"name"],[83,40,82,40],[83,41,82,41,"match"],[83,46,82,46],[83,47,82,47],[83,83,82,83],[83,84,82,84],[83,89,82,89],[83,93,82,93],[84,2,83,0],[85,2,84,0,"exports"],[85,9,84,7],[85,10,84,8,"isTypedRoute"],[85,22,84,20],[85,25,84,23,"isTypedRoute"],[85,37,84,35],[86,0,84,36],[86,3]],"functionMap":{"names":["<global>","matchDynamicName","matchDeepDynamicRouteName","testNotFound","matchGroupName","matchLastGroupName","matchArrayGroupName","getNameFromFilePath","getContextKey","removeSupportedExtensions","removeFileSystemDots","stripGroupSegmentsFromPath","path.split.reduce$argument_0","stripInvisibleSegmentsFromPath","isTypedRoute"],"mappings":"AAA;ACI;CDI;AEG;CFE;AGG;CHE;AIG;CJE;AKG;CLE;AMG;CNE;AOE;CPE;AQE;CRQ;ASG;CTE;AUG;CVE;AWE;gBCG;KDK;CXE;AaE;CbE;AcO;CdE"}},"type":"js/module"}]}